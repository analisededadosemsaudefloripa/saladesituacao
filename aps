########################################################################################### 
#pacotes 
library(shiny)
library(ggplot2)
library(shinydashboard)
library(plotly)
library(leaflet)
library(magrittr)
library(htmltools)
#library(plyr)
library(readr)
library(stringr)
library(dplyr)
library(DT)
library(ggvis)




#Banco de dados para o mapa
acesso_dat <- read_csv("base_de_dados/transformadas/acesso_dat_final.csv", 
                       col_types = cols(BIENIO = col_factor(levels = c("2013/2014", 
                                                                       "2015/2016")), DISTRITO = col_factor(levels = c("Centro", 
                                                                                                                       "Continente", "Norte", "Sul"))))
########################################################################################### 
#Banco de dados de acesso
###########################################################################################
##Pacientes diferentes
###########################################################################################
#dados de pacientes diferentes por trimestre - florianópolis
pc_florianopolis <- read_csv("base_de_dados/transformadas/pacientes_diferentes/pc_florianopolis.csv", 
                             col_types = cols(VALOR = col_integer()))
pc_florianopolis$ESPECIALIDADE <- as.factor(pc_florianopolis$ESPECIALIDADE)
pc_florianopolis$TRIMESTRE <- as.factor(pc_florianopolis$TRIMESTRE)

#dados de pacientes diferentes por trimestre - distritos
pc_distrito <- read_csv("base_de_dados/transformadas/pacientes_diferentes/pc_distrito.csv", 
                        col_types = cols(VALOR = col_integer()))
pc_distrito$ESPECIALIDADE <- as.factor(pc_distrito$ESPECIALIDADE)
pc_distrito$TRIMESTRE <- as.factor(pc_distrito$TRIMESTRE)

#dados de pacientes diferentes por trimestre - cs
pc_cs <- read_csv("base_de_dados/transformadas/pacientes_diferentes/pc_cs.csv", 
                  col_types = cols(VALOR = col_integer()))
pc_cs$ESPECIALIDADE <- as.factor(pc_cs$ESPECIALIDADE)
pc_cs$TRIMESTRE <- as.factor(pc_cs$TRIMESTRE)

#dados de pacientes diferentes por trimestre - esf
pc_esf <- read_csv("base_de_dados/transformadas/pacientes_diferentes/pc_esf.csv", 
                   col_types = cols(VALOR = col_integer()))
pc_esf$ESPECIALIDADE <- as.factor(pc_esf$ESPECIALIDADE)
pc_esf$AREA <- as.factor(pc_esf$AREA)
pc_esf$TRIMESTRE <- as.factor(pc_esf$TRIMESTRE)
###########################################################################################
#Demanda espontânea
###########################################################################################
#dados de demanda espontänea por trimestre - florianópolis
perc_dem_cons_florianopolis <- read_csv("base_de_dados/transformadas/demanda_consulta/demanda_consulta_florianopolis.csv", 
                                  col_types = cols(VALOR = col_number()))
perc_dem_cons_florianopolis$TRIMESTRE <- as.factor(perc_dem_cons_florianopolis$TRIMESTRE)

#dados de demanda espontänea por trimestre - distritos
perc_dem_cons_distrito <- read_csv("base_de_dados/transformadas/demanda_consulta/demanda_consulta_distrito.csv", 
                             col_types = cols(VALOR = col_number()))
perc_dem_cons_distrito$TRIMESTRE <- as.factor(perc_dem_cons_distrito$TRIMESTRE)

#dados de demanda espontänea por trimestre - cs
perc_dem_cons_cs <- read_csv("base_de_dados/transformadas/demanda_consulta/demanda_consulta_cs.csv", 
                       col_types = cols(VALOR = col_number()))
perc_dem_cons_cs$TRIMESTRE <- as.factor(perc_dem_cons_cs$TRIMESTRE)

#dados de demanda espontänea por trimestre - esf
perc_dem_cons_esf <- read_csv("base_de_dados/transformadas/demanda_consulta/demanda_consulta_esf.csv", 
                        col_types = cols(VALOR = col_number()))
perc_dem_cons_esf$AREA <- as.factor(perc_dem_cons_esf$AREA)
perc_dem_cons_esf$TRIMESTRE <- as.factor(perc_dem_cons_esf$TRIMESTRE)

###########################################################################################
#Teste rápidos
###########################################################################################
#dados de testes rápidos por trimestre - florianópolis
teste_rap_florianopolis <- read_csv("base_de_dados/transformadas/testes_rapidos/testes_rapidos_florianopolis.csv", 
                                  col_types = cols(VALOR = col_number()))
teste_rap_florianopolis$TRIMESTRE <- as.factor(teste_rap_florianopolis$TRIMESTRE)

#dados de testes rápidos por trimestre - distritos
teste_rap_distrito <- read_csv("base_de_dados/transformadas/testes_rapidos/testes_rapidos_distrito.csv", 
                             col_types = cols(VALOR = col_number()))
teste_rap_distrito$TRIMESTRE <- as.factor(teste_rap_distrito$TRIMESTRE)

#dados de testes rápidos por trimestre - cs
teste_rap_cs <- read_csv("base_de_dados/transformadas/testes_rapidos/testes_rapidos_cs.csv", 
                       col_types = cols(VALOR = col_number()))
teste_rap_cs$TRIMESTRE <- as.factor(teste_rap_cs$TRIMESTRE)

#dados de testes rápidos por trimestre - esf
teste_rap_esf <- read_csv("base_de_dados/transformadas/testes_rapidos/testes_rapidos_esf.csv", 
                        col_types = cols(VALOR = col_number()))
teste_rap_esf$AREA <- as.factor(teste_rap_esf$AREA)
teste_rap_esf$TRIMESTRE <- as.factor(teste_rap_esf$TRIMESTRE)
###########################################################################################
##Falta em Consultas
###########################################################################################
faltas_florianopolis <- read_csv("base_de_dados/transformadas/faltas/faltas_florianopolis.csv", 
    col_types = cols(TIPO = col_factor(levels = c("PERCENTUAL_FALTAS_ODONTO", 
        "PERCENTUAL_FALTAS_ENF", "PERCENTUAL_FALTAS_MED")), VALOR = col_double()))
faltas_florianopolis$TRIMESTRE <- as.factor(faltas_florianopolis$TRIMESTRE)
faltas_distrito <- read_csv("base_de_dados/transformadas/faltas/faltas_distrito.csv", 
    col_types = cols(TIPO = col_factor(levels = c("PERCENTUAL_FALTAS_ODONTO", 
        "PERCENTUAL_FALTAS_ENF", "PERCENTUAL_FALTAS_MED")), VALOR = col_double()))
faltas_distrito$TRIMESTRE <- as.factor(faltas_distrito$TRIMESTRE)
faltas_distrito$DISTRITO <- as.factor(faltas_distrito$DISTRITO)
faltas_cs <- read_csv("base_de_dados/transformadas/faltas/faltas_cs.csv", 
    col_types = cols(TIPO = col_factor(levels = c("PERCENTUAL_FALTAS_ODONTO", 
        "PERCENTUAL_FALTAS_ENF", "PERCENTUAL_FALTAS_MED")), VALOR = col_double()))
faltas_cs$TRIMESTRE <- as.factor(faltas_cs$TRIMESTRE)
faltas_cs$DISTRITO <- as.factor(faltas_cs$DISTRITO)
faltas_cs$UNIDADE <- as.factor(faltas_cs$UNIDADE)
faltas_esf <- read_csv("base_de_dados/transformadas/faltas/faltas_esf.csv", 
    col_types = cols(TIPO = col_factor(levels = c("PERCENTUAL_FALTAS_ODONTO", 
        "PERCENTUAL_FALTAS_ENF", "PERCENTUAL_FALTAS_MED")), VALOR = col_double()))
faltas_esf$TRIMESTRE <- as.factor(faltas_esf$TRIMESTRE)
faltas_esf$DISTRITO <- as.factor(faltas_esf$DISTRITO)
faltas_esf$UNIDADE <- as.factor(faltas_esf$UNIDADE)
faltas_esf$AREA <- as.factor(faltas_esf$AREA)
###########################################################################################
##Primeira Consulta Odontológica
###########################################################################################
#dados de Primeira Consulta Odontológica por trimestre - florianópolis
prim_cons_odonto_florianopolis <- read_csv("base_de_dados/transformadas/prim_cons_odonto/prim_cons_odonto_florianopolis.csv", 
                                  col_types = cols(VALOR = col_integer()))
prim_cons_odonto_florianopolis$TRIMESTRE <- as.factor(prim_cons_odonto_florianopolis$TRIMESTRE)

#dados de Primeira Consulta Odontológica por trimestre - distritos
prim_cons_odonto_distrito <- read_csv("base_de_dados/transformadas/prim_cons_odonto/prim_cons_odonto_distrito.csv", 
                             col_types = cols(VALOR = col_integer()))
prim_cons_odonto_distrito$TRIMESTRE <- as.factor(prim_cons_odonto_distrito$TRIMESTRE)

#dados de Primeira Consulta Odontológica por trimestre - cs
prim_cons_odonto_cs <- read_csv("base_de_dados/transformadas/prim_cons_odonto/prim_cons_odonto_cs.csv", 
                       col_types = cols(VALOR = col_integer()))
prim_cons_odonto_cs$TRIMESTRE <- as.factor(prim_cons_odonto_cs$TRIMESTRE)

#dados de Primeira Consulta Odontológica por trimestre - esf
prim_cons_odonto_esf <- read_csv("base_de_dados/transformadas/prim_cons_odonto/prim_cons_odonto_esf.csv", 
                        col_types = cols(VALOR = col_integer()))
prim_cons_odonto_esf$AREA <- as.factor(prim_cons_odonto_esf$AREA)
prim_cons_odonto_esf$TRIMESTRE <- as.factor(prim_cons_odonto_esf$TRIMESTRE)
###########################################################################################
##Atendimentos Inadequados nas UPAS
###########################################################################################
#dados de testes rápidos por trimestre - florianópolis
atd_inad_upa_florianopolis <- read_csv("base_de_dados/transformadas/atd_inad_upa/atd_inad_upa_florianopolis.csv", 
                                  col_types = cols(VALOR = col_integer()))
atd_inad_upa_florianopolis$TRIMESTRE <- as.factor(atd_inad_upa_florianopolis$TRIMESTRE)

#dados de testes rápidos por trimestre - distritos
atd_inad_upa_distrito <- read_csv("base_de_dados/transformadas/atd_inad_upa/atd_inad_upa_distrito.csv", 
                             col_types = cols(VALOR = col_integer()))
atd_inad_upa_distrito$TRIMESTRE <- as.factor(atd_inad_upa_distrito$TRIMESTRE)

#dados de testes rápidos por trimestre - cs
atd_inad_upa_cs <- read_csv("base_de_dados/transformadas/atd_inad_upa/atd_inad_upa_cs.csv", 
                       col_types = cols(VALOR = col_integer()))
atd_inad_upa_cs$TRIMESTRE <- as.factor(atd_inad_upa_cs$TRIMESTRE)

#dados de testes rápidos por trimestre - esf
atd_inad_upa_esf <- read_csv("base_de_dados/transformadas/atd_inad_upa/atd_inad_upa_esf.csv", 
                        col_types = cols(VALOR = col_integer()))
atd_inad_upa_esf$AREA <- as.factor(atd_inad_upa_esf$AREA)
atd_inad_upa_esf$TRIMESTRE <- as.factor(atd_inad_upa_esf$TRIMESTRE)


########################################################################################### 
#Banco de dados de longitudinalidade
###########################################################################################
########################################################################################### 
#Seguimento Pré-natal
###########################################################################################

gestantes_florianopolis <- read_csv("base_de_dados/transformadas/gestantes/gestantes_florianopolis.csv")
gestantes_florianopolis$TRIMESTRE <- as.factor(gestantes_florianopolis$TRIMESTRE)
gestantes_florianopolis$TIPO <- as.factor(gestantes_florianopolis$TIPO)
gestantes_distrito <- read_csv("base_de_dados/transformadas/gestantes/gestantes_distrito.csv")
gestantes_distrito$DISTRITO <- as.factor(gestantes_distrito$DISTRITO)
gestantes_distrito$TRIMESTRE <- as.factor(gestantes_distrito$TRIMESTRE)
gestantes_distrito$TIPO <- as.factor(gestantes_distrito$TIPO)
gestantes_cs <- read_csv("base_de_dados/transformadas/gestantes/gestantes_cs.csv", 
                          col_types = cols(VALOR = col_number()))
gestantes_cs$DISTRITO <- as.factor(gestantes_cs$DISTRITO)
gestantes_cs$UNIDADE <- as.factor(gestantes_cs$UNIDADE)
gestantes_cs$TRIMESTRE <- as.factor(gestantes_cs$TRIMESTRE)
gestantes_cs$TIPO <- as.factor(gestantes_cs$TIPO)
gestantes_esf <- read_csv("base_de_dados/transformadas/gestantes/gestantes_esf.csv", 
                          col_types = cols(VALOR = col_number()))
gestantes_esf$AREA <- as.factor(gestantes_esf$AREA)

###########################################################################################
##Citopatológico
###########################################################################################
citopatologico_florianopolis <- read_csv("base_de_dados/transformadas/citopatologico/citopatologico_florianopolis.csv",
                                    col_types = cols(VALOR = col_double()))
citopatologico_distrito <- read_csv("base_de_dados/transformadas/citopatologico/citopatologico_distrito.csv", 
                               col_types = cols(VALOR = col_double()))
citopatologico_cs <- read_csv("base_de_dados/transformadas/citopatologico/citopatologico_cs.csv", 
                         col_types = cols(VALOR = col_double()))
citopatologico_esf <- read_csv("base_de_dados/transformadas/citopatologico/citopatologico_esf.csv", 
                          col_types = cols(VALOR = col_double()))
citopatologico_esf$AREA <- as.factor(citopatologico_esf$AREA)
###########################################################################################
##Tratamento Odontológico
###########################################################################################
tratam_compl_odonto_florianopolis <- read_csv("base_de_dados/transformadas/tratam_compl_odonto/tratam_compl_odonto_florianopolis.csv", 
                                  col_types = cols(VALOR = col_integer()))
tratam_compl_odonto_florianopolis$TRIMESTRE <- as.factor(tratam_compl_odonto_florianopolis$TRIMESTRE)

#dados de Primeira Consulta Odontológica por trimestre - distritos
tratam_compl_odonto_distrito <- read_csv("base_de_dados/transformadas/tratam_compl_odonto/tratam_compl_odonto_distrito.csv", 
                             col_types = cols(VALOR = col_integer()))
tratam_compl_odonto_distrito$TRIMESTRE <- as.factor(tratam_compl_odonto_distrito$TRIMESTRE)

#dados de Primeira Consulta Odontológica por trimestre - cs
tratam_compl_odonto_cs <- read_csv("base_de_dados/transformadas/tratam_compl_odonto/tratam_compl_odonto_cs.csv", 
                       col_types = cols(VALOR = col_integer()))
tratam_compl_odonto_cs$TRIMESTRE <- as.factor(tratam_compl_odonto_cs$TRIMESTRE)

#dados de Primeira Consulta Odontológica por trimestre - esf
tratam_compl_odonto_esf <- read_csv("base_de_dados/transformadas/tratam_compl_odonto/tratam_compl_odonto_esf.csv", 
                        col_types = cols(VALOR = col_integer()))
tratam_compl_odonto_esf$AREA <- as.factor(tratam_compl_odonto_esf$AREA)
tratam_compl_odonto_esf$TRIMESTRE <- as.factor(tratam_compl_odonto_esf$TRIMESTRE)
###########################################################################################
##Sífilis
###########################################################################################
sifilis_florianopolis <- read_csv("base_de_dados/transformadas/sifilis/sifilis_florianopolis.csv")
sifilis_florianopolis$TRIMESTRE <- as.factor(sifilis_florianopolis$TRIMESTRE)
sifilis_florianopolis$TIPO <- as.factor(sifilis_florianopolis$TIPO)
sifilis_distrito <- read_csv("base_de_dados/transformadas/sifilis/sifilis_distrito.csv")
sifilis_distrito$DISTRITO <- as.factor(sifilis_distrito$DISTRITO)
sifilis_distrito$TRIMESTRE <- as.factor(sifilis_distrito$TRIMESTRE)
sifilis_distrito$TIPO <- as.factor(sifilis_distrito$TIPO)
sifilis_cs <- read_csv("base_de_dados/transformadas/sifilis/sifilis_cs.csv", 
                          col_types = cols(VALOR = col_number()))
sifilis_cs$DISTRITO <- as.factor(sifilis_cs$DISTRITO)
sifilis_cs$UNIDADE <- as.factor(sifilis_cs$UNIDADE)
sifilis_cs$TRIMESTRE <- as.factor(sifilis_cs$TRIMESTRE)
sifilis_cs$TIPO <- as.factor(sifilis_cs$TIPO)
sifilis_esf <- read_csv("base_de_dados/transformadas/sifilis/sifilis_esf.csv", 
                          col_types = cols(VALOR = col_number()))
sifilis_esf$AREA <- as.factor(sifilis_esf$AREA)


########################################################################################### 
#Banco de dados de integralidade
###########################################################################################
########################################################################################### 
#Encaminhamentos Médicos
###########################################################################################
encam_med_florianopolis <- read_csv("base_de_dados/transformadas/encaminhamentos/encam_med_florianopolis.csv",
                                    col_types = cols(VALOR = col_double()))
encam_med_distrito <- read_csv("base_de_dados/transformadas/encaminhamentos/encam_med_distrito.csv", 
                               col_types = cols(VALOR = col_double()))
encam_med_cs <- read_csv("base_de_dados/transformadas/encaminhamentos/encam_med_cs.csv", 
                         col_types = cols(VALOR = col_double()))
encam_med_esf <- read_csv("base_de_dados/transformadas/encaminhamentos/encam_med_esf.csv", 
                          col_types = cols(VALOR = col_double()))
encam_med_esf$AREA <- as.factor(encam_med_esf$AREA)


########################################################################################### 
#Procedimentos Complementares
###########################################################################################
proc_compl_florianopolis <- read_csv("base_de_dados/transformadas/proc_compl/proc_compl_florianopolis.csv",
                                    col_types = cols(VALOR = col_double()))
proc_compl_distrito <- read_csv("base_de_dados/transformadas/proc_compl/proc_compl_distrito.csv", 
                               col_types = cols(VALOR = col_double()))
proc_compl_cs <- read_csv("base_de_dados/transformadas/proc_compl/proc_compl_cs.csv", 
                         col_types = cols(VALOR = col_double()))
proc_compl_esf <- read_csv("base_de_dados/transformadas/proc_compl/proc_compl_esf.csv", 
                          col_types = cols(VALOR = col_double()))
proc_compl_esf$AREA <- as.factor(proc_compl_esf$AREA)

########################################################################################### 
#Odonto gestantes
###########################################################################################

odonto_gestantes_florianopolis <- read_csv("base_de_dados/transformadas/odonto_gestantes/odonto_gestantes_florianopolis.csv")
odonto_gestantes_florianopolis$TRIMESTRE <- as.factor(odonto_gestantes_florianopolis$TRIMESTRE)
odonto_gestantes_florianopolis$TIPO <- as.factor(odonto_gestantes_florianopolis$TIPO)
odonto_gestantes_distrito <- read_csv("base_de_dados/transformadas/odonto_gestantes/odonto_gestantes_distrito.csv")
odonto_gestantes_distrito$DISTRITO <- as.factor(odonto_gestantes_distrito$DISTRITO)
odonto_gestantes_distrito$TRIMESTRE <- as.factor(odonto_gestantes_distrito$TRIMESTRE)
odonto_gestantes_distrito$TIPO <- as.factor(odonto_gestantes_distrito$TIPO)
odonto_gestantes_cs <- read_csv("base_de_dados/transformadas/odonto_gestantes/odonto_gestantes_cs.csv", 
                          col_types = cols(VALOR = col_number()))
odonto_gestantes_cs$DISTRITO <- as.factor(odonto_gestantes_cs$DISTRITO)
odonto_gestantes_cs$UNIDADE <- as.factor(odonto_gestantes_cs$UNIDADE)
odonto_gestantes_cs$TRIMESTRE <- as.factor(odonto_gestantes_cs$TRIMESTRE)
odonto_gestantes_cs$TIPO <- as.factor(odonto_gestantes_cs$TIPO)
odonto_gestantes_esf <- read_csv("base_de_dados/transformadas/odonto_gestantes/odonto_gestantes_esf.csv", 
                          col_types = cols(VALOR = col_number()))
odonto_gestantes_esf$AREA <- as.factor(odonto_gestantes_esf$AREA)


########################################################################################### 
ui <- dashboardPage(skin = "blue",
                    ########################################################################################### 
                    dashboardHeader(title = "Sala de Situação da APS - Versão para Teste", titleWidth = 550),
                    ########################################################################################### 
                    dashboardSidebar(
                      ########################################################################################### 
                      sidebarMenu(
                        menuItem("Apresentação", tabName = "apresentacao", icon = icon("heartbeat")),
                        menuItem("Florianóplis", icon = icon("dashboard"),  
                                 menuItem("Acesso", tabName = "acesso_florianopolis"),
                                        menuSubItem("Pacientes Diferentes", tabName = "pc_dif_florianopolis"),
                                        menuSubItem("Demanda Espontânea", tabName = "perc_dem_cons_florianopolis"),
                                        menuSubItem("Teste Rápido", tabName = "teste_rap_florianopolis"),
                                        menuSubItem("Faltas em Consultas", tabName = "faltas_cons_florianopolis" ),
                                        menuSubItem("Prim. Cons. Odonto", tabName = "prim_cons_odonto_florianopolis"),
                                        menuSubItem("Atend. Inadequado UPA", tabName = "atd_inad_upa_florianopolis"),
                                 menuItem("Longitudinalidade", tabName = "longitudinalidade_florianopolis"),
                                        menuSubItem("Seguimento Pré-natal", tabName = "seg_prenat_florianopolis"),
                                        menuSubItem("Citopatológico", tabName = "cito_florianopolis"),
                                        menuSubItem("Tratamento Odonto", tabName = "tratam_compl_odonto_florianopolis"),
                                        menuSubItem("Sífilis", tabName = "sifilis_florianopolis"),
                                 menuItem("Integralidade", tabName = "integralidade_florianopolis"),
                                        menuSubItem("Encaminhamentos", tabName = "encam_med_florianopolis"),
                                        menuSubItem("Proced. Complementares", tabName = "proc_compl_florianopolis"),
                                        menuSubItem("Odont. Gestantes", tabName = "odont_gestantes_florianopolis")),
                        menuItem("Distritos", icon = icon("dashboard"),  
                                 menuItem("Acesso", tabName = "acesso_distrito"),
                                        menuSubItem("Pacientes Diferentes", tabName = "pc_dif_distrito"),
                                        menuSubItem("Demanda Espontânea", tabName = "perc_dem_cons_distrito"),
                                        menuSubItem("Teste Rápido", tabName = "teste_rap_distrito"),
                                        menuSubItem("Faltas em Consultas", tabName = "faltas_cons_distrito"),
                                        menuSubItem("Prim. Cons. Odonto", tabName = "prim_cons_odonto_distrito"),
                                        menuSubItem("Atend. Inadequado UPA", tabName = "atd_inad_upa_distrito"),
                                 menuItem("Longitudinalidade", tabName = "longitudinalidade_distrito"),
                                        menuSubItem("Seguimento Pré-natal", tabName = "seg_prenat_distrito"),
                                        menuSubItem("Citopatológico", tabName = "cito_distrito"),
                                        menuSubItem("Tratamento Odonto", tabName = "tratam_compl_odonto_distrito"),
                                        menuSubItem("Sífilis", tabName = "sifilis_distrito"),
                                 menuItem("Integralidade", tabName = "integralidade_distrito"),
                                        menuSubItem("Encaminhamentos", tabName = "encam_med_distrito"),
                                        menuSubItem("Proced. Complementares", tabName = "proc_compl_distrito"),
                                        menuSubItem("Odont. Gestantes", tabName = "odont_gestantes_distrito")),
                        menuItem("Centros de Saúde", icon = icon("dashboard"),  
                                 menuItem("Acesso", tabName = "acesso_cs"),
                                        menuSubItem("Pacientes Diferentes", tabName = "pc_dif_cs"),
                                        menuSubItem("Demanda Espontânea", tabName = "perc_dem_cons_cs"),
                                        menuSubItem("Teste Rápido", tabName = "teste_rap_cs"),
                                        menuSubItem("Faltas em Consultas", tabName = "faltas_cons_cs"),
                                        menuSubItem("Prim. Cons. Odonto", tabName = "prim_cons_odonto_cs"),
                                        menuSubItem("Atend. Inadequado UPA", tabName = "atd_inad_upa_cs"),
                                 menuItem("Longitudinalidade", tabName = "longitudinalidade_cs"),
                                        menuSubItem("Seguimento Pré-natal", tabName = "seg_prenat_cs"),
                                        menuSubItem("Citopatológico", tabName = "cito_cs"),
                                        menuSubItem("Tratamento Odonto", tabName = "tratam_compl_odonto_cs"),
                                        menuSubItem("Sífilis", tabName = "sifilis_cs"),
                                 menuItem("Integralidade", tabName = "integralidade_cs"),
                                        menuSubItem("Encaminhamentos", tabName = "encam_med_cs"),
                                        menuSubItem("Proced. Complementares", tabName = "proc_compl_cs"),
                                        menuSubItem("Odont. Gestantes", tabName = "odont_gestantes_cs")),
                        menuItem("Equipes", icon = icon("dashboard"),  
                                 menuItem("Acesso", tabName = "acesso_esf"),
                                        menuSubItem("Pacientes Diferentes", tabName = "pc_dif_esf"),
                                        menuSubItem("Demanda Espontânea", tabName = "demanda_consulta_esf"),
                                        menuSubItem("Teste Rápido", tabName = "teste_rapido_esf"),
                                        menuSubItem("Faltas em Consultas", tabName = "faltas_cons_esf"),
                                        menuSubItem("Prim. Cons. Odonto", tabName = "prim_cons_odonto_esf"),
                                        menuSubItem("Atend. Inadequado UPA", tabName = "atd_inad_upa_esf"),
                                 menuItem("Longitudinalidade", tabName = "longitudinalidade_esf"),
                                        menuSubItem("Seguimento Pré-natal", tabName = "seg_prenat_esf"),
                                        menuSubItem("Citopatológico", tabName = "cito_esf"),
                                        menuSubItem("Tratamento Odonto", tabName = "tratam_compl_odonto_esf"),
                                        menuSubItem("Sífilis", tabName = "sifilis_esf"),
                                 menuItem("Integralidade", tabName = "integralidade_esf"),
                                        menuSubItem("Encaminhamentos", tabName = "encam_med_esf"), 
                                        menuSubItem("Proced. Complementares", tabName = "proc_compl_esf"),
                                        menuSubItem("Odont. Gestantes", tabName = "odont_gestantes_esf")),
                        menuItem("Instruções", icon = icon("question-circle"),
                                 href = "https://github.com/analisededadosemsaudefloripa/saladesituacao/wiki/Instru%C3%A7%C3%B5es-para-Utiliza%C3%A7%C3%A3o-das-Salas-de-Situa%C3%A7%C3%A3o-em-Sa%C3%BAde"),
                        #menuItem("Dados", icon = icon("database"),
                                 #href = "http://floripadadosabertos.univille.br/"),
                        menuItem("Código-fonte", icon = icon("code"), 
                                 href = "https://github.com/analisededadosemsaudefloripa/saladesituacao/blob/master/aps"),
                        menuItem("Licença de Uso", icon = icon("cc"), 
                                 href = "https://github.com/analisededadosemsaudefloripa/saladesituacao/blob/atencao_primaria/LICENSE")
                      )
                    ),
                    ########################################################################################### 
                    dashboardBody(
                      tabItems(
                        ########################################################################################### 
                        #Apresentação
                        tabItem(tabName = "apresentacao", h2("Atenção Primária em Florianópolis"),
                                fluidRow(
                                  mainPanel(
                                    p("A atenção primária é uma estratégia de organização da atenção à saúde voltada para responder de forma regionalizada, contínua e sistematizada à maior parte das necessidades de saúde de uma população."),
                                    p("No Brasil, seu principal efetor são as equipes de saúde da família."),
                                    p("Florianópolis destaca-se nacionalmente por ser a única capital com 100% de cobertura de atenção primária e por possuir os melhores resultados no PMAQ."),
                                    p("Ela é composta por Centros de Saúde, dividios em distritos sanitários. Cada 
                                      Centro de Saúde, por sua vez, é formado por uma ou mais Equipes de Saúde da Família.
                                      Informações básicas sobre os centros de saúde podem ser vistas no mapa a seguir.")
                                    )
                                    ),
                                fluidRow(
                                  box(title = "Mapa", status = "primary", width=12, solidHeader = T, collapsible = T, leafletOutput("localizacao_cs", height = 400))
                                )
                                  ),
                        ###########################################################################################
                        #Florianópolis
                        ###########################################################################################                         
                        
                        ###########################################################################################                         
                        #Dashboard Florianópolis Acesso                                                           
                        ###########################################################################################
                        ###########################################################################################                         
                        #Pacientes Difererentes                                                           
                        ###########################################################################################
                        tabItem(tabName = "pc_dif_florianopolis", h2("Acesso à Atenção Primária em Florianópolis"),
                                
                                fluidRow(
                                  box(selectInput(
                                    inputId="pc_dif_florianopolis_especialidade",
                                    label="Selecione o Tipo de Atendimento:",
                                    choices=list("Médico" = "Médico", "Enfermeiro" = "Enfermeiro", "Odontólogo" = "Odontólogo",
                                                 "Outros" = "Outros", "Médico e Enfermeiro" = "Médico e Enfermeiro", "Total" = "Total"),
                                    selected="Total"),
                                    width = 12, status = "primary")
                                ),
                                
                                fluidRow(
                                  tabBox(title = "Pacientes Diferentes por Trimestre", width=12,
                                         tabPanel("Gráfico", plotlyOutput(outputId = "pc_dif_florianopolis_plot")),
                                         tabPanel("Dados", dataTableOutput("pc_dif_florianopolis_tab")),
                                         tabPanel("Sobre o Indicador", htmlOutput("pc_dif_florianopolis_info"))
                                  )
                                )
                        ),
                        ###########################################################################################                         
                        #Demanda Espontânea                                                          
                        ###########################################################################################
                        tabItem(tabName = "perc_dem_cons_florianopolis", h2("Acesso à Atenção Primária em Florianópolis"),
                                
                                fluidRow(
                                  box(selectInput(
                                    inputId="perc_dem_cons_florianopolis_especialidade",
                                    label="Selecione o Tipo de Atendimento:",
                                    choices=list("Médico" = "PORCENT_ESP_MED", "Enfermeiro" = "PORCENT_ESP_ENF", "Odontólogo" = "PORCENT_ESP_ODO"),
                                    selected="Médico"),
                                    width = 12, status = "primary")
                                ),
                                
                                
                                fluidRow(
                                   tabBox(title = "Percentual de Demanda Espontânea", width=12,
                                          tabPanel("Gráfico", plotlyOutput(outputId = "perc_dem_cons_florianopolis_plot")),
                                          tabPanel("Dados", dataTableOutput("perc_dem_cons_florianopolis_tab")),
                                          tabPanel("Sobre o Indicador", htmlOutput("perc_dem_cons_florianopolis_info"))
                                   )
                                )
                        ), 
                        
                        ###########################################################################################                         
                        #Testes rápidos                                                         
                        ###########################################################################################
                        tabItem(tabName = "teste_rap_florianopolis", h2("Acesso à Atenção Primária em Florianópolis"),
                                
                               fluidRow(
                                  box(selectInput(
                                    inputId="teste_rap_florianopolis_procedimento",
                                    label="Selecione o Tipo de Teste Rápido:",
                                    choices=list("HIV na gestante ou pai/parceiro" = "TESTE RAPIDO PARA DETECCAO DE HIV NA GESTANTE OU PAI/PARCEIRO",
                                                 "HIV" = "TESTE RÁPIDO PARA DETECÇÃO DE INFECÇÃO PELO HIV",              
                                                 "Sífilis na gestante ou pai/parceiro" = "TESTE RÁPIDO PARA SÍFILIS NA GESTANTE OU PAI/PARCEIRO",
                                                 "Sífilis" = "TESTE RÁPIDO PARA SÍFILIS",                             
                                                 "Hepatite C" =  "TESTE RÁPIDO PARA DETECÇÃO DE HEPATITE C",                     
                                                 "Hepatite B" =  "TESTE RÁPIDO PARA DETECÇÃO DE INFECÇÃO PELO HBV"),
                                    selected="TESTE RÁPIDO PARA DETECÇÃO DE INFECÇÃO PELO HIV"),
                                    width = 12, status = "primary")
                                ),
                                
                                fluidRow(
                                   tabBox(title = "Quantidade de Testes Rápidos", width=12,
                                          tabPanel("Gráfico", plotlyOutput(outputId = "teste_rap_florianopolis_plot")),
                                          tabPanel("Dados", dataTableOutput("teste_rap_florianopolis_tab")),
                                          tabPanel("Sobre o Indicador", htmlOutput("teste_rap_florianopolis_info"))
                                   )
                                )
                        ),  
                        
                        ###########################################################################################                         
                        #Falta em Consultas                                                           
                        ###########################################################################################
                        tabItem(tabName = "faltas_cons_florianopolis", h2("Acesso à Atenção Primária em Florianópolis"),
                                
                               fluidRow(
                                  box(selectInput(
                                    inputId="faltas_florianopolis_tipo",
                                    label="Selecione o Tipo:",
                                    choices=list("Percentual de faltas - Odontologia" = "PERCENTUAL_FALTAS_ODONTO", 
                                                 "Percentual de faltas - Enfermagem" = "PERCENTUAL_FALTAS_ENF",  
                                                 "Percentual de faltas - Medicina" = "PERCENTUAL_FALTAS_MED"),
                                    selected="PERCENTUAL_FALTAS_ODONTO"),
                                    width = 12, status = "primary")
                                ),
                                
                                fluidRow(
                                   tabBox(title = "Percentual de Faltas em Consultas", width=12,
                                          tabPanel("Gráfico", plotlyOutput(outputId = "faltas_florianopolis_plot")),
                                          tabPanel("Dados", dataTableOutput("faltas_florianopolis_tab")),
                                          tabPanel("Sobre o Indicador", htmlOutput("faltas_florianopolis_info"))
                                   )
                                )
                        ),  
                        
                        ###########################################################################################
                        #Primeira Consulta Odontológica
                        ###########################################################################################
                        tabItem(tabName = "prim_cons_odonto_florianopolis", h2("Acesso nos florianopoliss"),
                                
                               fluidRow(
                                   tabBox(title = "Primeira Consulta Odontológica", width=12,
                                          tabPanel("Gráfico", plotlyOutput(outputId = "prim_cons_odonto_florianopolis_plot")),
                                          tabPanel("Dados", dataTableOutput("prim_cons_odonto_florianopolis_tab")),
                                          tabPanel("Sobre o Indicador", htmlOutput("prim_cons_odonto_florianopolis_info"))
                                   )
                                )
                        ), 
                        
                        ###########################################################################################                         
                        #Atendimento Inadequado na UPA                                                           
                        ###########################################################################################

                        tabItem(tabName = "atd_inad_upa_florianopolis", h2("Acesso à Atenção Primária em Florianópolis"),
                                
                               fluidRow(
                                   tabBox(title = "Atendimentos Inadequados na UPAS", width=12,
                                          tabPanel("Gráfico", plotlyOutput(outputId = "atd_inad_upa_florianopolis_plot")),
                                          tabPanel("Dados", dataTableOutput("atd_inad_upa_florianopolis_tab")),
                                          tabPanel("Sobre o Indicador", htmlOutput("atd_inad_upa_florianopolis_info"))
                                   )
                                )
                        ),  
                        
                        ###########################################################################################
                        #Dashboard Florianópolis Longitudinalidade
                        ###########################################################################################
 
                        ###########################################################################################
                        #Seguimento Pré-natal
                        ###########################################################################################
                        tabItem(tabName = "seg_prenat_florianopolis", h2("Longitudinalidade na Atenção Primária em Florianópolis"),
                                
                                fluidRow(
                                  box(selectInput(
                                    inputId="gestantes_florianopolis_opcao",
                                    label="Selecione o Tipo:",
                                    choices=list("Total de Mulheres no Terceiro Trimestre de Gestação" = "GESTANTES", "Total de Gestantes com Pré-natal nos Três Trimestres" = "GEST_TODOS_TRI", "Percentual de Gestantes com Pré-natal nos Três Trimestres" = "PERCENTUAL_TODOS_TRI",
                                                 "Total de Gestantes com 7 ou Mais Consultas Pré-Natais" = "GESTANTES_7_CONS", "Percentual de Gestantes com 7 ou Mais Consultas Pré-Natais" = "PERCENTUAL_GESTANTES_7_CONS"),
                                    selected= "Percentual de Gestantes com Pré-natal nos Três Trimestres"),
                                    width = 12, status = "primary")
                                ),
                               
                                fluidRow(
                                  tabBox(title = "Mulheres no Terceiro Trimestre de Gestação", width=12,
                                         tabPanel("Gráfico", plotlyOutput(outputId = "gestantes_florianopolis_plot")),
                                         tabPanel("Dados", dataTableOutput("gestantes_florianopolis_tab")),
                                         tabPanel("Sobre o Indicador", htmlOutput("gestantes_florianopolis_info"))
                                  )
                                )
                        ),                        
                        
                        ###########################################################################################
                        #Citopatológico
                        ###########################################################################################
                        tabItem(tabName = "cito_florianopolis", h2("Longitudinalidade na Atenção Primária em Florianópolis"),
                                
                               fluidRow(
                                   tabBox(title = "Atendimentos Inadequados na UPAS", width=12,
                                          tabPanel("Gráfico", plotlyOutput(outputId = "citopatologico_florianopolis_plot")),
                                          tabPanel("Dados", dataTableOutput("citopatologico_florianopolis_tab")),
                                          tabPanel("Sobre o Indicador", htmlOutput("citopatologico_florianopolis_info"))
                                   )
                                )
                        ),  

                        ###########################################################################################
                        #Tratamento Odontológico
                        ###########################################################################################
                        tabItem(tabName = "tratam_compl_odonto_florianopolis", h2("Longitudinalidade na Atenção Primária em Florianópolis"),
                                
                               fluidRow(
                                   tabBox(title = "Tratamento Odontológico Completado", width=12,
                                          tabPanel("Gráfico", plotlyOutput(outputId = "tratam_compl_odonto_florianopolis_plot")),
                                          tabPanel("Dados", dataTableOutput("tratam_compl_odonto_florianopolis_tab")),
                                          tabPanel("Sobre o Indicador", htmlOutput("tratam_compl_odonto_florianopolis_info"))
                                   )
                                )
                        ),  
      
                        ###########################################################################################
                        #Sífilis
                        ###########################################################################################
                        tabItem(tabName = "sifilis_florianopolis", h2("Longitudinalidade na Atenção Primária em Florianópolis"),
                                
                                fluidRow(
                                  box(selectInput(
                                    inputId="sifilis_florianopolis_opcao",
                                    label="Selecione o Tipo:",
                                    choices=list("Total de casos de sífilis" = "CASOS", "Total tratamentos para sífilis" = "TRATADOS", "Percentual de casos de sífilis tratados" = "PERC_TRATAMENTO"),
                                    selected= "PERC_TRATAMENTO"),
                                    width = 12, status = "primary")
                                ),
                               
                                fluidRow(
                                  tabBox(title = "Percentual de casos de sífilis tratados", width=12,
                                         tabPanel("Gráfico", plotlyOutput(outputId = "sifilis_florianopolis_plot")),
                                         tabPanel("Dados", dataTableOutput("sifilis_florianopolis_tab")),
                                         tabPanel("Sobre o Indicador", htmlOutput("sifilis_florianopolis_info"))
                                  )
                                )
                        ),   
                        
                        ###########################################################################################
                        #Dashboard Florianópolis Integralidade
                        ###########################################################################################
                        ###########################################################################################
                        #Encaminhamentos
                        ###########################################################################################
                        tabItem(tabName = "encam_med_florianopolis", h2("Integralidade na Atenção Primária em Florianópolis"),
                                
                                fluidRow(
                                  box(selectInput(
                                    inputId="encam_med_florianopolis_opcao",
                                    label="Selecione o Tipo:",
                                    choices=list("Consulta Médica" = "Consulta", "Encaminhamento Médico" = "Encaminhamento", "Percentual de Encaminhamento Médico" = "Percentual de Encaminhamento"),
                                    selected="Percentual de Encaminhamento Médico"),
                                    width = 12, status = "primary")
                                ),

                                fluidRow(
                                  tabBox(title = "Consultas/Encaminhamentos Médicos por Trimestre", width=12,
                                         tabPanel("Gráfico", plotlyOutput(outputId = "encam_med_florianopolis_plot")),
                                         tabPanel("Dados", dataTableOutput("encam_med_florianopolis_tab")),
                                         tabPanel("Sobre o Indicador", htmlOutput("encam_med_florianopolis_info"))
                                  )
                                )
                        ),
                        ###########################################################################################
                        #Procedimentos Complementares
                        ###########################################################################################
                        tabItem(tabName = "proc_compl_florianopolis", h2("Integralidade na Atenção Primária em Florianópolis"),
                                
                                fluidRow(
                                  box(selectInput(
                                    inputId="proc_compl_florianopolis_opcao",
                                    label="Selecione o Tipo:",
                                    choices=list("Médico" = "Médico", "Odontólogo" = "Odontólogo"),
                                    selected="Médico"),
                                    width = 12, status = "primary")
                                ),

                                fluidRow(
                                  tabBox(title = "Procedimentos Complementares por Trimestre", width=12,
                                         tabPanel("Gráfico", plotlyOutput(outputId = "proc_compl_florianopolis_plot")),
                                         tabPanel("Dados", dataTableOutput("proc_compl_florianopolis_tab")),
                                         tabPanel("Sobre o Indicador", htmlOutput("proc_compl_florianopolis_info"))
                                  )
                                )
                        ),
                        
                        ###########################################################################################                         
                        #Gestantes com Consultas Odontológicas                                                           
                        ###########################################################################################
                        tabItem(tabName = "odont_gestantes_florianopolis", h2("Integralidade na Atenção Primária em Florianópolis"),
                                
                                fluidRow(
                                  box(selectInput(
                                    inputId="odonto_gestantes_florianopolis_opcao",
                                    label="Selecione o Tipo:",
                                    choices=list("Total de Mulheres no Terceiro Trimestre de Gestação" = "GESTANTES", "Total de Gestantes com 1 ou mais Consultas Odontológicas" = "GEST_ODONTO", "Percentual de Gestantes com 1 ou mais Consultas Odontológicas" = "PERCENTUAL_GEST_ODONTO"),
                                    selected= "Percentual de Gestantes com 1 ou mais Consultas Odontológicas"),
                                    width = 12, status = "primary")
                                ),
                               
                                fluidRow(
                                  tabBox(title = "Mulheres no Terceiro Trimestre de Gestação", width=12,
                                         tabPanel("Gráfico", plotlyOutput(outputId = "odonto_gestantes_florianopolis_plot")),
                                         tabPanel("Dados", dataTableOutput("odonto_gestantes_florianopolis_tab")),
                                         tabPanel("Sobre o Indicador", htmlOutput("odonto_gestantes_florianopolis_info"))
                                  )
                                )
                        ),                     
                           
                        
                        ########################################################################################### 
                        #Distritos
                        ###########################################################################################
                        ###########################################################################################
                        #Dashboard Distritos Acesso
                        ###########################################################################################
                        #Pacientes Diferentes
                        ###########################################################################################
                        tabItem(tabName = "pc_dif_distrito", h2("Acesso nos Distritos"),
                                
                                fluidRow(
                                  box(selectInput(
                                    inputId="pc_dif_distrito_especialidade",
                                    label="Selecione o Tipo de Atendimento:",
                                    choices=list("Médico" = "Médico", "Enfermeiro" = "Enfermeiro", "Odontólogo" = "Odontólogo",
                                                 "Outros" = "Outros", "Médico e Enfermeiro" = "Médico e Enfermeiro", "Total" = "Total"),
                                    selected="Total"),
                                    width = 12, status = "primary")
                                ),
                                
                                
                                fluidRow(
                                  tabBox(title = "Pacientes Diferentes por Trimestre", width=12,
                                         tabPanel("Gráfico", plotlyOutput(outputId = "pc_dif_distrito_plot")),
                                         tabPanel("Dados", dataTableOutput("pc_dif_distrito_tab")),
                                         tabPanel("Sobre o Indicador", htmlOutput("pc_dif_distrito_info"))
                                  )
                                )
                        ),
                        ###########################################################################################                         
                        #Demanda Espontânea                                                          
                        ###########################################################################################
                        tabItem(tabName = "perc_dem_cons_distrito", h2("Acesso nos Distritos"),
                                
                                fluidRow(
                                  box(selectInput(
                                    inputId="perc_dem_cons_distrito_especialidade",
                                    label="Selecione o Tipo de Atendimento:",
                                    choices=list("Médico" = "PORCENT_ESP_MED", "Enfermeiro" = "PORCENT_ESP_ENF", "Odontólogo" = "PORCENT_ESP_ODO"),
                                    selected="Médico"),
                                    width = 12, status = "primary")
                                ),
                                
                                
                                fluidRow(
                                   tabBox(title = "Percentual de Demanda Espontânea", width=12,
                                          tabPanel("Gráfico", plotlyOutput(outputId = "perc_dem_cons_distrito_plot")),
                                          tabPanel("Dados", dataTableOutput("perc_dem_cons_distrito_tab")),
                                          tabPanel("Sobre o Indicador", htmlOutput("perc_dem_cons_distrito_info"))
                                   )
                                )
                        ),    
                        ###########################################################################################                         
                        #Testes rápidos                                                         
                        ###########################################################################################
                        tabItem(tabName = "teste_rap_distrito", h2("Acesso nos Distritos"),
                                
                               fluidRow(
                                  box(selectInput(
                                    inputId="teste_rap_distrito_procedimento",
                                    label="Selecione o Tipo de Teste Rápido:",
                                    choices=list("HIV na gestante ou pai/parceiro" = "TESTE RAPIDO PARA DETECCAO DE HIV NA GESTANTE OU PAI/PARCEIRO",
                                                 "HIV" = "TESTE RÁPIDO PARA DETECÇÃO DE INFECÇÃO PELO HIV",              
                                                 "Sífilis na gestante ou pai/parceiro" = "TESTE RÁPIDO PARA SÍFILIS NA GESTANTE OU PAI/PARCEIRO",
                                                 "Sífilis" = "TESTE RÁPIDO PARA SÍFILIS",                             
                                                 "Hepatite C" =  "TESTE RÁPIDO PARA DETECÇÃO DE HEPATITE C",                     
                                                 "Hepatite B" =  "TESTE RÁPIDO PARA DETECÇÃO DE INFECÇÃO PELO HBV"),
                                    selected="TESTE RÁPIDO PARA DETECÇÃO DE INFECÇÃO PELO HIV"),
                                    width = 12, status = "primary")
                                ),
                                 
                               fluidRow(
                                   tabBox(title = "Quantidade de Testes Rápidos", width=12,
                                          tabPanel("Gráfico", plotlyOutput(outputId = "teste_rap_distrito_plot")),
                                          tabPanel("Dados", dataTableOutput("teste_rap_distrito_tab")),
                                          tabPanel("Sobre o Indicador", htmlOutput("teste_rap_distrito_info"))
                                   )
                                )
                        ), 
                        
                        ###########################################################################################
                        #Falta em Consultas
                        ###########################################################################################
                        tabItem(tabName = "faltas_cons_distrito", h2("Acesso nos Distritos"),
                                
                               fluidRow(
                                  box(selectInput(
                                    inputId="faltas_distrito_tipo",
                                    label="Selecione o Tipo:",
                                    choices=list("Percentual de faltas - Odontologia" = "PERCENTUAL_FALTAS_ODONTO", 
                                                 "Percentual de faltas - Enfermagem" = "PERCENTUAL_FALTAS_ENF",  
                                                 "Percentual de faltas - Medicina" = "PERCENTUAL_FALTAS_MED"),
                                    selected="PERCENTUAL_FALTAS_ODONTO"),
                                    width = 12, status = "primary")
                                ),
                                
                                fluidRow(
                                   tabBox(title = "Percentual de Faltas em Consultas", width=12,
                                          tabPanel("Gráfico", plotlyOutput(outputId = "faltas_distrito_plot")),
                                          tabPanel("Dados", dataTableOutput("faltas_distrito_tab")),
                                          tabPanel("Sobre o Indicador", htmlOutput("faltas_distrito_info"))
                                   )
                                )
                        ),  
                            
                        ###########################################################################################
                        #Primeira Consulta Odontológica
                        ###########################################################################################
                        tabItem(tabName = "prim_cons_odonto_distrito", h2("Acesso nos Distritos"),
                                
                               fluidRow(
                                   tabBox(title = "Primeira Consulta Odontológica", width=12,
                                          tabPanel("Gráfico", plotlyOutput(outputId = "prim_cons_odonto_distrito_plot")),
                                          tabPanel("Dados", dataTableOutput("prim_cons_odonto_distrito_tab")),
                                          tabPanel("Sobre o Indicador", htmlOutput("prim_cons_odonto_distrito_info"))
                                   )
                                )
                        ),  
        
                        ###########################################################################################
                        #Atendimentos Inadequados nas UPAS
                        ###########################################################################################
                        tabItem(tabName = "atd_inad_upa_distrito", h2("Acesso nos Distritos"),
                                
                               fluidRow(
                                   tabBox(title = "Atendimentos Inadequados na UPAS", width=12,
                                          tabPanel("Gráfico", plotlyOutput(outputId = "atd_inad_upa_distrito_plot")),
                                          tabPanel("Dados", dataTableOutput("atd_inad_upa_distrito_tab")),
                                          tabPanel("Sobre o Indicador", htmlOutput("atd_inad_upa_distrito_info"))
                                   )
                                )
                        ),
                        ###########################################################################################
                        #Dashboard Distritos Longitudinalidade
                        ###########################################################################################
                        ###########################################################################################
                        #Seguimento Pré-natal
                        ###########################################################################################
                     
                        tabItem(tabName = "seg_prenat_distrito", h2("Longitudinalidade nos Distritos"),
                                
                                fluidRow(
                                  box(selectInput(
                                    inputId="gestantes_distrito_opcao",
                                    label="Selecione o Tipo:",
                                    choices=list("Total de Mulheres no Terceiro Trimestre de Gestação" = "GESTANTES", "Total de Gestantes com Pré-natal nos Três Trimestres" = "GEST_TODOS_TRI", "Percentual de Gestantes com Pré-natal nos Três Trimestres" = "PERCENTUAL_TODOS_TRI",
                                                 "Total de Gestantes com 7 ou Mais Consultas Pré-Natais" = "GESTANTES_7_CONS", "Percentual de Gestantes com 7 ou Mais Consultas Pré-Natais" = "PERCENTUAL_GESTANTES_7_CONS"),
                                    selected= "Percentual de Gestantes com Pré-natal nos Três Trimestres"),
                                    width = 12, status = "primary")
                                ),
                                
                                
                                fluidRow(
                                  tabBox(title = "Mulheres no Terceiro Trimestre de Gestação", width=12,
                                         tabPanel("Gráfico", plotlyOutput(outputId = "gestantes_distrito_plot")),
                                         tabPanel("Dados", dataTableOutput("gestantes_distrito_tab")),
                                         tabPanel("Sobre o Indicador", htmlOutput("gestantes_distrito_info"))
                                  )
                                )
                        ),
                        
                        ###########################################################################################
                        #Citopatológico
                        ###########################################################################################
                        tabItem(tabName = "cito_distrito", h2("Longitudinalidade na Atenção Primária em Florianópolis"),
                                
                               fluidRow(
                                   tabBox(title = "Atendimentos Inadequados na UPAS", width=12,
                                          tabPanel("Gráfico", plotlyOutput(outputId = "citopatologico_distrito_plot")),
                                          tabPanel("Dados", dataTableOutput("citopatologico_distrito_tab")),
                                          tabPanel("Sobre o Indicador", htmlOutput("citopatologico_distrito_info"))
                                   )
                                )
                        ),  

                        ###########################################################################################
                        #Tratamento Odontológico
                        ###########################################################################################
                         tabItem(tabName = "tratam_compl_odonto_distrito", h2("Longitudinalidade nos Distritos"),
                                
                               fluidRow(
                                   tabBox(title = "Tratamento Odontológico Completado", width=12,
                                          tabPanel("Gráfico", plotlyOutput(outputId = "tratam_compl_odonto_distrito_plot")),
                                          tabPanel("Dados", dataTableOutput("tratam_compl_odonto_distrito_tab")),
                                          tabPanel("Sobre o Indicador", htmlOutput("tratam_compl_odonto_distrito_info"))
                                   )
                                )
                        ),  
                       
                        ###########################################################################################
                        #Sífilis
                        ###########################################################################################
                        tabItem(tabName = "sifilis_distrito", h2("Longitudinalidade na Atenção Primária em Florianópolis"),
                                
                                fluidRow(
                                  box(selectInput(
                                    inputId="sifilis_distrito_opcao",
                                    label="Selecione o Tipo:",
                                    choices=list("Total de casos de sífilis" = "CASOS", "Total tratamentos para sífilis" = "TRATADOS", "Percentual de casos de sífilis tratados" = "PERC_TRATAMENTO"),
                                    selected= "PERC_TRATAMENTO"),
                                    width = 12, status = "primary")
                                ),
                               
                                fluidRow(
                                  tabBox(title = "Percentual de casos de sífilis tratados", width=12,
                                         tabPanel("Gráfico", plotlyOutput(outputId = "sifilis_distrito_plot")),
                                         tabPanel("Dados", dataTableOutput("sifilis_distrito_tab")),
                                         tabPanel("Sobre o Indicador", htmlOutput("sifilis_distrito_info"))
                                  )
                                )
                        ), 
                        ###########################################################################################
                        #Dashboard Distritos Integralidade
                        ###########################################################################################
                        ###########################################################################################
                        #Encaminhamentos
                        ###########################################################################################

                        tabItem(tabName = "encam_med_distrito", h2("Integralidade nos Distritos"),
                                
                                fluidRow(
                                  box(selectInput(
                                    inputId="encam_med_distrito_opcao",
                                    label="Selecione o Tipo:",
                                    choices=list("Consulta Médica" = "Consulta", "Encaminhamento Médico" = "Encaminhamento", "Percentual de Encaminhamento Médico" = "Percentual de Encaminhamento"),
                                    selected="Percentual de Encaminhamento Médico"),
                                    width = 12, status = "primary")
                                ),
                                
                                
                                fluidRow(
                                  tabBox(title = "Consultas/Encaminhamentos Médicos por Trimestre", width=12,
                                         tabPanel("Gráfico", plotlyOutput(outputId = "encam_med_distrito_plot")),
                                         tabPanel("Dados", dataTableOutput("encam_med_distrito_tab")),
                                         tabPanel("Sobre o Indicador", htmlOutput("encam_med_distrito_info"))
                                  )
                                )
                        ),
                        
                        ###########################################################################################
                        #Procedimentos Complementares
                        ###########################################################################################
                        tabItem(tabName = "proc_compl_distrito", h2("Integralidade nos Distritos"),
                                
                                fluidRow(
                                  box(selectInput(
                                    inputId="proc_compl_distrito_opcao",
                                    label="Selecione o Tipo:",
                                    choices=list("Médico" = "Médico", "Odontólogo" = "Odontólogo"),
                                    selected="Médico"),
                                    width = 12, status = "primary")
                                ),

                                fluidRow(
                                  tabBox(title = "Procedimentos Complementares por Trimestre", width=12,
                                         tabPanel("Gráfico", plotlyOutput(outputId = "proc_compl_distrito_plot1")),
                                         tabPanel("Dados", dataTableOutput("proc_compl_distrito_tab1")),
                                         tabPanel("Sobre o Indicador", htmlOutput("proc_compl_distrito_info1"))
                                  )
                                ),
                                
                                fluidRow(
                                  tabBox(title = "Procedimentos Complementares por Trimestre", width=12,
                                         tabPanel("Gráfico", plotlyOutput(outputId = "proc_compl_distrito_plot2")),
                                         tabPanel("Dados", dataTableOutput("proc_compl_distrito_tab2")),
                                         tabPanel("Sobre o Indicador", htmlOutput("proc_compl_distrito_info2"))
                                  )
                                ),
                                
                                fluidRow(
                                  tabBox(title = "Procedimentos Complementares por Trimestre", width=12,
                                         tabPanel("Gráfico", plotlyOutput(outputId = "proc_compl_distrito_plot3")),
                                         tabPanel("Dados", dataTableOutput("proc_compl_distrito_tab3")),
                                         tabPanel("Sobre o Indicador", htmlOutput("proc_compl_distrito_info3"))
                                  )
                                ),
                                
                                fluidRow(
                                  tabBox(title = "Procedimentos Complementares por Trimestre", width=12,
                                         tabPanel("Gráfico", plotlyOutput(outputId = "proc_compl_distrito_plot4")),
                                         tabPanel("Dados", dataTableOutput("proc_compl_distrito_tab4")),
                                         tabPanel("Sobre o Indicador", htmlOutput("proc_compl_distrito_info4"))
                                  )
                                ),
                                
                                fluidRow(
                                  tabBox(title = "Procedimentos Complementares por Trimestre", width=12,
                                         tabPanel("Gráfico", plotlyOutput(outputId = "proc_compl_distrito_plot5")),
                                         tabPanel("Dados", dataTableOutput("proc_compl_distrito_tab5")),
                                         tabPanel("Sobre o Indicador", htmlOutput("proc_compl_distrito_info5"))
                                  )
                                )
                        ),
                        
                        ###########################################################################################                         
                        #Gestantes com Consultas Odontológicas                                                           
                        ###########################################################################################
                         tabItem(tabName = "odont_gestantes_distrito", h2("Integralidade nos Distritos"),
                                
                                fluidRow(
                                  box(selectInput(
                                    inputId="odonto_gestantes_distrito_opcao",
                                    label="Selecione o Tipo:",
                                    choices=list("Total de Mulheres no Terceiro Trimestre de Gestação" = "GESTANTES", "Total de Gestantes com 1 ou mais Consultas Odontológicas" = "GEST_ODONTO", "Percentual de Gestantes com 1 ou mais Consultas Odontológicas" = "PERCENTUAL_GEST_ODONTO"),
                                    selected= "Percentual de Gestantes com 1 ou mais Consultas Odontológicas"),
                                    width = 12, status = "primary")
                                ),
                               
                                fluidRow(
                                  tabBox(title = "Mulheres no Terceiro Trimestre de Gestação", width=12,
                                         tabPanel("Gráfico", plotlyOutput(outputId = "odonto_gestantes_distrito_plot")),
                                         tabPanel("Dados", dataTableOutput("odonto_gestantes_distrito_tab")),
                                         tabPanel("Sobre o Indicador", htmlOutput("odonto_gestantes_distrito_info"))
                                  )
                                )
                        ),                        
                           
 
                        
                        ########################################################################################### 
                        #Centros de Saúde
                        ###########################################################################################
                        
                        ###########################################################################################
                        #Dashboard Centros de Saúde Acesso
                        ###########################################################################################
                        #Pacientes Diferentes
                        ###########################################################################################
                        tabItem(tabName = "pc_dif_cs", h2("Acesso nos Centros de Saúde"),
                                
                                fluidRow(
                                  box(selectInput(
                                    inputId="pc_dif_cs_especialidade",
                                    label="Selecione o Tipo de Atendimento:",
                                    choices=list("Médico" = "Médico", "Enfermeiro" = "Enfermeiro", "Odontólogo" = "Odontólogo",
                                                 "Outros" = "Outros", "Médico e Enfermeiro" = "Médico e Enfermeiro", "Total" = "Total"),
                                    selected="Total"),
                                    width = 12, status = "primary"),
                                  
                                  box(selectInput(
                                    inputId="pc_dif_cspordistrito",
                                    label="Selecione um Distrito:",
                                    choices=list("Centro" = "Centro", "Continente" = "Continente", "Norte" = "Norte",
                                                 "Sul" = "Sul"),
                                    selected="Centro"),
                                    width = 12, status = "primary")
                                ),
                                
                                
                                fluidRow(
                                  tabBox(title = "Pacientes Diferentes por Trimestre", width=12,
                                         tabPanel("Gráfico", plotlyOutput(outputId = "pc_dif_cs_plot")),
                                         tabPanel("Dados", dataTableOutput("pc_dif_cs_tab")),
                                         tabPanel("Sobre o Indicador", htmlOutput("pc_dif_cs_info"))
                                  )
                                )
                        ),
                        ###########################################################################################                         
                        #Demanda Espontânea                                                          
                        ###########################################################################################
                        tabItem(tabName = "perc_dem_cons_cs", h2("Acesso nos Centros de Saúde"),
                                
                                fluidRow(
                                  box(selectInput(
                                    inputId="perc_dem_cons_cs_especialidade",
                                    label="Selecione o Tipo de Atendimento:",
                                    choices=list("Médico" = "PORCENT_ESP_MED", "Enfermeiro" = "PORCENT_ESP_ENF", "Odontólogo" = "PORCENT_ESP_ODO"),
                                    selected="Médico"),
                                    width = 12, status = "primary"),
                                  box(selectInput(
                                    inputId="perc_dem_cons_cspordistrito",
                                    label="Selecione um Distrito:",
                                    choices=list("Centro" = "Centro", "Continente" = "Continente", "Norte" = "Norte",
                                                 "Sul" = "Sul"),
                                    selected="Centro"),
                                    width = 12, status = "primary")
                                ),
                                
                                
                                fluidRow(
                                   tabBox(title = "Percentual de Demanda Espontânea", width=12,
                                          tabPanel("Gráfico", plotlyOutput(outputId = "perc_dem_cons_cs_plot")),
                                          tabPanel("Dados", dataTableOutput("perc_dem_cons_cs_tab")),
                                          tabPanel("Sobre o Indicador", htmlOutput("perc_dem_cons_cs_info"))
                                   )
                                )
                        ),
                        ###########################################################################################                         
                        #Testes rápidos                                                         
                        ###########################################################################################
                        tabItem(tabName = "teste_rap_cs", h2("Acesso nos Centros de Saúde"),
                                
                               fluidRow(
                                  box(selectInput(
                                    inputId="teste_rap_cs_procedimento",
                                    label="Selecione o Tipo de Teste Rápido:",
                                    choices=list("HIV na gestante ou pai/parceiro" = "TESTE RAPIDO PARA DETECCAO DE HIV NA GESTANTE OU PAI/PARCEIRO",
                                                 "HIV" = "TESTE RÁPIDO PARA DETECÇÃO DE INFECÇÃO PELO HIV",              
                                                 "Sífilis na gestante ou pai/parceiro" = "TESTE RÁPIDO PARA SÍFILIS NA GESTANTE OU PAI/PARCEIRO",
                                                 "Sífilis" = "TESTE RÁPIDO PARA SÍFILIS",                             
                                                 "Hepatite C" =  "TESTE RÁPIDO PARA DETECÇÃO DE HEPATITE C",                     
                                                 "Hepatite B" =  "TESTE RÁPIDO PARA DETECÇÃO DE INFECÇÃO PELO HBV"),
                                    selected="TESTE RÁPIDO PARA DETECÇÃO DE INFECÇÃO PELO HIV"),
                                    width = 12, status = "primary")
                                ), 
                                
                               fluidRow(
                                box(selectInput(
                                    inputId="teste_rap_cspordistrito",
                                    label="Selecione um Distrito:",
                                    choices=list("Centro" = "Centro", "Continente" = "Continente", "Norte" = "Norte",
                                                 "Sul" = "Sul"),
                                    selected="Centro"),
                                    width = 12, status = "primary")
                                ), 
                                
                               fluidRow(
                                   tabBox(title = "Quantidade de Testes Rápidos", width=12,
                                          tabPanel("Gráfico", plotlyOutput(outputId = "teste_rap_cs_plot")),
                                          tabPanel("Dados", dataTableOutput("teste_rap_cs_tab")),
                                          tabPanel("Sobre o Indicador", htmlOutput("teste_rap_cs_info"))
                                   )
                                )
                        ), 
                        ###########################################################################################
                        #Falta em Consultas
                        ###########################################################################################
                        tabItem(tabName = "faltas_cons_cs", h2("Acesso nos Centros de Saúde"),
                                
                               fluidRow(
                                  box(selectInput(
                                    inputId="faltas_cs_tipo",
                                    label="Selecione o Tipo:",
                                    choices=list("Percentual de faltas - Odontologia" = "PERCENTUAL_FALTAS_ODONTO", 
                                                 "Percentual de faltas - Enfermagem" = "PERCENTUAL_FALTAS_ENF",  
                                                 "Percentual de faltas - Medicina" = "PERCENTUAL_FALTAS_MED"),
                                    selected="PERCENTUAL_FALTAS_ODONTO"),
                                    width = 12, status = "primary")
                                ),
                               
                               fluidRow(
                                box(selectInput(
                                    inputId="faltas_cspordistrito",
                                    label="Selecione um Distrito:",
                                    choices=list("Centro" = "Centro", "Continente" = "Continente", "Norte" = "Norte",
                                                 "Sul" = "Sul"),
                                    selected="Centro"),
                                    width = 12, status = "primary")
                                ), 
                                
                                fluidRow(
                                   tabBox(title = "Percentual de Faltas em Consultas", width=12,
                                          tabPanel("Gráfico", plotlyOutput(outputId = "faltas_cs_plot")),
                                          tabPanel("Dados", dataTableOutput("faltas_cs_tab")),
                                          tabPanel("Sobre o Indicador", htmlOutput("faltas_cs_info"))
                                   )
                                )
                        ),  
                                 
                        
                        ###########################################################################################
                        #Primeira Consulta Odontológica
                        ###########################################################################################
                        tabItem(tabName = "prim_cons_odonto_cs", h2("Acesso nos Centros de Saúde"),
                                
                                fluidRow(
                                box(selectInput(
                                    inputId="prim_cons_odonto_cspordistrito",
                                    label="Selecione um Distrito:",
                                    choices=list("Centro" = "Centro", "Continente" = "Continente", "Norte" = "Norte",
                                                 "Sul" = "Sul"),
                                    selected="Centro"),
                                    width = 12, status = "primary")
                                ), 
                                
                               fluidRow(
                                   tabBox(title = "Primeira Consulta Odontológica", width=12,
                                          tabPanel("Gráfico", plotlyOutput(outputId = "prim_cons_odonto_cs_plot")),
                                          tabPanel("Dados", dataTableOutput("prim_cons_odonto_cs_tab")),
                                          tabPanel("Sobre o Indicador", htmlOutput("prim_cons_odonto_cs_info"))
                                   )
                                )
                        ), 
                        ###########################################################################################
                        #Atendimentos Inadequados nas UPAS
                        ###########################################################################################
                        tabItem(tabName = "atd_inad_upa_cs", h2("Acesso nos Centros de Saúde"),
                                
                              fluidRow(
                                box(selectInput(
                                    inputId="atd_inad_upa_cspordistrito",
                                    label="Selecione um Distrito:",
                                    choices=list("Centro" = "Centro", "Continente" = "Continente", "Norte" = "Norte",
                                                 "Sul" = "Sul"),
                                    selected="Centro"),
                                    width = 12, status = "primary")
                                ), 

                                
                               fluidRow(
                                   tabBox(title = "Atendimentos Inadequados na UPAS", width=12,
                                          tabPanel("Gráfico", plotlyOutput(outputId = "atd_inad_upa_cs_plot")),
                                          tabPanel("Dados", dataTableOutput("atd_inad_upa_cs_tab")),
                                          tabPanel("Sobre o Indicador", htmlOutput("atd_inad_upa_cs_info"))
                                   )
                                )
                        ), 
                        
                        ###########################################################################################
                        #Dashboard Centros de Saúde Longitudinalidade
                        ###########################################################################################
                        ###########################################################################################
                        #Seguimento Pré-natal
                        ###########################################################################################
                        tabItem(tabName = "seg_prenat_cs", h2("Longitudinalidade nos Centros de Saúde"),
                                
                                fluidRow(
                                  box(selectInput(
                                    inputId="gestantes_cs_opcao",
                                    label="Selecione o Tipo:",
                                    choices=list("Total de Mulheres no Terceiro Trimestre de Gestação" = "GESTANTES", "Total de Gestantes com Pré-natal nos Três Trimestres" = "GEST_TODOS_TRI", "Percentual de Gestantes com Pré-natal nos Três Trimestres" = "PERCENTUAL_TODOS_TRI",
                                                 "Total de Gestantes com 7 ou Mais Consultas Pré-Natais" = "GESTANTES_7_CONS", "Percentual de Gestantes com 7 ou Mais Consultas Pré-Natais" = "PERCENTUAL_GESTANTES_7_CONS"),
                                    selected= "Percentual de Gestantes com Pré-natal nos Três Trimestres"),
                                    width = 12, status = "primary"),
                                  
                                  box(selectInput(
                                    inputId="longitudinalidade_cspordistrito",
                                    label="Selecione um Distrito:",
                                    choices=list("Centro" = "Centro", "Continente" = "Continente", "Norte" = "Norte",
                                                 "Sul" = "Sul"),
                                    selected="Centro"),
                                    width = 12, status = "primary")
                                ),
                                
                                
                                fluidRow(
                                  tabBox(title = "Mulheres no Terceiro Trimestre de Gestação", width=12,
                                         tabPanel("Gráfico", plotlyOutput(outputId = "gestantes_cs_plot")),
                                         tabPanel("Dados", dataTableOutput("gestantes_cs_tab")),
                                         tabPanel("Sobre o Indicador", htmlOutput("gestantes_cs_info"))
                                  )
                                )
                        ),
                        
                        ###########################################################################################
                        #Citopatológico
                        ###########################################################################################
                        tabItem(tabName = "cito_cs", h2("Longitudinalidade na Atenção Primária em Florianópolis"),
                                
                              fluidRow(
                                box(selectInput(
                                    inputId="citopatologico_cspordistrito",
                                    label="Selecione um Distrito:",
                                    choices=list("Centro" = "Centro", "Continente" = "Continente", "Norte" = "Norte",
                                                 "Sul" = "Sul"),
                                    selected="Centro"),
                                    width = 12, status = "primary")
                                ), 
                                
                              
                              fluidRow(
                                   tabBox(title = "Atendimentos Inadequados na UPAS", width=12,
                                          tabPanel("Gráfico", plotlyOutput(outputId = "citopatologico_cs_plot")),
                                          tabPanel("Dados", dataTableOutput("citopatologico_cs_tab")),
                                          tabPanel("Sobre o Indicador", htmlOutput("citopatologico_cs_info"))
                                   )
                                )
                        ),  

                        ###########################################################################################
                        #Tratamento Odontológico
                        ###########################################################################################
                        tabItem(tabName = "tratam_compl_odonto_cs", h2("Longitudinalidade nos Centros de Saúde"),
                                
                                fluidRow(
                                box(selectInput(
                                    inputId="tratam_compl_odonto_cspordistrito",
                                    label="Selecione um Distrito:",
                                    choices=list("Centro" = "Centro", "Continente" = "Continente", "Norte" = "Norte",
                                                 "Sul" = "Sul"),
                                    selected="Centro"),
                                    width = 12, status = "primary")
                                ), 
                                
                               fluidRow(
                                   tabBox(title = "Tratamento Odontológico Completado", width=12,
                                          tabPanel("Gráfico", plotlyOutput(outputId = "tratam_compl_odonto_cs_plot")),
                                          tabPanel("Dados", dataTableOutput("tratam_compl_odonto_cs_tab")),
                                          tabPanel("Sobre o Indicador", htmlOutput("tratam_compl_odonto_cs_info"))
                                   )
                                )
                        ), 
                        ###########################################################################################
                        #Sífilis
                        ###########################################################################################
                        tabItem(tabName = "sifilis_cs", h2("Longitudinalidade na Atenção Primária em Florianópolis"),
                                
                                fluidRow(
                                  box(selectInput(
                                    inputId="sifilis_cs_opcao",
                                    label="Selecione o Tipo:",
                                    choices=list("Total de casos de sífilis" = "CASOS", "Total tratamentos para sífilis" = "TRATADOS", "Percentual de casos de sífilis tratados" = "PERC_TRATAMENTO"),
                                    selected= "PERC_TRATAMENTO"),
                                    width = 12, status = "primary"),
                                  
                                  box(selectInput(
                                    inputId="sifilis_cspordistrito",
                                    label="Selecione um Distrito:",
                                    choices=list("Centro" = "Centro", "Continente" = "Continente", "Norte" = "Norte",
                                                 "Sul" = "Sul"),
                                    selected="Centro"),
                                    width = 12, status = "primary")
                                ),
                               
                                fluidRow(
                                  tabBox(title = "Percentual de casos de sífilis tratados", width=12,
                                         tabPanel("Gráfico", plotlyOutput(outputId = "sifilis_cs_plot")),
                                         tabPanel("Dados", dataTableOutput("sifilis_cs_tab")),
                                         tabPanel("Sobre o Indicador", htmlOutput("sifilis_cs_info"))
                                  )
                                )
                        ), 
                        
                        ###########################################################################################
                        #Dashboard Centros de Saúde Integralidade
                        ###########################################################################################
                        ###########################################################################################
                        #Encaminhamentos Médicos
                        ###########################################################################################

                        tabItem(tabName = "encam_med_cs", h2("Integralidade nos Centros de Saúde"),
                                
                                fluidRow(
                                  box(selectInput(
                                    inputId="encam_med_cs_opcao",
                                    label="Selecione o Tipo:",
                                    choices=list("Consulta Médica" = "Consulta", "Encaminhamento Médico" = "Encaminhamento", "Percentual de Encaminhamento Médico" = "Percentual de Encaminhamento"),
                                    selected="Percentual de Encaminhamento Médico"),
                                    width = 12, status = "primary"),
                                  
                                  box(selectInput(
                                    inputId="encam_med_cspordistrito",
                                    label="Selecione um Distrito:",
                                    choices=list("Centro" = "Centro", "Continente" = "Continente", "Norte" = "Norte",
                                                 "Sul" = "Sul"),
                                    selected="Centro"),
                                    width = 12, status = "primary")
                                ),
                                
                                
                                fluidRow(
                                  tabBox(title = "Consultas/Encaminhamentos Médicos por Trimestre", width=12,
                                         tabPanel("Gráfico", plotlyOutput(outputId = "encam_med_cs_plot")),
                                         tabPanel("Dados", dataTableOutput("encam_med_cs_tab")),
                                         tabPanel("Sobre o Indicador", htmlOutput("encam_med_cs_info"))
                                  )
                                )
                        ),

                        ###########################################################################################
                        #Procedimentos Complementares
                        ###########################################################################################
                        tabItem(tabName = "proc_compl_cs", h2("Integralidade nos Centros de Saúde"),
                                
                                fluidRow(
                                  box(selectInput(
                                    inputId="proc_compl_cs_opcao",
                                    label="Selecione o Tipo:",
                                    choices=list("Médico" = "Médico", "Odontólogo" = "Odontólogo"),
                                    selected="Médico"),
                                    width = 12, status = "primary"),
                                  
                                  box(selectInput(
                                    inputId="proc_compl_cspordistrito",
                                    label="Selecione um Distrito:",
                                    choices=list("Centro" = "Centro", "Continente" = "Continente", "Norte" = "Norte",
                                                 "Sul" = "Sul"),
                                    selected="Centro"),
                                    width = 12, status = "primary")
                                ),

                                fluidRow(
                                  tabBox(title = "Procedimentos Complementares por Trimestre", width=12,
                                         tabPanel("Gráfico", plotlyOutput(outputId = "proc_compl_cs_plot1")),
                                         tabPanel("Dados", dataTableOutput("proc_compl_cs_tab1")),
                                         tabPanel("Sobre o Indicador", htmlOutput("proc_compl_cs_info1"))
                                  )
                                ),
                                
                                fluidRow(
                                  tabBox(title = "Procedimentos Complementares por Trimestre", width=12,
                                         tabPanel("Gráfico", plotlyOutput(outputId = "proc_compl_cs_plot2")),
                                         tabPanel("Dados", dataTableOutput("proc_compl_cs_tab2")),
                                         tabPanel("Sobre o Indicador", htmlOutput("proc_compl_cs_info2"))
                                  )
                                ),
                                
                                fluidRow(
                                  tabBox(title = "Procedimentos Complementares por Trimestre", width=12,
                                         tabPanel("Gráfico", plotlyOutput(outputId = "proc_compl_cs_plot3")),
                                         tabPanel("Dados", dataTableOutput("proc_compl_cs_tab3")),
                                         tabPanel("Sobre o Indicador", htmlOutput("proc_compl_cs_info3"))
                                  )
                                ),
                                
                                fluidRow(
                                  tabBox(title = "Procedimentos Complementares por Trimestre", width=12,
                                         tabPanel("Gráfico", plotlyOutput(outputId = "proc_compl_cs_plot4")),
                                         tabPanel("Dados", dataTableOutput("proc_compl_cs_tab4")),
                                         tabPanel("Sobre o Indicador", htmlOutput("proc_compl_cs_info4"))
                                  )
                                ),
                                
                                fluidRow(
                                  tabBox(title = "Procedimentos Complementares por Trimestre", width=12,
                                         tabPanel("Gráfico", plotlyOutput(outputId = "proc_compl_cs_plot5")),
                                         tabPanel("Dados", dataTableOutput("proc_compl_cs_tab5")),
                                         tabPanel("Sobre o Indicador", htmlOutput("proc_compl_cs_info5"))
                                  )
                                )
                        ),
                        
                        
                        ###########################################################################################                         
                        #Gestantes com Consultas Odontológicas                                                           
                        ###########################################################################################
                         tabItem(tabName = "odont_gestantes_cs", h2("Integralidade nos Centros de Saúde"),
                                
                                fluidRow(
                                  box(selectInput(
                                    inputId="odonto_gestantes_cs_opcao",
                                    label="Selecione o Tipo:",
                                    choices=list("Total de Mulheres no Terceiro Trimestre de Gestação" = "GESTANTES", "Total de Gestantes com 1 ou mais Consultas Odontológicas" = "GEST_ODONTO", "Percentual de Gestantes com 1 ou mais Consultas Odontológicas" = "PERCENTUAL_GEST_ODONTO"),
                                    selected= "Percentual de Gestantes com 1 ou mais Consultas Odontológicas"),
                                    width = 12, status = "primary"),
                                  
                                  box(selectInput(
                                    inputId="odonto_gestantes_cspordistrito",
                                    label="Selecione um Distrito:",
                                    choices=list("Centro" = "Centro", "Continente" = "Continente", "Norte" = "Norte",
                                                 "Sul" = "Sul"),
                                    selected="Centro"),
                                    width = 12, status = "primary")
                                ),
                               
                                fluidRow(
                                  tabBox(title = "Mulheres no Terceiro Trimestre de Gestação", width=12,
                                         tabPanel("Gráfico", plotlyOutput(outputId = "odonto_gestantes_cs_plot")),
                                         tabPanel("Dados", dataTableOutput("odonto_gestantes_cs_tab")),
                                         tabPanel("Sobre o Indicador", htmlOutput("odonto_gestantes_cs_info"))
                                  )
                                )
                        ),                        
                           
                        ###########################################################################################
                        #Equipes
                        ###########################################################################################
                        #Dashboard Equipes Geral
                        ###########################################################################################
                        ###########################################################################################
                        #Dashboard Equipes de Saúde Acesso
                        ###########################################################################################
                        #Pacientes Diferentes
                        ###########################################################################################
                        tabItem(tabName = "pc_dif_esf", h2("Acesso nas Equipes de Saúde da Família"),
                                
                                fluidRow(
                                  box(selectInput(
                                    inputId="pc_dif_esf_especialidade",
                                    label="Selecione o Tipo de Atendimento:",
                                    choices=list("Médico" = "Médico", "Enfermeiro" = "Enfermeiro", "Odontólogo" = "Odontólogo",
                                                 "Outros" = "Outros", "Médico e Enfermeiro" = "Médico e Enfermeiro", "Total" = "Total"),
                                    selected="Total"),
                                    width = 12, status = "primary"),
                                  
                                  box(selectInput(
                                    inputId="pc_dif_esfporcs",
                                    label="Selecione um Centro de Saúde:",
                                    choices=list("CS ABRAÃO" = "CS ABRAÃO" ,  "CS AGRONÔMICA"  = "CS AGRONÔMICA",  "CS ALTO RIBEIRÃO" = "CS ALTO RIBEIRÃO",  
                                                 "CS ARMAÇÃO"  =  "CS ARMAÇÃO",  "CS BALNEÁRIO" =  "CS BALNEÁRIO",  "CS BARRA DA LAGOA" = "CS BARRA DA LAGOA",
                                                 "CS CACHOEIRA BOM JESUS" = "CS CACHOEIRA BOM JESUS", "CS CAIEIRA BARRA DO SUL" = "CS CAIEIRA BARRA DO SUL", 
                                                 "CS CAMPECHE" =  "CS CAMPECHE",  "CS CANASVIEIRAS" = "CS CANASVIEIRAS",  "CS CANTO DA LAGOA" = "CS CANTO DA LAGOA",  
                                                 "CS CAPOEIRAS"  =  "CS CAPOEIRAS",  "CS CARIANOS"  =  "CS CARIANOS",  "CS CENTRO" = "CS CENTRO",  
                                                 "CS COLONINHA" = "CS COLONINHA",  "CS COQUEIROS"  = "CS COQUEIROS",  "CS CÓRREGO GRANDE" = "CS CÓRREGO GRANDE",  
                                                 "CS COSTA DA LAGOA" =  "CS COSTA DA LAGOA",  "CS COSTEIRA DO PIRAJUBAÉ"="CS COSTEIRA DO PIRAJUBAÉ",  
                                                 "CS ESTREITO" = "CS ESTREITO",  "CS FAZENDA DO RIO TAVARES" = "CS FAZENDA DO RIO TAVARES", "CS INGLESES"= "CS INGLESES",  
                                                 "CS ITACORUBI"= "CS ITACORUBI",  "CS JARDIM ATLÂNTICO"= "CS JARDIM ATLÂNTICO",  "CS JOÃO PAULO"= "CS JOÃO PAULO",  "CS JURERE" ="CS JURERE" ,
                                                 "CS LAGOA DA CONCEIÇÃO"= "CS LAGOA DA CONCEIÇÃO", "CS MONTE CRISTO"= "CS MONTE CRISTO",  "CS MONTE SERRAT"= "CS MONTE SERRAT",  
                                                 "CS MORRO DAS PEDRAS"= "CS MORRO DAS PEDRAS",  "CS NOVO CONTINENTE"= "CS NOVO CONTINENTE",  "CS PANTANAL" =  "CS PANTANAL",  
                                                 "CS PANTANO DO SUL" = "CS PANTANO DO SUL", "CS PONTA DAS CANAS"=  "CS PONTA DAS CANAS",  "CS PRAINHA"=  "CS PRAINHA",  "CS RATONES"=  "CS RATONES",  
                                                 "CS RIBEIRÃO DA ILHA"= "CS RIBEIRÃO DA ILHA",  "CS RIO TAVARES"=  "CS RIO TAVARES",  "CS RIO VERMELHO"= "CS RIO VERMELHO",  
                                                 "CS SACO DOS LIMÕES"= "CS SACO DOS LIMÕES",  "CS SACO GRANDE"= "CS SACO GRANDE",  "CS SANTINHO"=  "CS SANTINHO",  
                                                 "CS SANTO ANTONIO LISBOA" = "CS SANTO ANTONIO LISBOA", "CS SAPE"  = "CS SAPE" , "CS TAPERA"=  "CS TAPERA",  "CS TRINDADE"= "CS TRINDADE",  
                                                 "CS VARGEM GRANDE"= "CS VARGEM GRANDE", "CS VARGEM PEQUENA"=  "CS VARGEM PEQUENA",  "CS VILA APARECIDA" = "CS VILA APARECIDA"),
                                    selected="CS ABRAÃO"),
                                    width = 12, status = "primary")
                                ),
                                
                                
                                fluidRow(
                                  tabBox(title = "Pacientes Diferentes por Trimestre", width=12,
                                         tabPanel("Gráfico", plotlyOutput(outputId = "pc_dif_esf_plot")),
                                         tabPanel("Dados", dataTableOutput("pc_dif_esf_tab")),
                                         tabPanel("Sobre o Indicador", htmlOutput("pc_dif_esf_info"))
                                  )
                                )
                        ),
                        ###########################################################################################                         
                        #Demanda Espontânea                                                          
                        ###########################################################################################
                        tabItem(tabName = "demanda_consulta_esf", h2("Acesso nas Equipes de Saúde da Família"),
                                
                                fluidRow(
                                  box(selectInput(
                                    inputId="perc_dem_cons_esf_especialidade",
                                    label="Selecione o Tipo de Atendimento:",
                                    choices=list("Médico" = "PORCENT_ESP_MED", "Enfermeiro" = "PORCENT_ESP_ENF", "Odontólogo" = "PORCENT_ESP_ODO"),
                                    selected="Médico"),
                                    width = 12, status = "primary"),
                                  
                                  box(selectInput(
                                    inputId="perc_dem_cons_esfporcs",
                                    label="Selecione um Centro de Saúde:",
                                    choices=list("CS ABRAÃO" = "CS ABRAÃO" ,  "CS AGRONÔMICA"  = "CS AGRONÔMICA",  "CS ALTO RIBEIRÃO" = "CS ALTO RIBEIRÃO",  
                                                 "CS ARMAÇÃO"  =  "CS ARMAÇÃO",  "CS BALNEÁRIO" =  "CS BALNEÁRIO",  "CS BARRA DA LAGOA" = "CS BARRA DA LAGOA",
                                                 "CS CACHOEIRA BOM JESUS" = "CS CACHOEIRA BOM JESUS", "CS CAIEIRA BARRA DO SUL" = "CS CAIEIRA BARRA DO SUL", 
                                                 "CS CAMPECHE" =  "CS CAMPECHE",  "CS CANASVIEIRAS" = "CS CANASVIEIRAS",  "CS CANTO DA LAGOA" = "CS CANTO DA LAGOA",  
                                                 "CS CAPOEIRAS"  =  "CS CAPOEIRAS",  "CS CARIANOS"  =  "CS CARIANOS",  "CS CENTRO" = "CS CENTRO",  
                                                 "CS COLONINHA" = "CS COLONINHA",  "CS COQUEIROS"  = "CS COQUEIROS",  "CS CÓRREGO GRANDE" = "CS CÓRREGO GRANDE",  
                                                 "CS COSTA DA LAGOA" =  "CS COSTA DA LAGOA",  "CS COSTEIRA DO PIRAJUBAÉ"="CS COSTEIRA DO PIRAJUBAÉ",  
                                                 "CS ESTREITO" = "CS ESTREITO",  "CS FAZENDA DO RIO TAVARES" = "CS FAZENDA DO RIO TAVARES", "CS INGLESES"= "CS INGLESES",  
                                                 "CS ITACORUBI"= "CS ITACORUBI",  "CS JARDIM ATLÂNTICO"= "CS JARDIM ATLÂNTICO",  "CS JOÃO PAULO"= "CS JOÃO PAULO",  "CS JURERE" ="CS JURERE" ,
                                                 "CS LAGOA DA CONCEIÇÃO"= "CS LAGOA DA CONCEIÇÃO", "CS MONTE CRISTO"= "CS MONTE CRISTO",  "CS MONTE SERRAT"= "CS MONTE SERRAT",  
                                                 "CS MORRO DAS PEDRAS"= "CS MORRO DAS PEDRAS",  "CS NOVO CONTINENTE"= "CS NOVO CONTINENTE",  "CS PANTANAL" =  "CS PANTANAL",  
                                                 "CS PANTANO DO SUL" = "CS PANTANO DO SUL", "CS PONTA DAS CANAS"=  "CS PONTA DAS CANAS",  "CS PRAINHA"=  "CS PRAINHA",  "CS RATONES"=  "CS RATONES",  
                                                 "CS RIBEIRÃO DA ILHA"= "CS RIBEIRÃO DA ILHA",  "CS RIO TAVARES"=  "CS RIO TAVARES",  "CS RIO VERMELHO"= "CS RIO VERMELHO",  
                                                 "CS SACO DOS LIMÕES"= "CS SACO DOS LIMÕES",  "CS SACO GRANDE"= "CS SACO GRANDE",  "CS SANTINHO"=  "CS SANTINHO",  
                                                 "CS SANTO ANTONIO LISBOA" = "CS SANTO ANTONIO LISBOA", "CS SAPE"  = "CS SAPE" , "CS TAPERA"=  "CS TAPERA",  "CS TRINDADE"= "CS TRINDADE",  
                                                 "CS VARGEM GRANDE"= "CS VARGEM GRANDE", "CS VARGEM PEQUENA"=  "CS VARGEM PEQUENA",  "CS VILA APARECIDA" = "CS VILA APARECIDA"),
                                    selected="CS ABRAÃO"),
                                    width = 12, status = "primary")
                                ),
                                
                                
                                fluidRow(
                                  tabBox(title = "Percentual de Demanda Espontânea", width=12,
                                         tabPanel("Gráfico", plotlyOutput(outputId = "perc_dem_cons_esf_plot")),
                                         tabPanel("Dados", dataTableOutput("perc_dem_cons_esf_tab")),
                                         tabPanel("Sobre o Indicador", htmlOutput("perc_dem_cons_esf_info"))
                                  )
                                )
                        ),
                        
                        ###########################################################################################                         
                        #Testes rápidos                                                         
                        ###########################################################################################
                        tabItem(tabName = "teste_rapido_esf", h2("Acesso nas Equipes de Saúde da Família"),
                                
                               fluidRow(
                                  box(selectInput(
                                    inputId="teste_rap_esf_procedimento",
                                    label="Selecione o Tipo de Teste Rápido:",
                                    choices=list("HIV na gestante ou pai/parceiro" = "TESTE RAPIDO PARA DETECCAO DE HIV NA GESTANTE OU PAI/PARCEIRO",
                                                 "HIV" = "TESTE RÁPIDO PARA DETECÇÃO DE INFECÇÃO PELO HIV",              
                                                 "Sífilis na gestante ou pai/parceiro" = "TESTE RÁPIDO PARA SÍFILIS NA GESTANTE OU PAI/PARCEIRO",
                                                 "Sífilis" = "TESTE RÁPIDO PARA SÍFILIS",                             
                                                 "Hepatite C" =  "TESTE RÁPIDO PARA DETECÇÃO DE HEPATITE C",                     
                                                 "Hepatite B" =  "TESTE RÁPIDO PARA DETECÇÃO DE INFECÇÃO PELO HBV"),
                                    selected="TESTE RÁPIDO PARA DETECÇÃO DE INFECÇÃO PELO HIV"),
                                    width = 12, status = "primary")
                                ),
                                
                               fluidRow(
                               box(selectInput(
                                    inputId="teste_rap_esfporcs",
                                    label="Selecione um Centro de Saúde:",
                                    choices=list("CS ABRAÃO" = "CS ABRAÃO" ,  "CS AGRONÔMICA"  = "CS AGRONÔMICA",  "CS ALTO RIBEIRÃO" = "CS ALTO RIBEIRÃO",  
                                                 "CS ARMAÇÃO"  =  "CS ARMAÇÃO",  "CS BALNEÁRIO" =  "CS BALNEÁRIO",  "CS BARRA DA LAGOA" = "CS BARRA DA LAGOA",
                                                 "CS CACHOEIRA BOM JESUS" = "CS CACHOEIRA BOM JESUS", "CS CAIEIRA BARRA DO SUL" = "CS CAIEIRA BARRA DO SUL", 
                                                 "CS CAMPECHE" =  "CS CAMPECHE",  "CS CANASVIEIRAS" = "CS CANASVIEIRAS",  "CS CANTO DA LAGOA" = "CS CANTO DA LAGOA",  
                                                 "CS CAPOEIRAS"  =  "CS CAPOEIRAS",  "CS CARIANOS"  =  "CS CARIANOS",  "CS CENTRO" = "CS CENTRO",  
                                                 "CS COLONINHA" = "CS COLONINHA",  "CS COQUEIROS"  = "CS COQUEIROS",  "CS CÓRREGO GRANDE" = "CS CÓRREGO GRANDE",  
                                                 "CS COSTA DA LAGOA" =  "CS COSTA DA LAGOA",  "CS COSTEIRA DO PIRAJUBAÉ"="CS COSTEIRA DO PIRAJUBAÉ",  
                                                 "CS ESTREITO" = "CS ESTREITO",  "CS FAZENDA DO RIO TAVARES" = "CS FAZENDA DO RIO TAVARES", "CS INGLESES"= "CS INGLESES",  
                                                 "CS ITACORUBI"= "CS ITACORUBI",  "CS JARDIM ATLÂNTICO"= "CS JARDIM ATLÂNTICO",  "CS JOÃO PAULO"= "CS JOÃO PAULO",  "CS JURERE" ="CS JURERE" ,
                                                 "CS LAGOA DA CONCEIÇÃO"= "CS LAGOA DA CONCEIÇÃO", "CS MONTE CRISTO"= "CS MONTE CRISTO",  "CS MONTE SERRAT"= "CS MONTE SERRAT",  
                                                 "CS MORRO DAS PEDRAS"= "CS MORRO DAS PEDRAS",  "CS NOVO CONTINENTE"= "CS NOVO CONTINENTE",  "CS PANTANAL" =  "CS PANTANAL",  
                                                 "CS PANTANO DO SUL" = "CS PANTANO DO SUL", "CS PONTA DAS CANAS"=  "CS PONTA DAS CANAS",  "CS PRAINHA"=  "CS PRAINHA",  "CS RATONES"=  "CS RATONES",  
                                                 "CS RIBEIRÃO DA ILHA"= "CS RIBEIRÃO DA ILHA",  "CS RIO TAVARES"=  "CS RIO TAVARES",  "CS RIO VERMELHO"= "CS RIO VERMELHO",  
                                                 "CS SACO DOS LIMÕES"= "CS SACO DOS LIMÕES",  "CS SACO GRANDE"= "CS SACO GRANDE",  "CS SANTINHO"=  "CS SANTINHO",  
                                                 "CS SANTO ANTONIO LISBOA" = "CS SANTO ANTONIO LISBOA", "CS SAPE"  = "CS SAPE" , "CS TAPERA"=  "CS TAPERA",  "CS TRINDADE"= "CS TRINDADE",  
                                                 "CS VARGEM GRANDE"= "CS VARGEM GRANDE", "CS VARGEM PEQUENA"=  "CS VARGEM PEQUENA",  "CS VILA APARECIDA" = "CS VILA APARECIDA"),
                                    selected="CS ABRAÃO"),
                                    width = 12, status = "primary")
                               ),
                                
                               fluidRow(
                                   tabBox(title = "Quantidade de Testes Rápidos", width=12,
                                          tabPanel("Gráfico", plotlyOutput(outputId = "teste_rap_esf_plot")),
                                          tabPanel("Dados", dataTableOutput("teste_rap_esf_tab")),
                                          tabPanel("Sobre o Indicador", htmlOutput("teste_rap_esf_info"))
                                   )
                                )
                        ), 
                        
                        ###########################################################################################
                        #Falta em Consultas
                        ###########################################################################################
                        tabItem(tabName = "faltas_cons_esf", h2("Acesso nas Equipes de Saúde da Família"),
                                
                               fluidRow(
                                  box(selectInput(
                                    inputId="faltas_esf_tipo",
                                    label="Selecione o Tipo:",
                                    choices=list("Percentual de faltas - Odontologia" = "PERCENTUAL_FALTAS_ODONTO", 
                                                 "Percentual de faltas - Enfermagem" = "PERCENTUAL_FALTAS_ENF",  
                                                 "Percentual de faltas - Medicina" = "PERCENTUAL_FALTAS_MED"),
                                    selected="PERCENTUAL_FALTAS_ODONTO"),
                                    width = 12, status = "primary")
                                ),
                               
                             fluidRow(
                               box(selectInput(
                                    inputId="faltas_esfporcs",
                                    label="Selecione um Centro de Saúde:",
                                    choices=list("CS ABRAÃO" = "CS ABRAÃO" ,  "CS AGRONÔMICA"  = "CS AGRONÔMICA",  "CS ALTO RIBEIRÃO" = "CS ALTO RIBEIRÃO",  
                                                 "CS ARMAÇÃO"  =  "CS ARMAÇÃO",  "CS BALNEÁRIO" =  "CS BALNEÁRIO",  "CS BARRA DA LAGOA" = "CS BARRA DA LAGOA",
                                                 "CS CACHOEIRA BOM JESUS" = "CS CACHOEIRA BOM JESUS", "CS CAIEIRA BARRA DO SUL" = "CS CAIEIRA BARRA DO SUL", 
                                                 "CS CAMPECHE" =  "CS CAMPECHE",  "CS CANASVIEIRAS" = "CS CANASVIEIRAS",  "CS CANTO DA LAGOA" = "CS CANTO DA LAGOA",  
                                                 "CS CAPOEIRAS"  =  "CS CAPOEIRAS",  "CS CARIANOS"  =  "CS CARIANOS",  "CS CENTRO" = "CS CENTRO",  
                                                 "CS COLONINHA" = "CS COLONINHA",  "CS COQUEIROS"  = "CS COQUEIROS",  "CS CÓRREGO GRANDE" = "CS CÓRREGO GRANDE",  
                                                 "CS COSTA DA LAGOA" =  "CS COSTA DA LAGOA",  "CS COSTEIRA DO PIRAJUBAÉ"="CS COSTEIRA DO PIRAJUBAÉ",  
                                                 "CS ESTREITO" = "CS ESTREITO",  "CS FAZENDA DO RIO TAVARES" = "CS FAZENDA DO RIO TAVARES", "CS INGLESES"= "CS INGLESES",  
                                                 "CS ITACORUBI"= "CS ITACORUBI",  "CS JARDIM ATLÂNTICO"= "CS JARDIM ATLÂNTICO",  "CS JOÃO PAULO"= "CS JOÃO PAULO",  "CS JURERE" ="CS JURERE" ,
                                                 "CS LAGOA DA CONCEIÇÃO"= "CS LAGOA DA CONCEIÇÃO", "CS MONTE CRISTO"= "CS MONTE CRISTO",  "CS MONTE SERRAT"= "CS MONTE SERRAT",  
                                                 "CS MORRO DAS PEDRAS"= "CS MORRO DAS PEDRAS",  "CS NOVO CONTINENTE"= "CS NOVO CONTINENTE",  "CS PANTANAL" =  "CS PANTANAL",  
                                                 "CS PANTANO DO SUL" = "CS PANTANO DO SUL", "CS PONTA DAS CANAS"=  "CS PONTA DAS CANAS",  "CS PRAINHA"=  "CS PRAINHA",  "CS RATONES"=  "CS RATONES",  
                                                 "CS RIBEIRÃO DA ILHA"= "CS RIBEIRÃO DA ILHA",  "CS RIO TAVARES"=  "CS RIO TAVARES",  "CS RIO VERMELHO"= "CS RIO VERMELHO",  
                                                 "CS SACO DOS LIMÕES"= "CS SACO DOS LIMÕES",  "CS SACO GRANDE"= "CS SACO GRANDE",  "CS SANTINHO"=  "CS SANTINHO",  
                                                 "CS SANTO ANTONIO LISBOA" = "CS SANTO ANTONIO LISBOA", "CS SAPE"  = "CS SAPE" , "CS TAPERA"=  "CS TAPERA",  "CS TRINDADE"= "CS TRINDADE",  
                                                 "CS VARGEM GRANDE"= "CS VARGEM GRANDE", "CS VARGEM PEQUENA"=  "CS VARGEM PEQUENA",  "CS VILA APARECIDA" = "CS VILA APARECIDA"),
                                    selected="CS ABRAÃO"),
                                    width = 12, status = "primary")
                               ),                 
                                fluidRow(
                                   tabBox(title = "Percentual de Faltas em Consultas", width=12,
                                          tabPanel("Gráfico", plotlyOutput(outputId = "faltas_esf_plot")),
                                          tabPanel("Dados", dataTableOutput("faltas_esf_tab")),
                                          tabPanel("Sobre o Indicador", htmlOutput("faltas_esf_info"))
                                   )
                                )
                        ), 
                        ###########################################################################################
                        #Primeira Consulta Odontológica
                        ###########################################################################################
                        tabItem(tabName = "prim_cons_odonto_esf", h2("Acesso nas Equipes de Saúde da Família"),
                               
                               fluidRow(
                               box(selectInput(
                                    inputId="prim_cons_odonto_esfporcs",
                                    label="Selecione um Centro de Saúde:",
                                    choices=list("CS ABRAÃO" = "CS ABRAÃO" ,  "CS AGRONÔMICA"  = "CS AGRONÔMICA",  "CS ALTO RIBEIRÃO" = "CS ALTO RIBEIRÃO",  
                                                 "CS ARMAÇÃO"  =  "CS ARMAÇÃO",  "CS BALNEÁRIO" =  "CS BALNEÁRIO",  "CS BARRA DA LAGOA" = "CS BARRA DA LAGOA",
                                                 "CS CACHOEIRA BOM JESUS" = "CS CACHOEIRA BOM JESUS", "CS CAIEIRA BARRA DO SUL" = "CS CAIEIRA BARRA DO SUL", 
                                                 "CS CAMPECHE" =  "CS CAMPECHE",  "CS CANASVIEIRAS" = "CS CANASVIEIRAS",  "CS CANTO DA LAGOA" = "CS CANTO DA LAGOA",  
                                                 "CS CAPOEIRAS"  =  "CS CAPOEIRAS",  "CS CARIANOS"  =  "CS CARIANOS",  "CS CENTRO" = "CS CENTRO",  
                                                 "CS COLONINHA" = "CS COLONINHA",  "CS COQUEIROS"  = "CS COQUEIROS",  "CS CÓRREGO GRANDE" = "CS CÓRREGO GRANDE",  
                                                 "CS COSTA DA LAGOA" =  "CS COSTA DA LAGOA",  "CS COSTEIRA DO PIRAJUBAÉ"="CS COSTEIRA DO PIRAJUBAÉ",  
                                                 "CS ESTREITO" = "CS ESTREITO",  "CS FAZENDA DO RIO TAVARES" = "CS FAZENDA DO RIO TAVARES", "CS INGLESES"= "CS INGLESES",  
                                                 "CS ITACORUBI"= "CS ITACORUBI",  "CS JARDIM ATLÂNTICO"= "CS JARDIM ATLÂNTICO",  "CS JOÃO PAULO"= "CS JOÃO PAULO",  "CS JURERE" ="CS JURERE" ,
                                                 "CS LAGOA DA CONCEIÇÃO"= "CS LAGOA DA CONCEIÇÃO", "CS MONTE CRISTO"= "CS MONTE CRISTO",  "CS MONTE SERRAT"= "CS MONTE SERRAT",  
                                                 "CS MORRO DAS PEDRAS"= "CS MORRO DAS PEDRAS",  "CS NOVO CONTINENTE"= "CS NOVO CONTINENTE",  "CS PANTANAL" =  "CS PANTANAL",  
                                                 "CS PANTANO DO SUL" = "CS PANTANO DO SUL", "CS PONTA DAS CANAS"=  "CS PONTA DAS CANAS",  "CS PRAINHA"=  "CS PRAINHA",  "CS RATONES"=  "CS RATONES",  
                                                 "CS RIBEIRÃO DA ILHA"= "CS RIBEIRÃO DA ILHA",  "CS RIO TAVARES"=  "CS RIO TAVARES",  "CS RIO VERMELHO"= "CS RIO VERMELHO",  
                                                 "CS SACO DOS LIMÕES"= "CS SACO DOS LIMÕES",  "CS SACO GRANDE"= "CS SACO GRANDE",  "CS SANTINHO"=  "CS SANTINHO",  
                                                 "CS SANTO ANTONIO LISBOA" = "CS SANTO ANTONIO LISBOA", "CS SAPE"  = "CS SAPE" , "CS TAPERA"=  "CS TAPERA",  "CS TRINDADE"= "CS TRINDADE",  
                                                 "CS VARGEM GRANDE"= "CS VARGEM GRANDE", "CS VARGEM PEQUENA"=  "CS VARGEM PEQUENA",  "CS VILA APARECIDA" = "CS VILA APARECIDA"),
                                    selected="CS ABRAÃO"),
                                    width = 12, status = "primary")
                               ),

                                
                               fluidRow(
                                   tabBox(title = "Primeira Consulta Odontológica", width=12,
                                          tabPanel("Gráfico", plotlyOutput(outputId = "prim_cons_odonto_esf_plot")),
                                          tabPanel("Dados", dataTableOutput("prim_cons_odonto_esf_tab")),
                                          tabPanel("Sobre o Indicador", htmlOutput("prim_cons_odonto_esf_info"))
                                   )
                                )
                        ), 
       
                        ###########################################################################################
                        #Atendimentos Inadequados nas UPAS
                        ###########################################################################################
                        tabItem(tabName = "atd_inad_upa_esf", h2("Acesso nas Equipes de Saúde da Família"),
                                
                               fluidRow(
                               box(selectInput(
                                    inputId="atd_inad_upa_esfporcs",
                                    label="Selecione um Centro de Saúde:",
                                    choices=list("CS ABRAÃO" = "CS ABRAÃO" ,  "CS AGRONÔMICA"  = "CS AGRONÔMICA",  "CS ALTO RIBEIRÃO" = "CS ALTO RIBEIRÃO",  
                                                 "CS ARMAÇÃO"  =  "CS ARMAÇÃO",  "CS BALNEÁRIO" =  "CS BALNEÁRIO",  "CS BARRA DA LAGOA" = "CS BARRA DA LAGOA",
                                                 "CS CACHOEIRA BOM JESUS" = "CS CACHOEIRA BOM JESUS", "CS CAIEIRA BARRA DO SUL" = "CS CAIEIRA BARRA DO SUL", 
                                                 "CS CAMPECHE" =  "CS CAMPECHE",  "CS CANASVIEIRAS" = "CS CANASVIEIRAS",  "CS CANTO DA LAGOA" = "CS CANTO DA LAGOA",  
                                                 "CS CAPOEIRAS"  =  "CS CAPOEIRAS",  "CS CARIANOS"  =  "CS CARIANOS",  "CS CENTRO" = "CS CENTRO",  
                                                 "CS COLONINHA" = "CS COLONINHA",  "CS COQUEIROS"  = "CS COQUEIROS",  "CS CÓRREGO GRANDE" = "CS CÓRREGO GRANDE",  
                                                 "CS COSTA DA LAGOA" =  "CS COSTA DA LAGOA",  "CS COSTEIRA DO PIRAJUBAÉ"="CS COSTEIRA DO PIRAJUBAÉ",  
                                                 "CS ESTREITO" = "CS ESTREITO",  "CS FAZENDA DO RIO TAVARES" = "CS FAZENDA DO RIO TAVARES", "CS INGLESES"= "CS INGLESES",  
                                                 "CS ITACORUBI"= "CS ITACORUBI",  "CS JARDIM ATLÂNTICO"= "CS JARDIM ATLÂNTICO",  "CS JOÃO PAULO"= "CS JOÃO PAULO",  "CS JURERE" ="CS JURERE" ,
                                                 "CS LAGOA DA CONCEIÇÃO"= "CS LAGOA DA CONCEIÇÃO", "CS MONTE CRISTO"= "CS MONTE CRISTO",  "CS MONTE SERRAT"= "CS MONTE SERRAT",  
                                                 "CS MORRO DAS PEDRAS"= "CS MORRO DAS PEDRAS",  "CS NOVO CONTINENTE"= "CS NOVO CONTINENTE",  "CS PANTANAL" =  "CS PANTANAL",  
                                                 "CS PANTANO DO SUL" = "CS PANTANO DO SUL", "CS PONTA DAS CANAS"=  "CS PONTA DAS CANAS",  "CS PRAINHA"=  "CS PRAINHA",  "CS RATONES"=  "CS RATONES",  
                                                 "CS RIBEIRÃO DA ILHA"= "CS RIBEIRÃO DA ILHA",  "CS RIO TAVARES"=  "CS RIO TAVARES",  "CS RIO VERMELHO"= "CS RIO VERMELHO",  
                                                 "CS SACO DOS LIMÕES"= "CS SACO DOS LIMÕES",  "CS SACO GRANDE"= "CS SACO GRANDE",  "CS SANTINHO"=  "CS SANTINHO",  
                                                 "CS SANTO ANTONIO LISBOA" = "CS SANTO ANTONIO LISBOA", "CS SAPE"  = "CS SAPE" , "CS TAPERA"=  "CS TAPERA",  "CS TRINDADE"= "CS TRINDADE",  
                                                 "CS VARGEM GRANDE"= "CS VARGEM GRANDE", "CS VARGEM PEQUENA"=  "CS VARGEM PEQUENA",  "CS VILA APARECIDA" = "CS VILA APARECIDA"),
                                    selected="CS ABRAÃO"),
                                    width = 12, status = "primary")
                                ), 

                                
                               fluidRow(
                                   tabBox(title = "Atendimentos Inadequados na UPAS", width=12,
                                          tabPanel("Gráfico", plotlyOutput(outputId = "atd_inad_upa_esf_plot")),
                                          tabPanel("Dados", dataTableOutput("atd_inad_upa_esf_tab")),
                                          tabPanel("Sobre o Indicador", htmlOutput("atd_inad_upa_esf_info"))
                                   )
                                )
                        ), 

                        
                        ###########################################################################################
                        #Dashboard Equipes de Saúde Longitudinalidade
                        ###########################################################################################
                        ###########################################################################################
                        #Seguimento Pré-natal
                        ###########################################################################################
                        tabItem(tabName = "seg_prenat_esf", h2("Longitudinalidade nas Equipes de Saúde da Família"),
                                
                                fluidRow(
                                  box(selectInput(
                                    inputId="gestantes_esf_opcao",
                                    label="Selecione o Tipo:",
                                    choices=list("Total de Mulheres no Terceiro Trimestre de Gestação" = "GESTANTES", "Total de Gestantes com Pré-natal nos Três Trimestres" = "GEST_TODOS_TRI", "Percentual de Gestantes com Pré-natal nos Três Trimestres" = "PERCENTUAL_TODOS_TRI",
                                                 "Total de Gestantes com 7 ou Mais Consultas Pré-Natais" = "GESTANTES_7_CONS", "Percentual de Gestantes com 7 ou Mais Consultas Pré-Natais" = "PERCENTUAL_GESTANTES_7_CONS"),
                                    selected= "Percentual de Gestantes com Pré-natal nos Três Trimestres"),
                                    width = 12, status = "primary"),
                                  
                                  box(selectInput(
                                    inputId="longitudinalidade_esfporcs",
                                    label="Selecione um Centro de Saúde:",
                                    choices=list("CS ABRAÃO" = "CS ABRAÃO" ,  "CS AGRONÔMICA"  = "CS AGRONÔMICA",  "CS ALTO RIBEIRÃO" = "CS ALTO RIBEIRÃO",  
                                                 "CS ARMAÇÃO"  =  "CS ARMAÇÃO",  "CS BALNEÁRIO" =  "CS BALNEÁRIO",  "CS BARRA DA LAGOA" = "CS BARRA DA LAGOA",
                                                 "CS CACHOEIRA BOM JESUS" = "CS CACHOEIRA BOM JESUS", "CS CAIEIRA BARRA DO SUL" = "CS CAIEIRA BARRA DO SUL", 
                                                 "CS CAMPECHE" =  "CS CAMPECHE",  "CS CANASVIEIRAS" = "CS CANASVIEIRAS",  "CS CANTO DA LAGOA" = "CS CANTO DA LAGOA",  
                                                 "CS CAPOEIRAS"  =  "CS CAPOEIRAS",  "CS CARIANOS"  =  "CS CARIANOS",  "CS CENTRO" = "CS CENTRO",  
                                                 "CS COLONINHA" = "CS COLONINHA",  "CS COQUEIROS"  = "CS COQUEIROS",  "CS CÓRREGO GRANDE" = "CS CÓRREGO GRANDE",  
                                                 "CS COSTA DA LAGOA" =  "CS COSTA DA LAGOA",  "CS COSTEIRA DO PIRAJUBAÉ"="CS COSTEIRA DO PIRAJUBAÉ",  
                                                 "CS ESTREITO" = "CS ESTREITO",  "CS FAZENDA DO RIO TAVARES" = "CS FAZENDA DO RIO TAVARES", "CS INGLESES"= "CS INGLESES",  
                                                 "CS ITACORUBI"= "CS ITACORUBI",  "CS JARDIM ATLÂNTICO"= "CS JARDIM ATLÂNTICO",  "CS JOÃO PAULO"= "CS JOÃO PAULO",  "CS JURERE" ="CS JURERE" ,
                                                 "CS LAGOA DA CONCEIÇÃO"= "CS LAGOA DA CONCEIÇÃO", "CS MONTE CRISTO"= "CS MONTE CRISTO",  "CS MONTE SERRAT"= "CS MONTE SERRAT",  
                                                 "CS MORRO DAS PEDRAS"= "CS MORRO DAS PEDRAS",  "CS NOVO CONTINENTE"= "CS NOVO CONTINENTE",  "CS PANTANAL" =  "CS PANTANAL",  
                                                 "CS PANTANO DO SUL" = "CS PANTANO DO SUL", "CS PONTA DAS CANAS"=  "CS PONTA DAS CANAS",  "CS PRAINHA"=  "CS PRAINHA",  "CS RATONES"=  "CS RATONES",  
                                                 "CS RIBEIRÃO DA ILHA"= "CS RIBEIRÃO DA ILHA",  "CS RIO TAVARES"=  "CS RIO TAVARES",  "CS RIO VERMELHO"= "CS RIO VERMELHO",  
                                                 "CS SACO DOS LIMÕES"= "CS SACO DOS LIMÕES",  "CS SACO GRANDE"= "CS SACO GRANDE",  "CS SANTINHO"=  "CS SANTINHO",  
                                                 "CS SANTO ANTONIO LISBOA" = "CS SANTO ANTONIO LISBOA", "CS SAPE"  = "CS SAPE" , "CS TAPERA"=  "CS TAPERA",  "CS TRINDADE"= "CS TRINDADE",  
                                                 "CS VARGEM GRANDE"= "CS VARGEM GRANDE", "CS VARGEM PEQUENA"=  "CS VARGEM PEQUENA",  "CS VILA APARECIDA" = "CS VILA APARECIDA"),
                                    selected="CS ABRAÃO"),
                                    width = 12, status = "primary")
                                ),
                                
                                
                                fluidRow(
                                  tabBox(title = "Mulheres no Terceiro Trimestre de Gestação", width=12,
                                         tabPanel("Gráfico", plotlyOutput(outputId = "gestantes_esf_plot")),
                                         tabPanel("Dados", dataTableOutput("gestantes_esf_tab")),
                                         tabPanel("Sobre o Indicador", htmlOutput("gestantes_esf_info"))
                                  )
                                )
                        ), 
                        
                        ###########################################################################################
                        #Citopatológico
                        ###########################################################################################
                       tabItem(tabName = "cito_esf", h2("Longitudinalidade na Atenção Primária em Florianópolis"),
                                
                               fluidRow(
                               box(selectInput(
                                    inputId="citopatologico_esfporcs",
                                    label="Selecione um Centro de Saúde:",
                                    choices=list("CS ABRAÃO" = "CS ABRAÃO" ,  "CS AGRONÔMICA"  = "CS AGRONÔMICA",  "CS ALTO RIBEIRÃO" = "CS ALTO RIBEIRÃO",  
                                                 "CS ARMAÇÃO"  =  "CS ARMAÇÃO",  "CS BALNEÁRIO" =  "CS BALNEÁRIO",  "CS BARRA DA LAGOA" = "CS BARRA DA LAGOA",
                                                 "CS CACHOEIRA BOM JESUS" = "CS CACHOEIRA BOM JESUS", "CS CAIEIRA BARRA DO SUL" = "CS CAIEIRA BARRA DO SUL", 
                                                 "CS CAMPECHE" =  "CS CAMPECHE",  "CS CANASVIEIRAS" = "CS CANASVIEIRAS",  "CS CANTO DA LAGOA" = "CS CANTO DA LAGOA",  
                                                 "CS CAPOEIRAS"  =  "CS CAPOEIRAS",  "CS CARIANOS"  =  "CS CARIANOS",  "CS CENTRO" = "CS CENTRO",  
                                                 "CS COLONINHA" = "CS COLONINHA",  "CS COQUEIROS"  = "CS COQUEIROS",  "CS CÓRREGO GRANDE" = "CS CÓRREGO GRANDE",  
                                                 "CS COSTA DA LAGOA" =  "CS COSTA DA LAGOA",  "CS COSTEIRA DO PIRAJUBAÉ"="CS COSTEIRA DO PIRAJUBAÉ",  
                                                 "CS ESTREITO" = "CS ESTREITO",  "CS FAZENDA DO RIO TAVARES" = "CS FAZENDA DO RIO TAVARES", "CS INGLESES"= "CS INGLESES",  
                                                 "CS ITACORUBI"= "CS ITACORUBI",  "CS JARDIM ATLÂNTICO"= "CS JARDIM ATLÂNTICO",  "CS JOÃO PAULO"= "CS JOÃO PAULO",  "CS JURERE" ="CS JURERE" ,
                                                 "CS LAGOA DA CONCEIÇÃO"= "CS LAGOA DA CONCEIÇÃO", "CS MONTE CRISTO"= "CS MONTE CRISTO",  "CS MONTE SERRAT"= "CS MONTE SERRAT",  
                                                 "CS MORRO DAS PEDRAS"= "CS MORRO DAS PEDRAS",  "CS NOVO CONTINENTE"= "CS NOVO CONTINENTE",  "CS PANTANAL" =  "CS PANTANAL",  
                                                 "CS PANTANO DO SUL" = "CS PANTANO DO SUL", "CS PONTA DAS CANAS"=  "CS PONTA DAS CANAS",  "CS PRAINHA"=  "CS PRAINHA",  "CS RATONES"=  "CS RATONES",  
                                                 "CS RIBEIRÃO DA ILHA"= "CS RIBEIRÃO DA ILHA",  "CS RIO TAVARES"=  "CS RIO TAVARES",  "CS RIO VERMELHO"= "CS RIO VERMELHO",  
                                                 "CS SACO DOS LIMÕES"= "CS SACO DOS LIMÕES",  "CS SACO GRANDE"= "CS SACO GRANDE",  "CS SANTINHO"=  "CS SANTINHO",  
                                                 "CS SANTO ANTONIO LISBOA" = "CS SANTO ANTONIO LISBOA", "CS SAPE"  = "CS SAPE" , "CS TAPERA"=  "CS TAPERA",  "CS TRINDADE"= "CS TRINDADE",  
                                                 "CS VARGEM GRANDE"= "CS VARGEM GRANDE", "CS VARGEM PEQUENA"=  "CS VARGEM PEQUENA",  "CS VILA APARECIDA" = "CS VILA APARECIDA"),
                                    selected="CS ABRAÃO"),
                                    width = 12, status = "primary")
                                ), 
                                
                              
                              fluidRow(
                                   tabBox(title = "Atendimentos Inadequados na UPAS", width=12,
                                          tabPanel("Gráfico", plotlyOutput(outputId = "citopatologico_esf_plot")),
                                          tabPanel("Dados", dataTableOutput("citopatologico_esf_tab")),
                                          tabPanel("Sobre o Indicador", htmlOutput("citopatologico_esf_info"))
                                   )
                                )
                        ),
                        ###########################################################################################
                        #Tratamento Odontológico
                        ###########################################################################################
                        tabItem(tabName = "tratam_compl_odonto_esf", h2("Longitudinalidade nas Equipes de Saúde da Família"),
                               
                               fluidRow(
                               box(selectInput(
                                    inputId="tratam_compl_odonto_esfporcs",
                                    label="Selecione um Centro de Saúde:",
                                    choices=list("CS ABRAÃO" = "CS ABRAÃO" ,  "CS AGRONÔMICA"  = "CS AGRONÔMICA",  "CS ALTO RIBEIRÃO" = "CS ALTO RIBEIRÃO",  
                                                 "CS ARMAÇÃO"  =  "CS ARMAÇÃO",  "CS BALNEÁRIO" =  "CS BALNEÁRIO",  "CS BARRA DA LAGOA" = "CS BARRA DA LAGOA",
                                                 "CS CACHOEIRA BOM JESUS" = "CS CACHOEIRA BOM JESUS", "CS CAIEIRA BARRA DO SUL" = "CS CAIEIRA BARRA DO SUL", 
                                                 "CS CAMPECHE" =  "CS CAMPECHE",  "CS CANASVIEIRAS" = "CS CANASVIEIRAS",  "CS CANTO DA LAGOA" = "CS CANTO DA LAGOA",  
                                                 "CS CAPOEIRAS"  =  "CS CAPOEIRAS",  "CS CARIANOS"  =  "CS CARIANOS",  "CS CENTRO" = "CS CENTRO",  
                                                 "CS COLONINHA" = "CS COLONINHA",  "CS COQUEIROS"  = "CS COQUEIROS",  "CS CÓRREGO GRANDE" = "CS CÓRREGO GRANDE",  
                                                 "CS COSTA DA LAGOA" =  "CS COSTA DA LAGOA",  "CS COSTEIRA DO PIRAJUBAÉ"="CS COSTEIRA DO PIRAJUBAÉ",  
                                                 "CS ESTREITO" = "CS ESTREITO",  "CS FAZENDA DO RIO TAVARES" = "CS FAZENDA DO RIO TAVARES", "CS INGLESES"= "CS INGLESES",  
                                                 "CS ITACORUBI"= "CS ITACORUBI",  "CS JARDIM ATLÂNTICO"= "CS JARDIM ATLÂNTICO",  "CS JOÃO PAULO"= "CS JOÃO PAULO",  "CS JURERE" ="CS JURERE" ,
                                                 "CS LAGOA DA CONCEIÇÃO"= "CS LAGOA DA CONCEIÇÃO", "CS MONTE CRISTO"= "CS MONTE CRISTO",  "CS MONTE SERRAT"= "CS MONTE SERRAT",  
                                                 "CS MORRO DAS PEDRAS"= "CS MORRO DAS PEDRAS",  "CS NOVO CONTINENTE"= "CS NOVO CONTINENTE",  "CS PANTANAL" =  "CS PANTANAL",  
                                                 "CS PANTANO DO SUL" = "CS PANTANO DO SUL", "CS PONTA DAS CANAS"=  "CS PONTA DAS CANAS",  "CS PRAINHA"=  "CS PRAINHA",  "CS RATONES"=  "CS RATONES",  
                                                 "CS RIBEIRÃO DA ILHA"= "CS RIBEIRÃO DA ILHA",  "CS RIO TAVARES"=  "CS RIO TAVARES",  "CS RIO VERMELHO"= "CS RIO VERMELHO",  
                                                 "CS SACO DOS LIMÕES"= "CS SACO DOS LIMÕES",  "CS SACO GRANDE"= "CS SACO GRANDE",  "CS SANTINHO"=  "CS SANTINHO",  
                                                 "CS SANTO ANTONIO LISBOA" = "CS SANTO ANTONIO LISBOA", "CS SAPE"  = "CS SAPE" , "CS TAPERA"=  "CS TAPERA",  "CS TRINDADE"= "CS TRINDADE",  
                                                 "CS VARGEM GRANDE"= "CS VARGEM GRANDE", "CS VARGEM PEQUENA"=  "CS VARGEM PEQUENA",  "CS VILA APARECIDA" = "CS VILA APARECIDA"),
                                    selected="CS ABRAÃO"),
                                    width = 12, status = "primary")
                               ),

                                
                               fluidRow(
                                   tabBox(title = "Tratamento Odontológico Completado", width=12,
                                          tabPanel("Gráfico", plotlyOutput(outputId = "tratam_compl_odonto_esf_plot")),
                                          tabPanel("Dados", dataTableOutput("tratam_compl_odonto_esf_tab")),
                                          tabPanel("Sobre o Indicador", htmlOutput("tratam_compl_odonto_esf_info"))
                                   )
                                )
                        ), 
   
                        ###########################################################################################
                        #Sífilis
                        ###########################################################################################
                        tabItem(tabName = "sifilis_esf", h2("Longitudinalidade na Atenção Primária em Florianópolis"),
                                
                                fluidRow(
                                  box(selectInput(
                                    inputId="sifilis_esf_opcao",
                                    label="Selecione o Tipo:",
                                    choices=list("Total de casos de sífilis" = "CASOS", "Total tratamentos para sífilis" = "TRATADOS", "Percentual de casos de sífilis tratados" = "PERC_TRATAMENTO"),
                                    selected= "PERC_TRATAMENTO"),
                                    width = 12, status = "primary"),

                                  box(selectInput(
                                    inputId="sifilis_esfporcs",
                                    label="Selecione um Centro de Saúde:",
                                    choices=list("CS ABRAÃO" = "CS ABRAÃO" ,  "CS AGRONÔMICA"  = "CS AGRONÔMICA",  "CS ALTO RIBEIRÃO" = "CS ALTO RIBEIRÃO",  
                                                 "CS ARMAÇÃO"  =  "CS ARMAÇÃO",  "CS BALNEÁRIO" =  "CS BALNEÁRIO",  "CS BARRA DA LAGOA" = "CS BARRA DA LAGOA",
                                                 "CS CACHOEIRA BOM JESUS" = "CS CACHOEIRA BOM JESUS", "CS CAIEIRA BARRA DO SUL" = "CS CAIEIRA BARRA DO SUL", 
                                                 "CS CAMPECHE" =  "CS CAMPECHE",  "CS CANASVIEIRAS" = "CS CANASVIEIRAS",  "CS CANTO DA LAGOA" = "CS CANTO DA LAGOA",  
                                                 "CS CAPOEIRAS"  =  "CS CAPOEIRAS",  "CS CARIANOS"  =  "CS CARIANOS",  "CS CENTRO" = "CS CENTRO",  
                                                 "CS COLONINHA" = "CS COLONINHA",  "CS COQUEIROS"  = "CS COQUEIROS",  "CS CÓRREGO GRANDE" = "CS CÓRREGO GRANDE",  
                                                 "CS COSTA DA LAGOA" =  "CS COSTA DA LAGOA",  "CS COSTEIRA DO PIRAJUBAÉ"="CS COSTEIRA DO PIRAJUBAÉ",  
                                                 "CS ESTREITO" = "CS ESTREITO",  "CS FAZENDA DO RIO TAVARES" = "CS FAZENDA DO RIO TAVARES", "CS INGLESES"= "CS INGLESES",  
                                                 "CS ITACORUBI"= "CS ITACORUBI",  "CS JARDIM ATLÂNTICO"= "CS JARDIM ATLÂNTICO",  "CS JOÃO PAULO"= "CS JOÃO PAULO",  "CS JURERE" ="CS JURERE" ,
                                                 "CS LAGOA DA CONCEIÇÃO"= "CS LAGOA DA CONCEIÇÃO", "CS MONTE CRISTO"= "CS MONTE CRISTO",  "CS MONTE SERRAT"= "CS MONTE SERRAT",  
                                                 "CS MORRO DAS PEDRAS"= "CS MORRO DAS PEDRAS",  "CS NOVO CONTINENTE"= "CS NOVO CONTINENTE",  "CS PANTANAL" =  "CS PANTANAL",  
                                                 "CS PANTANO DO SUL" = "CS PANTANO DO SUL", "CS PONTA DAS CANAS"=  "CS PONTA DAS CANAS",  "CS PRAINHA"=  "CS PRAINHA",  "CS RATONES"=  "CS RATONES",  
                                                 "CS RIBEIRÃO DA ILHA"= "CS RIBEIRÃO DA ILHA",  "CS RIO TAVARES"=  "CS RIO TAVARES",  "CS RIO VERMELHO"= "CS RIO VERMELHO",  
                                                 "CS SACO DOS LIMÕES"= "CS SACO DOS LIMÕES",  "CS SACO GRANDE"= "CS SACO GRANDE",  "CS SANTINHO"=  "CS SANTINHO",  
                                                 "CS SANTO ANTONIO LISBOA" = "CS SANTO ANTONIO LISBOA", "CS SAPE"  = "CS SAPE" , "CS TAPERA"=  "CS TAPERA",  "CS TRINDADE"= "CS TRINDADE",  
                                                 "CS VARGEM GRANDE"= "CS VARGEM GRANDE", "CS VARGEM PEQUENA"=  "CS VARGEM PEQUENA",  "CS VILA APARECIDA" = "CS VILA APARECIDA"),
                                    selected="CS ABRAÃO"),
                                    width = 12, status = "primary")
                                ),
                               
                                fluidRow(
                                  tabBox(title = "Percentual de casos de sífilis tratados", width=12,
                                         tabPanel("Gráfico", plotlyOutput(outputId = "sifilis_esf_plot")),
                                         tabPanel("Dados", dataTableOutput("sifilis_esf_tab")),
                                         tabPanel("Sobre o Indicador", htmlOutput("sifilis_esf_info"))
                                  )
                                )
                        ), 

                        
                        ###########################################################################################
                        #Dashboard Equipes de Saúde Integralidade
                        ###########################################################################################
                        tabItem(tabName = "encam_med_esf", h2("Integralidade nas Equipes de Saúde da Família"),
                                
                                fluidRow(
                                  box(selectInput(
                                    inputId="encam_med_esf_opcao",
                                    label="Selecione o Tipo:",
                                    choices=list("Consulta Médica" = "Consulta", "Encaminhamento Médico" = "Encaminhamento", "Percentual de Encaminhamento Médico" = "Percentual de Encaminhamento"),
                                    selected="Percentual de Encaminhamento Médico"),
                                    width = 12, status = "primary"),
                                  
                                  box(selectInput(
                                    inputId="encam_med_esfporcs",
                                    label="Selecione um Centro de Saúde:",
                                    choices=list("CS ABRAÃO" = "CS ABRAÃO" ,  "CS AGRONÔMICA"  = "CS AGRONÔMICA",  "CS ALTO RIBEIRÃO" = "CS ALTO RIBEIRÃO",  
                                                 "CS ARMAÇÃO"  =  "CS ARMAÇÃO",  "CS BALNEÁRIO" =  "CS BALNEÁRIO",  "CS BARRA DA LAGOA" = "CS BARRA DA LAGOA",
                                                 "CS CACHOEIRA BOM JESUS" = "CS CACHOEIRA BOM JESUS", "CS CAIEIRA BARRA DO SUL" = "CS CAIEIRA BARRA DO SUL", 
                                                 "CS CAMPECHE" =  "CS CAMPECHE",  "CS CANASVIEIRAS" = "CS CANASVIEIRAS",  "CS CANTO DA LAGOA" = "CS CANTO DA LAGOA",  
                                                 "CS CAPOEIRAS"  =  "CS CAPOEIRAS",  "CS CARIANOS"  =  "CS CARIANOS",  "CS CENTRO" = "CS CENTRO",  
                                                 "CS COLONINHA" = "CS COLONINHA",  "CS COQUEIROS"  = "CS COQUEIROS",  "CS CÓRREGO GRANDE" = "CS CÓRREGO GRANDE",  
                                                 "CS COSTA DA LAGOA" =  "CS COSTA DA LAGOA",  "CS COSTEIRA DO PIRAJUBAÉ"="CS COSTEIRA DO PIRAJUBAÉ",  
                                                 "CS ESTREITO" = "CS ESTREITO",  "CS FAZENDA DO RIO TAVARES" = "CS FAZENDA DO RIO TAVARES", "CS INGLESES"= "CS INGLESES",  
                                                 "CS ITACORUBI"= "CS ITACORUBI",  "CS JARDIM ATLÂNTICO"= "CS JARDIM ATLÂNTICO",  "CS JOÃO PAULO"= "CS JOÃO PAULO",  "CS JURERE" ="CS JURERE" ,
                                                 "CS LAGOA DA CONCEIÇÃO"= "CS LAGOA DA CONCEIÇÃO", "CS MONTE CRISTO"= "CS MONTE CRISTO",  "CS MONTE SERRAT"= "CS MONTE SERRAT",  
                                                 "CS MORRO DAS PEDRAS"= "CS MORRO DAS PEDRAS",  "CS NOVO CONTINENTE"= "CS NOVO CONTINENTE",  "CS PANTANAL" =  "CS PANTANAL",  
                                                 "CS PANTANO DO SUL" = "CS PANTANO DO SUL", "CS PONTA DAS CANAS"=  "CS PONTA DAS CANAS",  "CS PRAINHA"=  "CS PRAINHA",  "CS RATONES"=  "CS RATONES",  
                                                 "CS RIBEIRÃO DA ILHA"= "CS RIBEIRÃO DA ILHA",  "CS RIO TAVARES"=  "CS RIO TAVARES",  "CS RIO VERMELHO"= "CS RIO VERMELHO",  
                                                 "CS SACO DOS LIMÕES"= "CS SACO DOS LIMÕES",  "CS SACO GRANDE"= "CS SACO GRANDE",  "CS SANTINHO"=  "CS SANTINHO",  
                                                 "CS SANTO ANTONIO LISBOA" = "CS SANTO ANTONIO LISBOA", "CS SAPE"  = "CS SAPE" , "CS TAPERA"=  "CS TAPERA",  "CS TRINDADE"= "CS TRINDADE",  
                                                 "CS VARGEM GRANDE"= "CS VARGEM GRANDE", "CS VARGEM PEQUENA"=  "CS VARGEM PEQUENA",  "CS VILA APARECIDA" = "CS VILA APARECIDA"),
                                    selected="CS ABRAÃO"),
                                    width = 12, status = "primary")
                                ),
                                
                                
                                fluidRow(
                                  tabBox(title = "Consultas/Encaminhamentos Médicos por Trimestre", width=12,
                                         tabPanel("Gráfico", plotlyOutput(outputId = "encam_med_esf_plot")),
                                         tabPanel("Dados", dataTableOutput("encam_med_esf_tab")),
                                         tabPanel("Sobre o Indicador", htmlOutput("encam_med_esf_info"))
                                  )
                                )
                        ),
                        
                        ###########################################################################################
                        #Procedimentos Complementares
                        ###########################################################################################
                        tabItem(tabName = "proc_compl_esf", h2("Integralidade nas Equipes de Saúde da Família"),
                                
                                fluidRow(
                                  box(selectInput(
                                    inputId="proc_compl_esf_opcao",
                                    label="Selecione o Tipo:",
                                    choices=list("Médico" = "Médico", "Odontólogo" = "Odontólogo"),
                                    selected="Médico"),
                                    width = 12, status = "primary"),
                                  
                                 box(selectInput(
                                    inputId="proc_compl_esfporcs",
                                    label="Selecione um Centro de Saúde:",
                                    choices=list("CS ABRAÃO" = "CS ABRAÃO" ,  "CS AGRONÔMICA"  = "CS AGRONÔMICA",  "CS ALTO RIBEIRÃO" = "CS ALTO RIBEIRÃO",  
                                                 "CS ARMAÇÃO"  =  "CS ARMAÇÃO",  "CS BALNEÁRIO" =  "CS BALNEÁRIO",  "CS BARRA DA LAGOA" = "CS BARRA DA LAGOA",
                                                 "CS CACHOEIRA BOM JESUS" = "CS CACHOEIRA BOM JESUS", "CS CAIEIRA BARRA DO SUL" = "CS CAIEIRA BARRA DO SUL", 
                                                 "CS CAMPECHE" =  "CS CAMPECHE",  "CS CANASVIEIRAS" = "CS CANASVIEIRAS",  "CS CANTO DA LAGOA" = "CS CANTO DA LAGOA",  
                                                 "CS CAPOEIRAS"  =  "CS CAPOEIRAS",  "CS CARIANOS"  =  "CS CARIANOS",  "CS CENTRO" = "CS CENTRO",  
                                                 "CS COLONINHA" = "CS COLONINHA",  "CS COQUEIROS"  = "CS COQUEIROS",  "CS CÓRREGO GRANDE" = "CS CÓRREGO GRANDE",  
                                                 "CS COSTA DA LAGOA" =  "CS COSTA DA LAGOA",  "CS COSTEIRA DO PIRAJUBAÉ"="CS COSTEIRA DO PIRAJUBAÉ",  
                                                 "CS ESTREITO" = "CS ESTREITO",  "CS FAZENDA DO RIO TAVARES" = "CS FAZENDA DO RIO TAVARES", "CS INGLESES"= "CS INGLESES",  
                                                 "CS ITACORUBI"= "CS ITACORUBI",  "CS JARDIM ATLÂNTICO"= "CS JARDIM ATLÂNTICO",  "CS JOÃO PAULO"= "CS JOÃO PAULO",  "CS JURERE" ="CS JURERE" ,
                                                 "CS LAGOA DA CONCEIÇÃO"= "CS LAGOA DA CONCEIÇÃO", "CS MONTE CRISTO"= "CS MONTE CRISTO",  "CS MONTE SERRAT"= "CS MONTE SERRAT",  
                                                 "CS MORRO DAS PEDRAS"= "CS MORRO DAS PEDRAS",  "CS NOVO CONTINENTE"= "CS NOVO CONTINENTE",  "CS PANTANAL" =  "CS PANTANAL",  
                                                 "CS PANTANO DO SUL" = "CS PANTANO DO SUL", "CS PONTA DAS CANAS"=  "CS PONTA DAS CANAS",  "CS PRAINHA"=  "CS PRAINHA",  "CS RATONES"=  "CS RATONES",  
                                                 "CS RIBEIRÃO DA ILHA"= "CS RIBEIRÃO DA ILHA",  "CS RIO TAVARES"=  "CS RIO TAVARES",  "CS RIO VERMELHO"= "CS RIO VERMELHO",  
                                                 "CS SACO DOS LIMÕES"= "CS SACO DOS LIMÕES",  "CS SACO GRANDE"= "CS SACO GRANDE",  "CS SANTINHO"=  "CS SANTINHO",  
                                                 "CS SANTO ANTONIO LISBOA" = "CS SANTO ANTONIO LISBOA", "CS SAPE"  = "CS SAPE" , "CS TAPERA"=  "CS TAPERA",  "CS TRINDADE"= "CS TRINDADE",  
                                                 "CS VARGEM GRANDE"= "CS VARGEM GRANDE", "CS VARGEM PEQUENA"=  "CS VARGEM PEQUENA",  "CS VILA APARECIDA" = "CS VILA APARECIDA"),
                                    selected="CS ABRAÃO"),
                                    width = 12, status = "primary")
                                ),

                                fluidRow(
                                  tabBox(title = "Procedimentos Complementares por Trimestre", width=12,
                                         tabPanel("Gráfico", plotlyOutput(outputId = "proc_compl_esf_plot1")),
                                         tabPanel("Dados", dataTableOutput("proc_compl_esf_tab1")),
                                         tabPanel("Sobre o Indicador", htmlOutput("proc_compl_esf_info1"))
                                  )
                                ),
                                
                                fluidRow(
                                  tabBox(title = "Procedimentos Complementares por Trimestre", width=12,
                                         tabPanel("Gráfico", plotlyOutput(outputId = "proc_compl_esf_plot2")),
                                         tabPanel("Dados", dataTableOutput("proc_compl_esf_tab2")),
                                         tabPanel("Sobre o Indicador", htmlOutput("proc_compl_esf_info2"))
                                  )
                                ),
                                
                                fluidRow(
                                  tabBox(title = "Procedimentos Complementares por Trimestre", width=12,
                                         tabPanel("Gráfico", plotlyOutput(outputId = "proc_compl_esf_plot3")),
                                         tabPanel("Dados", dataTableOutput("proc_compl_esf_tab3")),
                                         tabPanel("Sobre o Indicador", htmlOutput("proc_compl_esf_info3"))
                                  )
                                ),
                                
                                fluidRow(
                                  tabBox(title = "Procedimentos Complementares por Trimestre", width=12,
                                         tabPanel("Gráfico", plotlyOutput(outputId = "proc_compl_esf_plot4")),
                                         tabPanel("Dados", dataTableOutput("proc_compl_esf_tab4")),
                                         tabPanel("Sobre o Indicador", htmlOutput("proc_compl_esf_info4"))
                                  )
                                ),
                                
                                fluidRow(
                                  tabBox(title = "Procedimentos Complementares por Trimestre", width=12,
                                         tabPanel("Gráfico", plotlyOutput(outputId = "proc_compl_esf_plot5")),
                                         tabPanel("Dados", dataTableOutput("proc_compl_esf_tab5")),
                                         tabPanel("Sobre o Indicador", htmlOutput("proc_compl_esf_info5"))
                                  )
                                )
                        ),

                        ###########################################################################################                         
                        #Gestantes com Consultas Odontológicas                                                           
                        ###########################################################################################
                           tabItem(tabName = "odont_gestantes_esf", h2("Integralidade nas Equipes de Saúde da Família"),
                                
                                fluidRow(
                                  box(selectInput(
                                    inputId="odonto_gestantes_esf_opcao",
                                    label="Selecione o Tipo:",
                                    choices=list("Total de Mulheres no Terceiro Trimestre de Gestação" = "GESTANTES", "Total de Gestantes com 1 ou mais Consultas Odontológicas" = "GEST_ODONTO", "Percentual de Gestantes com 1 ou mais Consultas Odontológicas" = "PERCENTUAL_GEST_ODONTO"),
                                    selected= "Percentual de Gestantes com 1 ou mais Consultas Odontológicas"),
                                    width = 12, status = "primary"),
                                  
                                  box(selectInput(
                                    inputId="odonto_gestantes_esfporcs",
                                    label="Selecione um Centro de Saúde:",
                                    choices=list("CS ABRAÃO" = "CS ABRAÃO" ,  "CS AGRONÔMICA"  = "CS AGRONÔMICA",  "CS ALTO RIBEIRÃO" = "CS ALTO RIBEIRÃO",  
                                                 "CS ARMAÇÃO"  =  "CS ARMAÇÃO",  "CS BALNEÁRIO" =  "CS BALNEÁRIO",  "CS BARRA DA LAGOA" = "CS BARRA DA LAGOA",
                                                 "CS CACHOEIRA BOM JESUS" = "CS CACHOEIRA BOM JESUS", "CS CAIEIRA BARRA DO SUL" = "CS CAIEIRA BARRA DO SUL", 
                                                 "CS CAMPECHE" =  "CS CAMPECHE",  "CS CANASVIEIRAS" = "CS CANASVIEIRAS",  "CS CANTO DA LAGOA" = "CS CANTO DA LAGOA",  
                                                 "CS CAPOEIRAS"  =  "CS CAPOEIRAS",  "CS CARIANOS"  =  "CS CARIANOS",  "CS CENTRO" = "CS CENTRO",  
                                                 "CS COLONINHA" = "CS COLONINHA",  "CS COQUEIROS"  = "CS COQUEIROS",  "CS CÓRREGO GRANDE" = "CS CÓRREGO GRANDE",  
                                                 "CS COSTA DA LAGOA" =  "CS COSTA DA LAGOA",  "CS COSTEIRA DO PIRAJUBAÉ"="CS COSTEIRA DO PIRAJUBAÉ",  
                                                 "CS ESTREITO" = "CS ESTREITO",  "CS FAZENDA DO RIO TAVARES" = "CS FAZENDA DO RIO TAVARES", "CS INGLESES"= "CS INGLESES",  
                                                 "CS ITACORUBI"= "CS ITACORUBI",  "CS JARDIM ATLÂNTICO"= "CS JARDIM ATLÂNTICO",  "CS JOÃO PAULO"= "CS JOÃO PAULO",  "CS JURERE" ="CS JURERE" ,
                                                 "CS LAGOA DA CONCEIÇÃO"= "CS LAGOA DA CONCEIÇÃO", "CS MONTE CRISTO"= "CS MONTE CRISTO",  "CS MONTE SERRAT"= "CS MONTE SERRAT",  
                                                 "CS MORRO DAS PEDRAS"= "CS MORRO DAS PEDRAS",  "CS NOVO CONTINENTE"= "CS NOVO CONTINENTE",  "CS PANTANAL" =  "CS PANTANAL",  
                                                 "CS PANTANO DO SUL" = "CS PANTANO DO SUL", "CS PONTA DAS CANAS"=  "CS PONTA DAS CANAS",  "CS PRAINHA"=  "CS PRAINHA",  "CS RATONES"=  "CS RATONES",  
                                                 "CS RIBEIRÃO DA ILHA"= "CS RIBEIRÃO DA ILHA",  "CS RIO TAVARES"=  "CS RIO TAVARES",  "CS RIO VERMELHO"= "CS RIO VERMELHO",  
                                                 "CS SACO DOS LIMÕES"= "CS SACO DOS LIMÕES",  "CS SACO GRANDE"= "CS SACO GRANDE",  "CS SANTINHO"=  "CS SANTINHO",  
                                                 "CS SANTO ANTONIO LISBOA" = "CS SANTO ANTONIO LISBOA", "CS SAPE"  = "CS SAPE" , "CS TAPERA"=  "CS TAPERA",  "CS TRINDADE"= "CS TRINDADE",  
                                                 "CS VARGEM GRANDE"= "CS VARGEM GRANDE", "CS VARGEM PEQUENA"=  "CS VARGEM PEQUENA",  "CS VILA APARECIDA" = "CS VILA APARECIDA"),
                                    selected="CS ABRAÃO"),
                                    width = 12, status = "primary")
                                ),
                               
                                fluidRow(
                                  tabBox(title = "Mulheres no Terceiro Trimestre de Gestação", width=12,
                                         tabPanel("Gráfico", plotlyOutput(outputId = "odonto_gestantes_esf_plot")),
                                         tabPanel("Dados", dataTableOutput("odonto_gestantes_esf_tab")),
                                         tabPanel("Sobre o Indicador", htmlOutput("odonto_gestantes_esf_info"))
                                  )
                                )
                        )                        
  

                      )
                   )
)
########################################################################################### 
server <- function(input, output, session) {
########################################################################################### 
  #Página inicial
  #Mapa das unidades
  output$localizacao_cs<- renderLeaflet({
    leaflet(data = acesso_dat) %>% addTiles() %>%
      addMarkers(~X, ~Y, popup = ~htmlEscape(DESCRICAO))
  })
  ###########################################################################################
  #Florianópolis
  ###########################################################################################
  
  ###########################################################################################
  #Dashboard Florianópolis Acesso
  ###########################################################################################
  #Pacientes Diferentes
  ###########################################################################################
  
  #gráfico de pessoas diferentes atendidas por especialidade e trimestre
  output$pc_dif_florianopolis_plot <- renderPlotly({
    
    florianopolis_pc_dif <- pc_florianopolis %>% 
      filter(ESPECIALIDADE == input$pc_dif_florianopolis_especialidade)
    florianopolis_pc_dif$TRIMESTRE <- as.factor(florianopolis_pc_dif$TRIMESTRE)
    
    a<-ggplot(florianopolis_pc_dif, aes(x = TRIMESTRE, y = VALOR, group = ESPECIALIDADE)) + 
      geom_line(colour = "blue")+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))
    
    
    ggplotly(a)
    
  })
  
  #tabela do pc_dif - Florianópolis
  output$pc_dif_florianopolis_tab <- renderDataTable({
    
    florianopolis_pc_dif <- pc_florianopolis %>% 
      filter(ESPECIALIDADE == input$pc_dif_florianopolis_especialidade) 
    
    florianopolis_pc_dif
    
  }, extensions = 'Buttons',
  options = list(
    "dom" = 'T<"clear">lBfrtip',
    buttons = list('copy', 'csv', 'pdf', 'print')))
  
  
  #informações do pc_dif - Florianópolis
  output$pc_dif_florianopolis_info <- renderText({
    
    paste("<b>A.01.01)Pessoas diferentes atendidas em consultas médicas e de enfermagem</b>", "<br>",
          "<b>Fórmula:</b> Somatório de pessoas diferentes atendidas em consultas médicas e de enfermagem" , "<br>",
          "<b>Observações:</b> Soma de pessoas diferentes atendidas em qualquer dessas consultas." , "<br>",
          "Não foram considerados atividades coletivas e Atualização de prontuário", "<br>",
          "<b>A.01.02)Pessoas diferentes atendidas em consultas médicas</b>", "<br>",
          "<b>Fórmula:</b> Somatório de pessoas diferentes atendidas em consultas médicas", "<br>",
          "<b>Observações:</b> Não foram consideradas pessoas atendidas em atividades coletivas ou que tenham a consulta finalizada como Atualização de prontuário", "<br>",
          "<b>A.01.03)Pessoas diferentes atendidas em consultas enfermagem</b>", "<br>",
          "<b>Fórmula:</b> Somatório de pessoas diferentes atendidas em consultas de enfermagem", "<br>",
          "<b>Observações:</b> Não foram consideradas pessoas atendidas em atividades coletivas ou que tenham a consulta finalizada como Atualização de prontuário", "<br>",
          "<b>A.01.04)Pessoas diferentes atendidas em consultas odontológicas</b>", "<br>",
          "<b>Fórmula:</b> Somatório de pessoas diferentes atendidas em consultas odontológicas", "<br>",
          "<b>Observações:</b> Não foram consideradas pessoas atendidas em atividades coletivas ou que tenham a consulta finalizada como Atualização de prontuário", "<br>",
          "<b>A.01.05)Pessoas diferentes atendidas em todos os serviços</b>", "<br>",
          "<b>Fórmula:</b> Somatório de pessoas diferentes atendidas em consultas, procedimentos, dispensação de medicamentos e atividades coletivas nos últimos 2 anos")
    
  })
  ###########################################################################################
  #Demanda Espontânea
  ###########################################################################################
  
  #gráfico do percentual de demanda espontânea por especialidade e trimestre
  output$perc_dem_cons_florianopolis_plot <- renderPlotly({
    
    florianopolis_perc_dem_cons <- perc_dem_cons_florianopolis %>% 
      filter(TIPO == input$perc_dem_cons_florianopolis_especialidade)
    florianopolis_perc_dem_cons$TRIMESTRE <- as.factor(florianopolis_perc_dem_cons$TRIMESTRE)
    florianopolis_perc_dem_cons$VALOR <- as.integer(florianopolis_perc_dem_cons$VALOR)
    
    a<-ggplot(florianopolis_perc_dem_cons, aes(x = TRIMESTRE, y = VALOR, group = TIPO)) + 
      geom_line(colour = "blue")+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))
    
    
    ggplotly(a)
    
  })
  
  #tabela do percentual de perc_dem_cons - Florianópolis
  output$perc_dem_cons_florianopolis_tab <- renderDataTable({
    
    florianopolis_perc_dem_cons <- perc_dem_cons_florianopolis %>% 
      filter(TIPO == input$perc_dem_cons_florianopolis_especialidade)
    
    florianopolis_perc_dem_cons
    
  }, extensions = 'Buttons',
  options = list(
    "dom" = 'T<"clear">lBfrtip',
    buttons = list('copy', 'csv', 'pdf', 'print')))
  
  
  #informações do percentual de perc_dem_cons - Florianópolis
  output$perc_dem_cons_florianopolis_info <- renderText({
    
    paste("<b>A.02.01)Percentual de demanda espontânea atendida por médico</b>", "<br>",
          "<b>Fórmula:</b> Porcentagem de atendimentos médicos por demanda espontânea" , "<br>",
          "<b>A.02.02)Percentual de demanda espontânea atendida por enfermeiro</b>", "<br>",
          "<b>Fórmula:</b> Porcentagem de atendimentos de enfermeiros por demanda espontânea" , "<br>",
          "<b>A.02.03)Percentual de demanda espontânea atendida por odontólogo</b>", "<br>",
          "<b>Fórmula:</b> Porcentagem de atendimentos odontológicos por demanda espontânea" , "<br>")
  }) 
  
  ###########################################################################################
  #Teste Rápido
  ###########################################################################################
  
  #gráfico da quantidade de testes rápidos e trimestre
  output$teste_rap_florianopolis_plot <- renderPlotly({
                                          
    florianopolis_teste_rap <- teste_rap_florianopolis %>% 
      filter(PROCEDIMENTO == input$teste_rap_florianopolis_procedimento)
    florianopolis_teste_rap$TRIMESTRE <- as.factor(florianopolis_teste_rap$TRIMESTRE)
    
    a<-ggplot(florianopolis_teste_rap, aes(x = TRIMESTRE, y = VALOR, group = PROCEDIMENTO)) + 
      geom_line(colour = "blue")+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))
    
    
    ggplotly(a)
    
  })
  
  #tabela do percentual de teste_rap - Florianópolis
  output$teste_rap_florianopolis_tab <- renderDataTable({
    
    florianopolis_teste_rap <- teste_rap_florianopolis%>% 
      filter(PROCEDIMENTO == input$teste_rap_florianopolis_procedimento)
    
    florianopolis_teste_rap
    
  }, extensions = 'Buttons',
  options = list(
    "dom" = 'T<"clear">lBfrtip',
    buttons = list('copy', 'csv', 'pdf', 'print')))
  
  
  #informações do percentual de teste_rap - Florianópolis
  output$teste_rap_florianopolis_info <- renderText({
    
   paste("<b>A.03.01)Total de testes rápidos para detecção do HIV na gestante ou pai/parceiro</b>", "<br>",
          "<b>Fórmula:</b> Somatório de testes rápidos para detecção do HIV na gestante ou pai/parceiro" , "<br>",
           "<b>A.03.02)Total de testes rápidos para detecção pelo HIV</b>", "<br>",
          "<b>Fórmula:</b> Somatório de testes rápidos para detecção pelo HIV" , "<br>",
          "<b>A.03.03)Total de testes rápidos para detecção de sífilis na gestante ou pai/parceiro</b>", "<br>",
          "<b>Fórmula:</b> Somatório de testes rápidos para detecção de sífilis na gestante ou pai/parceiro" , "<br>",
          "<b>A.03.04)Total de testes rápidos para detecção de sífilis</b>", "<br>",
          "<b>Fórmula:</b> Somatório de testes rápidos para detecção de sífilis" , "<br>",
          "<b>A.03.05)Total de testes rápidos para detecção de hepatite B</b>", "<br>",
          "<b>Fórmula:</b> Somatório de testes rápidos para detecção de hepatite B" , "<br>",
          "<b>A.03.06)Total de testes rápidos para detecção de hepatite C</b>", "<br>",
          "<b>Fórmula:</b> Somatório de testes rápidos para detecção de hepatite C" , "<br>")
           
  }) 
    
             
 ###########################################################################################                         
 #Faltas em Consultas                                                           
 ###########################################################################################
  #gráfico 
  output$faltas_florianopolis_plot <- renderPlotly({
                               
    
                                                      
    florianopolis_faltas <- faltas_florianopolis %>% 
      filter(TIPO == input$faltas_florianopolis_tipo)
    florianopolis_faltas$TRIMESTRE <- as.factor(florianopolis_faltas$TRIMESTRE)
    
    a<-ggplot(florianopolis_faltas, aes(x = TRIMESTRE, y = VALOR, group = TIPO)) + 
      geom_line(colour = "blue")+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))
    
    
    ggplotly(a)
    
  })
  
  #tabela 
  output$faltas_florianopolis_tab <- renderDataTable({
    
    florianopolis_faltas <- faltas_florianopolis%>% 
      filter(TIPO == input$faltas_florianopolis_tipo)
    
    florianopolis_faltas
    
  }, extensions = 'Buttons',
  options = list(
    "dom" = 'T<"clear">lBfrtip',
    buttons = list('copy', 'csv', 'pdf', 'print')))
  
  
  #informações 
  output$faltas_florianopolis_info <- renderText({
    
   paste("<b>A.04.01)Percentual de faltas em consultas odontológicas</b>", "<br>",
          "<b>Fórmula:</b> Somatório das faltas em consultas odontológicas/Somatório de consultas odontológicas * 100" , "<br>",
          "<b>A.04.02)Percentual de faltas em consultas médicas</b>", "<br>",
          "<b>Fórmula:</b> Somatório das faltas em consultas médicas/Somatório de consultas médicas * 100" , "<br>",
         "<b>A.04.03)Percentual de faltas em consultas de enfermagem</b>", "<br>",
          "<b>Fórmula:</b> Somatório das faltas em consultas de enfermagem/Somatório de consultas de enfermagem * 100" , "<br>")
           
  })                      
                        
 ###########################################################################################                         
 #Primeira Consulta Odontológica                                                           
 ###########################################################################################
   output$prim_cons_odonto_florianopolis_plot <- renderPlotly({
    
    florianopolis_prim_cons_odonto <- prim_cons_odonto_florianopolis 
    florianopolis_prim_cons_odonto$TRIMESTRE <- as.factor(florianopolis_prim_cons_odonto$TRIMESTRE)
    
    a<-ggplot(florianopolis_prim_cons_odonto, aes(x = TRIMESTRE, y = VALOR, group = 1)) + 
      geom_line(colour = "blue")+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))
    
    
    ggplotly(a)
    
  })
  

  output$prim_cons_odonto_florianopolis_tab <- renderDataTable({
    
    florianopolis_prim_cons_odonto <- prim_cons_odonto_florianopolis
    
    florianopolis_prim_cons_odonto
    
  }, extensions = 'Buttons',
  options = list(
    "dom" = 'T<"clear">lBfrtip',
    buttons = list('copy', 'csv', 'pdf', 'print')))
  
  

  output$prim_cons_odonto_florianopolis_info <- renderText({
    
    paste("<b>A.05.01)Número de atendimentos de primeira consulta odontológica</b>", "<br>",
          "<b>Fórmula:</b> Somatório de atendimentos de primeira consulta odontológica","<br>")
          
  })                         
                        
 ###########################################################################################                         
 #Atendimento Inadequado na UPA                                                           
 ###########################################################################################
  
  output$atd_inad_upa_florianopolis_plot <- renderPlotly({
    
    florianopolis_atd_inad_upa <- atd_inad_upa_florianopolis 
    florianopolis_atd_inad_upa$TRIMESTRE <- as.factor(florianopolis_atd_inad_upa$TRIMESTRE)
    
    a<-ggplot(florianopolis_atd_inad_upa, aes(x = TRIMESTRE, y = VALOR, group = 1)) + 
      geom_line(colour = "blue")+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))
    
    
    ggplotly(a)
    
  })
  

  output$atd_inad_upa_florianopolis_tab <- renderDataTable({
    
    florianopolis_atd_inad_upa <- atd_inad_upa_florianopolis
    
    florianopolis_atd_inad_upa
    
  }, extensions = 'Buttons',
  options = list(
    "dom" = 'T<"clear">lBfrtip',
    buttons = list('copy', 'csv', 'pdf', 'print')))
  
  

  output$atd_inad_upa_florianopolis_info <- renderText({
    
    paste("<b>A.06.01)Número de atendimentos inadequados nas UPAS</b>", "<br>",
          "<b>Fórmula:</b> Somatório de atendimentos de baixo risco nas UPAS nos horários em que", "<br>",
          "os Centros de saúde estão abertos" , "<br>")
          
  })
                       
 
  ###########################################################################################
  #Dashboard Florianópolis Longitudinalidade
  ###########################################################################################
  ###########################################################################################                         
  #Seguimento Pré-natal                                                          
  ###########################################################################################
  
  #gráfico 
  output$gestantes_florianopolis_plot <- renderPlotly({
    
    florianopolis_gestantes <- gestantes_florianopolis %>% 
      filter(TIPO == input$gestantes_florianopolis_opcao)
    
    a<-ggplot(florianopolis_gestantes, aes(x = TRIMESTRE, y = VALOR, group = TIPO)) + 
      geom_line(colour = "blue")+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))
    
    
    ggplotly(a)
    
  })
  
  
  #tabela 
  output$gestantes_florianopolis_tab <- renderDataTable({
    
    florianopolis_gestantes <- gestantes_florianopolis %>% 
      filter(TIPO == input$gestantes_florianopolis_opcao)
    
    florianopolis_gestantes
    
  }, extensions = 'Buttons',
  options = list(
    "dom" = 'T<"clear">lBfrtip',
    buttons = list('copy', 'csv', 'pdf', 'print')))
  
  
  #informações 
  output$gestantes_florianopolis_info <- renderText({
    
    paste("<b>L.01.01)Total de mulheres no terceiro trimestre de gestação</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de mulheres no terceiro trimestre de gestação no período" , "<br>",
          "<br>",
          "<b>L.01.02)Total de gestantes com pré-natal nos três trimestres</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de gestantes no terceiro trimestre que realizaram ao menos" , "<br>",
          "uma consulta em cada trimestre no período", "<br>",
          "<br>",
          "<b>L.01.03)Percentual de gestantes com pré-natal nos três trimestres</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de gestantes no terceiro trimestre que realizaram ao menos" , "<br>",
          "uma consulta em cada trimestre no período/Somatório do número de mulheres no terceiro trimestre" , "<br>",
          "de gestação no período *100 ", "<br>",
          "<br>",
          "<b>L.01.04)Total de gestantes com 7 ou mais consultas pré-natais</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de gestantes no terceiro trimestre com 7 ou mais consultas pré-natais" , "<br>",
          "<br>",
          "<b>L.01.05)Percentual de gestantes com 7 ou mais consultas pré-natais</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de gestantes no terceiro trimestre com 7 ou mais consultas pré-natais/" , "<br>",
          "Somatório do número de mulheres no terceiro trimestre de gestação no período *100 ", "<br>",
          "<br>")
  })

  ###########################################################################################
  #Citopatológico 
  ###########################################################################################
  output$citopatologico_florianopolis_plot <- renderPlotly({
    
    florianopolis_citopatologico <- citopatologico_florianopolis 
    florianopolis_citopatologico$TRIMESTRE <- as.factor(florianopolis_citopatologico$TRIMESTRE)
    
    a<-ggplot(florianopolis_citopatologico, aes(x = TRIMESTRE, y = VALOR, group = 1)) + 
      geom_line(colour = "blue")+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))
    
    
    ggplotly(a)
    
  })
  

  output$citopatologico_florianopolis_tab <- renderDataTable({
    
    florianopolis_citopatologico <- citopatologico_florianopolis
    
    florianopolis_citopatologico
    
  }, extensions = 'Buttons',
  options = list(
    "dom" = 'T<"clear">lBfrtip',
    buttons = list('copy', 'csv', 'pdf', 'print')))
  
  

  output$citopatologico_florianopolis_info <- renderText({
    
    paste("<b>L.02.01)Percentual de exames citopatológicos realizados</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de citopatológicos realizados/(Somatório de mulheres diferentes entre 24 e 65 anos atendidas*(1/3)*100" , "<br>",
          "<b>Observação1:</b> Utilizou-se mulheres diferentes no trimestre." , "<br>",
          "<b>Observação2:</b> Como toda mulher nesta faixa etária deve fazer o citopatalógico, no mínimo de 3 em 3 anos. Multiplicou-se o denominador por 1/3" , "<br>"
          )
          
  })
  ###########################################################################################
  #Tratamento Odontológico
  ###########################################################################################
   output$tratam_compl_odonto_florianopolis_plot <- renderPlotly({
    
    florianopolis_tratam_compl_odonto <- tratam_compl_odonto_florianopolis 
    florianopolis_tratam_compl_odonto$TRIMESTRE <- as.factor(florianopolis_tratam_compl_odonto$TRIMESTRE)
    
    a<-ggplot(florianopolis_tratam_compl_odonto, aes(x = TRIMESTRE, y = VALOR, group = 1)) + 
      geom_line(colour = "blue")+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))
    
    
    ggplotly(a)
    
  })
  

  output$tratam_compl_odonto_florianopolis_tab <- renderDataTable({
    
    florianopolis_tratam_compl_odonto <- tratam_compl_odonto_florianopolis
    
    florianopolis_tratam_compl_odonto
    
  }, extensions = 'Buttons',
  options = list(
    "dom" = 'T<"clear">lBfrtip',
    buttons = list('copy', 'csv', 'pdf', 'print')))
  
  

  output$tratam_compl_odonto_florianopolis_info <- renderText({
    
    paste("<b>L.03.01)Número de tratamentos odontológicos completados</b>", "<br>",
          "<b>Fórmula:</b> Somatório de tratamentos odontológicos completados","<br>")
          
  })                         

  ###########################################################################################
  #Sífilis
  ###########################################################################################
  #gráfico 
  output$sifilis_florianopolis_plot <- renderPlotly({
    
    florianopolis_sifilis <- sifilis_florianopolis %>% 
      filter(TIPO == input$sifilis_florianopolis_opcao)
    
    a<-ggplot(florianopolis_sifilis, aes(x = TRIMESTRE, y = VALOR, group = TIPO)) + 
      geom_line(colour = "blue")+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))
    
    
    ggplotly(a)
    
  })
  
  
  #tabela 
  output$sifilis_florianopolis_tab <- renderDataTable({
    
    florianopolis_sifilis <- sifilis_florianopolis %>% 
      filter(TIPO == input$sifilis_florianopolis_opcao)
    
    florianopolis_sifilis
    
  }, extensions = 'Buttons',
  options = list(
    "dom" = 'T<"clear">lBfrtip',
    buttons = list('copy', 'csv', 'pdf', 'print')))
  
  
  #informações 
  output$sifilis_florianopolis_info <- renderText({
    
    paste("<b>L.04.01)Total de casos de sífilis</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de casos de sífilis" , "<br>",
          "<br>",
          "<b>L.04.01)Total de casos de sífilis tratados</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de casos de sífilis tratados" , "<br>",
          "<br>",
          "<b>L.04.03)Percentual de sifilis tratados</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número casos de sífilis/Somatório do número casos de sífilis tratados * 100", "<br>")
  })  

  ###########################################################################################
  #Dashboard Florianópolis Integralidade
  ###########################################################################################
  ###########################################################################################
  #Encaminhamentos 
  ###########################################################################################
 
  #gráfico de consultas e encaminhamentos e trimestre
  output$encam_med_florianopolis_plot <- renderPlotly({
    
    florianopolis_encam_med <- encam_med_florianopolis %>% 
      filter(TIPO == input$encam_med_florianopolis_opcao)
    florianopolis_encam_med$TRIMESTRE <- as.factor(florianopolis_encam_med$TRIMESTRE)
    
    a<-ggplot(florianopolis_encam_med, aes(x = TRIMESTRE, y = VALOR, group = TIPO)) + 
      geom_line(colour = "blue")+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))
    
    
    ggplotly(a)
    
  })
  
  #tabela de integralidade - Florianópolis
  output$encam_med_florianopolis_tab <- renderDataTable({
    
    florianopolis_encam_med <- encam_med_florianopolis %>% 
      filter(TIPO == input$encam_med_florianopolis_opcao)
    
    florianopolis_encam_med
    
  }, extensions = 'Buttons',
  options = list(
    "dom" = 'T<"clear">lBfrtip',
    buttons = list('copy', 'csv', 'pdf', 'print')))
  
  
  #informações do integralidade - Florianópolis
  output$encam_med_florianopolis_info <- renderText({
    
    paste("<b>I.01.01)Número de consultas médicas realizadas</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de consultas médicas realizadas no período" , "<br>",
          "<br>",
          "<b>I.01.02)Número de encaminhamentos médicos realizados</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de encaminhamentos médicos realizados no período", "<br>",
          "<br>",
          "<b>I.01.03)Percentual de encaminhamentos médicos</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de encaminhamentos médicos realizados no período/Somatório do número de consultas médicas realizadas no período *100", "<br>")
    
  })
  
  ###########################################################################################
  #Procedimentos Complementares
  ###########################################################################################
 
  #gráfico de consultas e encaminhamentos e trimestre
  output$proc_compl_florianopolis_plot <- renderPlotly({
    
    florianopolis_proc_compl <- proc_compl_florianopolis %>% 
      filter(ESPECIALIDADE == input$proc_compl_florianopolis_opcao)
    florianopolis_proc_compl$TRIMESTRE <- as.factor(florianopolis_proc_compl$TRIMESTRE)
    
    a<-ggplot(florianopolis_proc_compl, aes(x = TRIMESTRE, y = VALOR, group = TIPO, colour = TIPO)) + 
      geom_line()+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))
    
    
    ggplotly(a)
    
  })
  
  #tabela de integralidade - Florianópolis
  output$proc_compl_florianopolis_tab <- renderDataTable({
    
    florianopolis_proc_compl <- proc_compl_florianopolis %>% 
      filter(ESPECIALIDADE == input$proc_compl_florianopolis_opcao)
    
    florianopolis_proc_compl
    
  }, extensions = 'Buttons',
  options = list(
    "dom" = 'T<"clear">lBfrtip',
    buttons = list('copy', 'csv', 'pdf', 'print')))
  
  
  #informações do integralidade - Florianópolis
  output$proc_compl_florianopolis_info <- renderText({
                                          
    paste("<b>I.02.01)Número de procedimentos médicos complementares realizados - Cantoplastia</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Cantoplastia - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.02)Número de procedimentos médicos complementares realizados - Drenagem de Abcesso</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Drenagem de Abcesso - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.03)Número de procedimentos médicos complementares realizados - Exérese de Cisto Sebáceo</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Exérese de Cisto Sebáceo - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.04)Número de procedimentos médicos complementares realizados - Retirada de Cerume</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Retirada de Cerume - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.05)Número de procedimentos médicos complementares realizados - Sutura</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Sutura - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.06)Número de procedimentos odontológicos complementares realizados - Adaptação de Protese</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Adaptação de Protese - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.07)Número de procedimentos odontológicos complementares realizados - Biópsia de Boca</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Biópsia de Boca - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.08)Número de procedimentos odontológicos complementares realizados - Exodontia de Dente Decíduo</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Exodontia de Dente Decíduo - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.09)Número de procedimentos odontológicos complementares realizados - Raspagem Subgengival</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Raspagem Subgengival - realizados no período" , "<br>",
          "<br>")
    
  })
  

 ###########################################################################################                         
 #Gestantes com Consultas Odontológicas                                                           
 ###########################################################################################
   
  #gráfico de consultas e encaminhamentos e trimestre
  output$odonto_gestantes_florianopolis_plot <- renderPlotly({
    
    florianopolis_odonto_gestantes <- odonto_gestantes_florianopolis %>% 
      filter(TIPO == input$odonto_gestantes_florianopolis_opcao)
    
    a<-ggplot(florianopolis_odonto_gestantes, aes(x = TRIMESTRE, y= VALOR, group = TIPO)) + 
      geom_line(colour = "blue")+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))
    
    
    ggplotly(a)
    
  })
  
  
  #tabela de longitudinalidade - Florianópolis
  output$odonto_gestantes_florianopolis_tab <- renderDataTable({
    
    florianopolis_odonto_gestantes <- odonto_gestantes_florianopolis %>% 
      filter(TIPO == input$odonto_gestantes_florianopolis_opcao)
    
    florianopolis_odonto_gestantes
    
  }, extensions = 'Buttons',
  options = list(
    "dom" = 'T<"clear">lBfrtip',
    buttons = list('copy', 'csv', 'pdf', 'print')))
  
  
  #informações do longitudinalidade - Florianópolis
  output$odonto_gestantes_florianopolis_info <- renderText({
    
    paste("<b>I.03.01)Total de mulheres no terceiro trimestre de gestação</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de mulheres no terceiro trimestre de gestação no período" , "<br>",
          "<br>",
          "<b>I.03.02)Total de gestantes com 1 ou mais consultas odontológicas</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de gestantes no terceiro trimestre com 1 ou mais consultas odontológicas", "<br>",
          "<br>",
          "<b>I.03.03)Percentual de gestantes com 1 ou mais consultas odontológicas</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de gestantes no terceiro com 1 ou mais consultas odontológicas/" , "<br>",
          "Somatório do número de mulheres no terceiro trimestre de gestação no período *100 ", "<br>",
          "<br>")
  })
                        



  ###########################################################################################       
  #Distritos
  ###########################################################################################
  
  ###########################################################################################
  #Dashboard Distritos Acesso
  ###########################################################################################
  #Pacientes Diferentes
  ###########################################################################################
  
  #gráfico de pessoas diferentes atendidas por especialidade e trimestre
  output$pc_dif_distrito_plot <- renderPlotly({
    
    distrito_pc_dif <- pc_distrito %>% 
      filter(ESPECIALIDADE == input$pc_dif_distrito_especialidade)
    distrito_pc_dif$TRIMESTRE <- as.factor(distrito_pc_dif$TRIMESTRE)
    
    a<-ggplot(distrito_pc_dif, aes(x = TRIMESTRE, y = VALOR, group = DISTRITO, colour = DISTRITO)) + 
      geom_line()+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))
    
    
    ggplotly(a)
    
  })
  
  #tabela do pc_dif - Florianópolis
  output$pc_dif_distrito_tab <- renderDataTable({
    
    distrito_pc_dif <- pc_distrito %>% 
      filter(ESPECIALIDADE == input$pc_dif_distrito_especialidade) 
    
    distrito_pc_dif
    
  }, extensions = 'Buttons',
  options = list(
    "dom" = 'T<"clear">lBfrtip',
    buttons = list('copy', 'csv', 'pdf', 'print')))
  
  #informações do pc_dif - Florianópolis
  output$pc_dif_distrito_info <- renderText({
    
    paste("<b>Fórmula: </b>", "alhos/bugalhos", "<br>", "<b>Observações: </b>", "bom indicador")
    
  })
  
  #informações do pc_dif - Distritos
  output$pc_dif_distrito_info <- renderText({
    
    paste("<b>A.01.01)Pessoas diferentes atendidas em consultas médicas e de enfermagem</b>", "<br>",
          "<b>Fórmula:</b> Somatório de pessoas diferentes atendidas em consultas médicas e de enfermagem" , "<br>",
          "<b>Observações:</b> Soma de pessoas diferentes atendidas em qualquer dessas consultas." , "<br>",
          "Não foram considerados atividades coletivas e Atualização de prontuário", "<br>",
          "<b>A.01.02)Pessoas diferentes atendidas em consultas médicas</b>", "<br>",
          "<b>Fórmula:</b> Somatório de pessoas diferentes atendidas em consultas médicas", "<br>",
          "<b>Observações:</b> Não foram consideradas pessoas atendidas em atividades coletivas ou que tenham a consulta finalizada como Atualização de prontuário", "<br>",
          "<b>A.01.03)Pessoas diferentes atendidas em consultas enfermagem</b>", "<br>",
          "<b>Fórmula:</b> Somatório de pessoas diferentes atendidas em consultas de enfermagem", "<br>",
          "<b>Observações:</b> Não foram consideradas pessoas atendidas em atividades coletivas ou que tenham a consulta finalizada como Atualização de prontuário", "<br>",
          "<b>A.01.04)Pessoas diferentes atendidas em consultas odontológicas</b>", "<br>",
          "<b>Fórmula:</b> Somatório de pessoas diferentes atendidas em consultas odontológicas", "<br>",
          "<b>Observações:</b> Não foram consideradas pessoas atendidas em atividades coletivas ou que tenham a consulta finalizada como Atualização de prontuário", "<br>",
          "<b>A.01.05)Pessoas diferentes atendidas em todos os serviços</b>", "<br>",
          "<b>Fórmula:</b> Somatório de pessoas diferentes atendidas em consultas, procedimentos, dispensação de medicamentos e atividades coletivas nos últimos 2 anos")
    
  })
  
  ###########################################################################################
  #Demanda Espontânea
  ###########################################################################################
  
  #gráfico do percentual de demanda espontânea por especialidade e trimestre
  output$perc_dem_cons_distrito_plot <- renderPlotly({
    
    distrito_perc_dem_cons <- perc_dem_cons_distrito  %>% 
      filter(TIPO == input$perc_dem_cons_distrito_especialidade)
    distrito_perc_dem_cons$TRIMESTRE <- as.factor(distrito_perc_dem_cons$TRIMESTRE)
    
    a<-ggplot(distrito_perc_dem_cons, aes(x = TRIMESTRE, y = VALOR, group = DISTRITO, colour = DISTRITO)) + 
      geom_line()+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))
    
    
    ggplotly(a)
    
  })
  
  #tabela do percentual de perc_dem_cons - Florianópolis
  output$perc_dem_cons_distrito_tab <- renderDataTable({
    
    distrito_perc_dem_cons <- perc_dem_cons_distrito  %>% 
      filter(TIPO == input$perc_dem_cons_distrito_especialidade) 
    
    distrito_perc_dem_cons
    
  }, extensions = 'Buttons',
  options = list(
    "dom" = 'T<"clear">lBfrtip',
    buttons = list('copy', 'csv', 'pdf', 'print')))
  
  
  #informações do percentual de perc_dem_cons - Florianópolis
  output$perc_dem_cons_distrito_info <- renderText({
    
    paste("<b>A.02.01)Percentual de demanda espontânea atendida por médico</b>", "<br>",
          "<b>Fórmula:</b> Porcentagem de atendimentos médicos por demanda espontânea" , "<br>",
          "<b>A.02.02)Percentual de demanda espontânea atendida por enfermeiro</b>", "<br>",
          "<b>Fórmula:</b> Porcentagem de atendimentos de enfermeiros por demanda espontânea" , "<br>",
          "<b>A.02.03)Percentual de demanda espontânea atendida por odontólogo</b>", "<br>",
          "<b>Fórmula:</b> Porcentagem de atendimentos odontológicos por demanda espontânea" , "<br>")
  }) 
  
  ###########################################################################################
  #Testes Rápidos
  ###########################################################################################
  
  #gráfico da quantidade de testes rápidos e trimestre
  output$teste_rap_distrito_plot <- renderPlotly({
    
    distrito_teste_rap <- teste_rap_distrito %>% 
      filter(PROCEDIMENTO == input$teste_rap_distrito_procedimento)
    distrito_teste_rap$TRIMESTRE <- as.factor(distrito_teste_rap$TRIMESTRE)
    
    a<-ggplot(distrito_teste_rap, aes(x = TRIMESTRE, y = VALOR, group = DISTRITO, colour = DISTRITO)) + 
      geom_line()+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))
    
    
    ggplotly(a)
    
  })
  
  #tabela do percentual de teste_rap - Florianópolis
  output$teste_rap_distrito_tab <- renderDataTable({
    
    distrito_teste_rap <- teste_rap_distrito%>% 
      filter(PROCEDIMENTO == input$teste_rap_distrito_procedimento)
    
    distrito_teste_rap
    
  }, extensions = 'Buttons',
  options = list(
    "dom" = 'T<"clear">lBfrtip',
    buttons = list('copy', 'csv', 'pdf', 'print')))
  
  
  #informações do percentual de teste_rap - Florianópolis
  output$teste_rap_distrito_info <- renderText({
    
    paste("<b>A.03.01)Total de testes rápidos para detecção do HIV na gestante ou pai/parceiro</b>", "<br>",
          "<b>Fórmula:</b> Somatório de testes rápidos para detecção do HIV na gestante ou pai/parceiro" , "<br>",
           "<b>A.03.02)Total de testes rápidos para detecção pelo HIV</b>", "<br>",
          "<b>Fórmula:</b> Somatório de testes rápidos para detecção pelo HIV" , "<br>",
          "<b>A.03.03)Total de testes rápidos para detecção de sífilis na gestante ou pai/parceiro</b>", "<br>",
          "<b>Fórmula:</b> Somatório de testes rápidos para detecção de sífilis na gestante ou pai/parceiro" , "<br>",
          "<b>A.03.04)Total de testes rápidos para detecção de sífilis</b>", "<br>",
          "<b>Fórmula:</b> Somatório de testes rápidos para detecção de sífilis" , "<br>",
          "<b>A.03.05)Total de testes rápidos para detecção de hepatite B</b>", "<br>",
          "<b>Fórmula:</b> Somatório de testes rápidos para detecção de hepatite B" , "<br>",
          "<b>A.03.06)Total de testes rápidos para detecção de hepatite C</b>", "<br>",
          "<b>Fórmula:</b> Somatório de testes rápidos para detecção de hepatite C" , "<br>")
           
  }) 
  
    
             
 ###########################################################################################                         
 #Falta em Consultas                                                           
 ###########################################################################################
  #gráfico 
  output$faltas_distrito_plot <- renderPlotly({
                               
    
                                                      
    distrito_faltas <- faltas_distrito %>% 
      filter(TIPO == input$faltas_distrito_tipo)
    distrito_faltas$TRIMESTRE <- as.factor(distrito_faltas$TRIMESTRE)
    
    a<-ggplot(distrito_faltas, aes(x = TRIMESTRE, y = VALOR, group = DISTRITO, colour = DISTRITO)) + 
      geom_line()+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))
    
    
    ggplotly(a)
    
  })
  
  #tabela 
  output$faltas_distrito_tab <- renderDataTable({
    
    distrito_faltas <- faltas_distrito%>% 
      filter(TIPO == input$faltas_distrito_tipo)
    
    distrito_faltas
    
  }, extensions = 'Buttons',
  options = list(
    "dom" = 'T<"clear">lBfrtip',
    buttons = list('copy', 'csv', 'pdf', 'print')))
  
  
  #informações 
  output$faltas_distrito_info <- renderText({
    
   paste("<b>A.04.01)Percentual de faltas em consultas odontológicas</b>", "<br>",
          "<b>Fórmula:</b> Somatório das faltas em consultas odontológicas/Somatório de consultas odontológicas * 100" , "<br>",
          "<b>A.04.02)Percentual de faltas em consultas médicas</b>", "<br>",
          "<b>Fórmula:</b> Somatório das faltas em consultas médicas/Somatório de consultas médicas * 100" , "<br>",
         "<b>A.04.03)Percentual de faltas em consultas de enfermagem</b>", "<br>",
          "<b>Fórmula:</b> Somatório das faltas em consultas de enfermagem/Somatório de consultas de enfermagem * 100" , "<br>")
           
  })                         
                        
 ###########################################################################################                         
 #Primeira Consulta Odontológica                                                           
 ###########################################################################################
   output$prim_cons_odonto_distrito_plot <- renderPlotly({
    
    distrito_prim_cons_odonto <- prim_cons_odonto_distrito 
    distrito_prim_cons_odonto$TRIMESTRE <- as.factor(distrito_prim_cons_odonto$TRIMESTRE)
    
    a<-ggplot(distrito_prim_cons_odonto, aes(x = TRIMESTRE, y = VALOR, group = DISTRITO, colour = DISTRITO)) + 
      geom_line()+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))
    
    
    ggplotly(a)
    
  })
  

  output$prim_cons_odonto_distrito_tab <- renderDataTable({
    
    distrito_prim_cons_odonto <- prim_cons_odonto_distrito
    
    distrito_prim_cons_odonto
    
  }, extensions = 'Buttons',
  options = list(
    "dom" = 'T<"clear">lBfrtip',
    buttons = list('copy', 'csv', 'pdf', 'print')))
  
  

  output$prim_cons_odonto_distrito_info <- renderText({
    
    paste("<b>A.05.01)Número de atendimentos de primeira consulta odontológica</b>", "<br>",
          "<b>Fórmula:</b> Somatório de atendimentos de primeira consulta odontológica","<br>")
          
  })                        
                        
 ###########################################################################################                         
 #Atendimento Inadequado na UPA                                                           
 ###########################################################################################
  output$atd_inad_upa_distrito_plot <- renderPlotly({
    
    distrito_atd_inad_upa <- atd_inad_upa_distrito 
    distrito_atd_inad_upa$TRIMESTRE <- as.factor(distrito_atd_inad_upa$TRIMESTRE)
    
    a<-ggplot(distrito_atd_inad_upa, aes(x = TRIMESTRE, y = VALOR, group = DISTRITO, colour = DISTRITO)) + 
      geom_line()+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))
    
    
    ggplotly(a)
    
  })
  

  output$atd_inad_upa_distrito_tab <- renderDataTable({
    
    distrito_atd_inad_upa <- atd_inad_upa_distrito
    
    distrito_atd_inad_upa
    
  }, extensions = 'Buttons',
  options = list(
    "dom" = 'T<"clear">lBfrtip',
    buttons = list('copy', 'csv', 'pdf', 'print')))
  
  

  output$atd_inad_upa_distrito_info <- renderText({
    
    paste("<b>A.06.01)Número de atendimentos inadequados nas UPAS</b>", "<br>",
          "<b>Fórmula:</b> Somatório de atendimentos de baixo risco nas UPAS nos horários em que", "<br>",
          "os Centros de saúde estão abertos" , "<br>")
          
  })
                        
 
  
  
  ###########################################################################################
  #Dashboard Distrito Longitudinalidade
  ###########################################################################################
  ###########################################################################################                         
  #Seguimento Pré-natal                                                          
  ###########################################################################################

  #gráfico de consultas e encaminhamentos e trimestre
  output$gestantes_distrito_plot <- renderPlotly({
    
    distrito_gestantes <- gestantes_distrito %>% 
      filter(TIPO == input$gestantes_distrito_opcao)
    
    
    a<-ggplot(distrito_gestantes, aes(x = TRIMESTRE, y = VALOR, group = DISTRITO, colour = DISTRITO)) + 
      geom_line()+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))
    
    ggplotly(a)
    
  })
  
  #tabela de integralidade - Florianópolis
  output$gestantes_distrito_tab <- renderDataTable({
    
    distrito_gestantes <- gestantes_distrito %>% 
      filter(TIPO == input$gestantes_distrito_opcao)
    
    distrito_gestantes
    
  }, extensions = 'Buttons',
  options = list(
    "dom" = 'T<"clear">lBfrtip',
    buttons = list('copy', 'csv', 'pdf', 'print')))
  
  
  #informações do integralidade - Distritos
  output$gestantes_distrito_info <- renderText({
    
    paste("<b>L.01.01)Total de mulheres no terceiro trimestre de gestação</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de mulheres no terceiro trimestre de gestação no período" , "<br>",
          "<br>",
          "<b>L.01.02)Total de gestantes com pré-natal nos três trimestres</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de gestantes no terceiro trimestre que realizaram ao menos" , "<br>",
          "uma consulta em cada trimestre no período", "<br>",
          "<br>",
          "<b>L.01.03)Percentual de gestantes com pré-natal nos três trimestres</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de gestantes no terceiro trimestre que realizaram ao menos" , "<br>",
          "uma consulta em cada trimestre no período/Somatório do número de mulheres no terceiro trimestre" , "<br>",
          "de gestação no período *100 ", "<br>",
          "<br>",
          "<b>L.01.04)Total de gestantes com 7 ou mais consultas pré-natais</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de gestantes no terceiro trimestre com 7 ou mais consultas pré-natais" , "<br>",
          "<br>",
          "<b>L.01.05)Percentual de gestantes com 7 ou mais consultas pré-natais</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de gestantes no terceiro trimestre com 7 ou mais consultas pré-natais/" , "<br>",
          "Somatório do número de mulheres no terceiro trimestre de gestação no período *100 ", "<br>",
          "<br>")
  }) 
  
  ###########################################################################################
  #Citopatológico
  ###########################################################################################
  output$citopatologico_distrito_plot <- renderPlotly({
    
    distrito_citopatologico <- citopatologico_distrito 
    distrito_citopatologico$TRIMESTRE <- as.factor(distrito_citopatologico$TRIMESTRE)
    
    a<-ggplot(distrito_citopatologico, aes(x = TRIMESTRE, y = VALOR, group = DISTRITO, colour = DISTRITO)) + 
      geom_line()+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))
    
    
    ggplotly(a)
    
  })
  

  output$citopatologico_distrito_tab <- renderDataTable({
    
    distrito_citopatologico <- citopatologico_distrito
    
    distrito_citopatologico
    
  }, extensions = 'Buttons',
  options = list(
    "dom" = 'T<"clear">lBfrtip',
    buttons = list('copy', 'csv', 'pdf', 'print')))
  
  

  output$citopatologico_distrito_info <- renderText({
    
    paste("<b>L.02.01)Percentual de exames citopatológicos realizados</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de citopatológicos realizados/(Somatório de mulheres diferentes entre 24 e 65 anos atendidas*(1/3)*100" , "<br>",
          "<b>Observação1:</b> Utilizou-se mulheres diferentes no trimestre." , "<br>",
          "<b>Observação2:</b> Como toda mulher nesta faixa etária deve fazer o citopatalógico, no mínimo de 3 em 3 anos. Multiplicou-se o denominador por 1/3" , "<br>"
          )
          
  })
  ###########################################################################################
  #Tratamento Odontológico
  ###########################################################################################
   output$tratam_compl_odonto_distrito_plot <- renderPlotly({
    
    distrito_tratam_compl_odonto <- tratam_compl_odonto_distrito 
    distrito_tratam_compl_odonto$TRIMESTRE <- as.factor(distrito_tratam_compl_odonto$TRIMESTRE)
    
    a<-ggplot(distrito_tratam_compl_odonto, aes(x = TRIMESTRE, y = VALOR, group = DISTRITO, colour = DISTRITO)) + 
      geom_line()+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))
    
    
    ggplotly(a)
    
  })
  

  output$tratam_compl_odonto_distrito_tab <- renderDataTable({
    
    distrito_tratam_compl_odonto <- tratam_compl_odonto_distrito
    
    distrito_tratam_compl_odonto
    
  }, extensions = 'Buttons',
  options = list(
    "dom" = 'T<"clear">lBfrtip',
    buttons = list('copy', 'csv', 'pdf', 'print')))
  
  

  output$tratam_compl_odonto_distrito_info <- renderText({
    
    paste("<b>L.03.01)Número de tratamentos odontológicos completados</b>", "<br>",
          "<b>Fórmula:</b> Somatório de tratamentos odontológicos completados","<br>")
          
  })     
  ###########################################################################################
  #Sífilis
  ###########################################################################################
  #gráfico 
  output$sifilis_distrito_plot <- renderPlotly({
    
    distrito_sifilis <- sifilis_distrito %>% 
      filter(TIPO == input$sifilis_distrito_opcao)
    
    a<-ggplot(distrito_sifilis, aes(x = TRIMESTRE, y = VALOR, group = DISTRITO, colour = DISTRITO)) + 
      geom_line()+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))
    
    
    ggplotly(a)
    
  })
  
  
  #tabela 
  output$sifilis_distrito_tab <- renderDataTable({
    
    distrito_sifilis <- sifilis_distrito %>% 
      filter(TIPO == input$sifilis_distrito_opcao)
    
    distrito_sifilis
    
  }, extensions = 'Buttons',
  options = list(
    "dom" = 'T<"clear">lBfrtip',
    buttons = list('copy', 'csv', 'pdf', 'print')))
  
  
  #informações 
  output$sifilis_distrito_info <- renderText({
    
    paste("<b>L.04.01)Total de casos de sífilis</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de casos de sífilis" , "<br>",
          "<br>",
          "<b>L.04.01)Total de casos de sífilis tratados</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de casos de sífilis tratados" , "<br>",
          "<br>",
          "<b>L.04.03)Percentual de sifilis tratados</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número casos de sífilis/Somatório do número casos de sífilis tratados * 100", "<br>")
  })   
  ###########################################################################################
  #Dashboard Distritos Integralidade
  ###########################################################################################
  ###########################################################################################
  #Encaminhamentos 
  ###########################################################################################
   
  #gráfico de consultas e encaminhamentos e trimestre
  output$encam_med_distrito_plot <- renderPlotly({
    
    distrito_encam_med <- encam_med_distrito %>% 
      filter(TIPO == input$encam_med_distrito_opcao)
    
    distrito_encam_med$TRIMESTRE <- as.factor(distrito_encam_med$TRIMESTRE)
    
    a<-ggplot(distrito_encam_med, aes(x = TRIMESTRE, y = VALOR, group = DISTRITO, colour = DISTRITO)) + 
      geom_line()+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))
    
    ggplotly(a)
    
  })
  
  #tabela de integralidade - Florianópolis
  output$encam_med_distrito_tab <- renderDataTable({
    
    distrito_encam_med <- encam_med_distrito %>% 
      filter(TIPO == input$encam_med_distrito_opcao)
    
    distrito_encam_med
    
  }, extensions = 'Buttons',
  options = list(
    "dom" = 'T<"clear">lBfrtip',
    buttons = list('copy', 'csv', 'pdf', 'print')))
  
  
  #informações do integralidade - Distritos
  output$encam_med_distrito_info <- renderText({
    
    paste("<b>I.01.01)Número de consultas médicas realizadas</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de consultas médicas realizadas no período" , "<br>",
          "<br>",
          "<b>I.01.02)Número de encaminhamentos médicos realizados</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de encaminhamentos médicos realizados no período", "<br>",
          "<br>",
          "<b>I.01.03)Percentual de encaminhamentos médicos</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de encaminhamentos médicos realizados no período/Somatório do número de consultas médicas realizadas no período *100", "<br>")
    
  })
  
  ###########################################################################################
  #Procedimentos Complementares
  ###########################################################################################
 
  #gráfico de consultas e encaminhamentos e trimestre
  output$proc_compl_distrito_plot1 <- renderPlotly({
    
    distrito_proc_compl <- proc_compl_distrito %>% 
      filter(ESPECIALIDADE == input$proc_compl_distrito_opcao) %>%
      filter(TIPO == "CANTOPLASTIA" | TIPO == "ADAPT_PROTESE")
    distrito_proc_compl$TRIMESTRE <- as.factor(distrito_proc_compl$TRIMESTRE)
    titulo <- ifelse(distrito_proc_compl$TIPO == "CANTOPLASTIA", "Cantoplastia", "Adaptação de Prótese")
    
    a<-ggplot(distrito_proc_compl, aes(x = TRIMESTRE, y = VALOR, group = DISTRITO, colour = DISTRITO)) + 
      geom_line()+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))+
      ggtitle(titulo)
    
    
    ggplotly(a)
    
  })
  
  #tabela de integralidade - Florianópolis
  output$proc_compl_distrito_tab1 <- renderDataTable({
    
    distrito_proc_compl <- proc_compl_distrito %>% 
      filter(ESPECIALIDADE == input$proc_compl_distrito_opcao) %>%
      filter(TIPO == "CANTOPLASTIA" | TIPO == "ADAPT_PROTESE")
    
    distrito_proc_compl
    
  }, extensions = 'Buttons',
  options = list(
    "dom" = 'T<"clear">lBfrtip',
    buttons = list('copy', 'csv', 'pdf', 'print')))
  
  
  #informações do integralidade - Florianópolis
  output$proc_compl_distrito_info1 <- renderText({
                                          
    paste("<b>I.02.01)Número de procedimentos médicos complementares realizados - Cantoplastia</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Cantoplastia - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.02)Número de procedimentos médicos complementares realizados - Drenagem de Abcesso</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Drenagem de Abcesso - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.03)Número de procedimentos médicos complementares realizados - Exérese de Cisto Sebáceo</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Exérese de Cisto Sebáceo - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.04)Número de procedimentos médicos complementares realizados - Retirada de Cerume</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Retirada de Cerume - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.05)Número de procedimentos médicos complementares realizados - Sutura</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Sutura - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.06)Número de procedimentos odontológicos complementares realizados - Adaptação de Protese</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Adaptação de Protese - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.07)Número de procedimentos odontológicos complementares realizados - Biópsia de Boca</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Biópsia de Boca - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.08)Número de procedimentos odontológicos complementares realizados - Exodontia de Dente Decíduo</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Exodontia de Dente Decíduo - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.09)Número de procedimentos odontológicos complementares realizados - Raspagem Subgengival</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Raspagem Subgengival - realizados no período" , "<br>",
          "<br>")
    
  })
   
  #gráfico de consultas e encaminhamentos e trimestre
  output$proc_compl_distrito_plot2 <- renderPlotly({
    
    distrito_proc_compl <- proc_compl_distrito %>% 
      filter(ESPECIALIDADE == input$proc_compl_distrito_opcao) %>%
      filter(TIPO == "DREN_ABCESSO" | TIPO == "BIOPSIA_BOCA")
    distrito_proc_compl$TRIMESTRE <- as.factor(distrito_proc_compl$TRIMESTRE)
    titulo <- ifelse(distrito_proc_compl$TIPO == "DREN_ABCESSO", "Drenagem de Abcesso", "Biopsia de Boca")
    
    a<-ggplot(distrito_proc_compl, aes(x = TRIMESTRE, y = VALOR, group = DISTRITO, colour = DISTRITO)) + 
      geom_line()+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))+
      ggtitle(titulo)
    
    
    ggplotly(a)
    
  })
  
  #tabela de integralidade - Florianópolis
  output$proc_compl_distrito_tab2 <- renderDataTable({
    
    distrito_proc_compl <- proc_compl_distrito %>% 
      filter(ESPECIALIDADE == input$proc_compl_distrito_opcao) %>%
      filter(TIPO == "DREN_ABCESSO" | TIPO == "BIOPSIA_BOCA")
    
    distrito_proc_compl
    
  }, extensions = 'Buttons',
  options = list(
    "dom" = 'T<"clear">lBfrtip',
    buttons = list('copy', 'csv', 'pdf', 'print')))
  
  
  #informações do integralidade - Florianópolis
  output$proc_compl_distrito_info2 <- renderText({
                                          
    paste("<b>I.02.01)Número de procedimentos médicos complementares realizados - Cantoplastia</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Cantoplastia - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.02)Número de procedimentos médicos complementares realizados - Drenagem de Abcesso</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Drenagem de Abcesso - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.03)Número de procedimentos médicos complementares realizados - Exérese de Cisto Sebáceo</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Exérese de Cisto Sebáceo - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.04)Número de procedimentos médicos complementares realizados - Retirada de Cerume</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Retirada de Cerume - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.05)Número de procedimentos médicos complementares realizados - Sutura</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Sutura - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.06)Número de procedimentos odontológicos complementares realizados - Adaptação de Protese</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Adaptação de Protese - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.07)Número de procedimentos odontológicos complementares realizados - Biópsia de Boca</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Biópsia de Boca - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.08)Número de procedimentos odontológicos complementares realizados - Exodontia de Dente Decíduo</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Exodontia de Dente Decíduo - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.09)Número de procedimentos odontológicos complementares realizados - Raspagem Subgengival</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Raspagem Subgengival - realizados no período" , "<br>",
          "<br>")
    
  })
   
  #gráfico de consultas e encaminhamentos e trimestre
  output$proc_compl_distrito_plot3 <- renderPlotly({
    
    distrito_proc_compl <- proc_compl_distrito %>% 
      filter(ESPECIALIDADE == input$proc_compl_distrito_opcao) %>%
      filter(TIPO == "EXERESE_CISTO" | TIPO == "EXO_DESCIDUO")
    distrito_proc_compl$TRIMESTRE <- as.factor(distrito_proc_compl$TRIMESTRE)
    titulo <- ifelse(distrito_proc_compl$TIPO == "EXERESE_CISTO", "Exérese de Cisto Sebáceo", "Exodontia de Dente Descíduo")
    
    a<-ggplot(distrito_proc_compl, aes(x = TRIMESTRE, y = VALOR, group = DISTRITO, colour = DISTRITO)) + 
      geom_line()+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))+
      ggtitle(titulo)
    
    
    ggplotly(a)
    
  })
  
  #tabela de integralidade - Florianópolis
  output$proc_compl_distrito_tab3 <- renderDataTable({
    
 distrito_proc_compl <- proc_compl_distrito %>% 
      filter(ESPECIALIDADE == input$proc_compl_distrito_opcao) %>%
      filter(TIPO == "EXERESE_CISTO" | TIPO == "EXO_DESCIDUO")
    
    distrito_proc_compl
    
  }, extensions = 'Buttons',
  options = list(
    "dom" = 'T<"clear">lBfrtip',
    buttons = list('copy', 'csv', 'pdf', 'print')))
  
  
  #informações do integralidade - Florianópolis
  output$proc_compl_distrito_info3 <- renderText({
                                          
    paste("<b>I.02.01)Número de procedimentos médicos complementares realizados - Cantoplastia</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Cantoplastia - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.02)Número de procedimentos médicos complementares realizados - Drenagem de Abcesso</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Drenagem de Abcesso - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.03)Número de procedimentos médicos complementares realizados - Exérese de Cisto Sebáceo</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Exérese de Cisto Sebáceo - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.04)Número de procedimentos médicos complementares realizados - Retirada de Cerume</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Retirada de Cerume - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.05)Número de procedimentos médicos complementares realizados - Sutura</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Sutura - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.06)Número de procedimentos odontológicos complementares realizados - Adaptação de Protese</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Adaptação de Protese - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.07)Número de procedimentos odontológicos complementares realizados - Biópsia de Boca</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Biópsia de Boca - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.08)Número de procedimentos odontológicos complementares realizados - Exodontia de Dente Decíduo</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Exodontia de Dente Decíduo - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.09)Número de procedimentos odontológicos complementares realizados - Raspagem Subgengival</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Raspagem Subgengival - realizados no período" , "<br>",
          "<br>")
    
  })
   
  #gráfico de consultas e encaminhamentos e trimestre
  output$proc_compl_distrito_plot4 <- renderPlotly({
    
    distrito_proc_compl <- proc_compl_distrito %>% 
      filter(ESPECIALIDADE == input$proc_compl_distrito_opcao) %>%
      filter(TIPO == "RETIRADA_CERUME" | TIPO == "RASPAGEM_SUB")
    distrito_proc_compl$TRIMESTRE <- as.factor(distrito_proc_compl$TRIMESTRE)
    titulo <- ifelse(distrito_proc_compl$TIPO == "RETIRADA_CERUME", "Retirada de Cerume", "Raspagem Subgengival")
    
    a<-ggplot(distrito_proc_compl, aes(x = TRIMESTRE, y = VALOR, group = DISTRITO, colour = DISTRITO)) + 
      geom_line()+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))+
      ggtitle(titulo)
    
    
    ggplotly(a)
    
  })
  
  #tabela de integralidade - Florianópolis
  output$proc_compl_distrito_tab4 <- renderDataTable({
    
  distrito_proc_compl <- proc_compl_distrito %>% 
      filter(ESPECIALIDADE == input$proc_compl_distrito_opcao) %>%
      filter(TIPO == "RETIRADA_CERUME" | TIPO == "RASPAGEM_SUB")
    
    distrito_proc_compl
    
  }, extensions = 'Buttons',
  options = list(
    "dom" = 'T<"clear">lBfrtip',
    buttons = list('copy', 'csv', 'pdf', 'print')))
  
  
  #informações do integralidade - Florianópolis
  output$proc_compl_distrito_info4 <- renderText({
                                          
    paste("<b>I.02.01)Número de procedimentos médicos complementares realizados - Cantoplastia</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Cantoplastia - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.02)Número de procedimentos médicos complementares realizados - Drenagem de Abcesso</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Drenagem de Abcesso - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.03)Número de procedimentos médicos complementares realizados - Exérese de Cisto Sebáceo</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Exérese de Cisto Sebáceo - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.04)Número de procedimentos médicos complementares realizados - Retirada de Cerume</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Retirada de Cerume - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.05)Número de procedimentos médicos complementares realizados - Sutura</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Sutura - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.06)Número de procedimentos odontológicos complementares realizados - Adaptação de Protese</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Adaptação de Protese - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.07)Número de procedimentos odontológicos complementares realizados - Biópsia de Boca</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Biópsia de Boca - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.08)Número de procedimentos odontológicos complementares realizados - Exodontia de Dente Decíduo</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Exodontia de Dente Decíduo - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.09)Número de procedimentos odontológicos complementares realizados - Raspagem Subgengival</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Raspagem Subgengival - realizados no período" , "<br>",
          "<br>")
    
  })
   
  #gráfico de consultas e encaminhamentos e trimestre
  output$proc_compl_distrito_plot5 <- renderPlotly({
    
    distrito_proc_compl <- proc_compl_distrito %>% 
      filter(ESPECIALIDADE == input$proc_compl_distrito_opcao) %>%
      filter(TIPO == "SUTURA")
    distrito_proc_compl$TRIMESTRE <- as.factor(distrito_proc_compl$TRIMESTRE)
    titulo <- ifelse(distrito_proc_compl$TIPO == "SUTURA", "Sutura", " ")
    
    a<-ggplot(distrito_proc_compl, aes(x = TRIMESTRE, y = VALOR, group = DISTRITO, colour = DISTRITO)) + 
      geom_line()+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))+
      ggtitle(titulo)
    
    
    ggplotly(a)
    
  })
  
  #tabela de integralidade - Florianópolis
  output$proc_compl_distrito_tab5 <- renderDataTable({
    
  distrito_proc_compl <- proc_compl_distrito %>% 
      filter(ESPECIALIDADE == input$proc_compl_distrito_opcao) %>%
      filter(TIPO == "SUTURA")
    
    distrito_proc_compl
    
  }, extensions = 'Buttons',
  options = list(
    "dom" = 'T<"clear">lBfrtip',
    buttons = list('copy', 'csv', 'pdf', 'print')))
  
  
  #informações do integralidade - Florianópolis
  output$proc_compl_distrito_info5 <- renderText({
                                          
    paste("<b>I.02.01)Número de procedimentos médicos complementares realizados - Cantoplastia</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Cantoplastia - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.02)Número de procedimentos médicos complementares realizados - Drenagem de Abcesso</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Drenagem de Abcesso - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.03)Número de procedimentos médicos complementares realizados - Exérese de Cisto Sebáceo</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Exérese de Cisto Sebáceo - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.04)Número de procedimentos médicos complementares realizados - Retirada de Cerume</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Retirada de Cerume - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.05)Número de procedimentos médicos complementares realizados - Sutura</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Sutura - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.06)Número de procedimentos odontológicos complementares realizados - Adaptação de Protese</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Adaptação de Protese - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.07)Número de procedimentos odontológicos complementares realizados - Biópsia de Boca</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Biópsia de Boca - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.08)Número de procedimentos odontológicos complementares realizados - Exodontia de Dente Decíduo</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Exodontia de Dente Decíduo - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.09)Número de procedimentos odontológicos complementares realizados - Raspagem Subgengival</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Raspagem Subgengival - realizados no período" , "<br>",
          "<br>")
    
  })

  ###########################################################################################                         
  #Gestantes com Consultas Odontológicas                                                           
  ###########################################################################################
 
  output$odonto_gestantes_distrito_plot <- renderPlotly({
    
    distrito_odonto_gestantes <- odonto_gestantes_distrito %>% 
      filter(TIPO == input$odonto_gestantes_distrito_opcao)
    
    a<-ggplot(distrito_odonto_gestantes, aes(x = TRIMESTRE, y = VALOR, group = DISTRITO, colour = DISTRITO)) + 
      geom_line()+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))
    
    
    ggplotly(a)
    
  })
  
  
  
  output$odonto_gestantes_distrito_tab <- renderDataTable({
    
    distrito_odonto_gestantes <- odonto_gestantes_distrito %>% 
      filter(TIPO == input$odonto_gestantes_distrito_opcao)
    
    distrito_odonto_gestantes
    
  }, extensions = 'Buttons',
  options = list(
    "dom" = 'T<"clear">lBfrtip',
    buttons = list('copy', 'csv', 'pdf', 'print')))
  
  
  
  output$odonto_gestantes_distrito_info <- renderText({
    
    paste("<b>I.03.01)Total de mulheres no terceiro trimestre de gestação</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de mulheres no terceiro trimestre de gestação no período" , "<br>",
          "<br>",
          "<b>I.03.02)Total de gestantes com 1 ou mais consultas odontológicas</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de gestantes no terceiro trimestre com 1 ou mais consultas odontológicas", "<br>",
          "<br>",
          "<b>I.03.03)Percentual de gestantes com 1 ou mais consultas odontológicas</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de gestantes no terceiro com 1 ou mais consultas odontológicas/" , "<br>",
          "Somatório do número de mulheres no terceiro trimestre de gestação no período *100 ", "<br>",
          "<br>")
  })
                        
   
  
  ###########################################################################################       
  #Centros de Saúde
  ########################################################################################### 
  ###########################################################################################
  #Dashboard Centros de Saúde Acesso
  ###########################################################################################
  #Pacientes Diferentes
  ###########################################################################################
  #gráfico de pessoas diferentes atendidas por especialidade e trimestre
  output$pc_dif_cs_plot <- renderPlotly({
    
    cs_pc_dif <- pc_cs %>% 
      filter(ESPECIALIDADE == input$pc_dif_cs_especialidade) %>%
      filter(DISTRITO == input$pc_dif_cspordistrito)
    
    a<-ggplot(cs_pc_dif, aes(x = TRIMESTRE, y = VALOR, group = UNIDADE, colour = UNIDADE)) + 
      geom_line()+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))
    
    
    ggplotly(a)
    
  })
  
  #tabela do pc_dif - Florianópolis
  output$pc_dif_cs_tab <- renderDataTable({
    
    cs_pc_dif <- pc_cs %>% 
      filter(ESPECIALIDADE == input$pc_dif_cs_especialidade)%>%
      filter(DISTRITO == input$pc_dif_cspordistrito)
    
    cs_pc_dif
    
  }, extensions = 'Buttons',
  options = list(
    "dom" = 'T<"clear">lBfrtip',
    buttons = list('copy', 'csv', 'pdf', 'print')))
  
  
  #informações do pc_dif - Centros de Saúde
  output$pc_dif_cs_info <- renderText({
    
    paste("<b>A.01.01)Pessoas diferentes atendidas em consultas médicas e de enfermagem</b>", "<br>",
          "<b>Fórmula:</b> Somatório de pessoas diferentes atendidas em consultas médicas e de enfermagem" , "<br>",
          "<b>Observações:</b> Soma de pessoas diferentes atendidas em qualquer dessas consultas." , "<br>",
          "Não foram considerados atividades coletivas e Atualização de prontuário", "<br>",
          "<b>A.01.02)Pessoas diferentes atendidas em consultas médicas</b>", "<br>",
          "<b>Fórmula:</b> Somatório de pessoas diferentes atendidas em consultas médicas", "<br>",
          "<b>Observações:</b> Não foram consideradas pessoas atendidas em atividades coletivas ou que tenham a consulta finalizada como Atualização de prontuário", "<br>",
          "<b>A.01.03)Pessoas diferentes atendidas em consultas enfermagem</b>", "<br>",
          "<b>Fórmula:</b> Somatório de pessoas diferentes atendidas em consultas de enfermagem", "<br>",
          "<b>Observações:</b> Não foram consideradas pessoas atendidas em atividades coletivas ou que tenham a consulta finalizada como Atualização de prontuário", "<br>",
          "<b>A.01.04)Pessoas diferentes atendidas em consultas odontológicas</b>", "<br>",
          "<b>Fórmula:</b> Somatório de pessoas diferentes atendidas em consultas odontológicas", "<br>",
          "<b>Observações:</b> Não foram consideradas pessoas atendidas em atividades coletivas ou que tenham a consulta finalizada como Atualização de prontuário", "<br>",
          "<b>A.01.05)Pessoas diferentes atendidas em todos os serviços</b>", "<br>",
          "<b>Fórmula:</b> Somatório de pessoas diferentes atendidas em consultas, procedimentos, dispensação de medicamentos e atividades coletivas nos últimos 2 anos")
    
  })
  
  ###########################################################################################
  #Demanda Espontânea
  ###########################################################################################
  
  #gráfico do percentual de demanda espontânea por especialidade e trimestre
  output$perc_dem_cons_cs_plot <- renderPlotly({
    
    cs_perc_dem_cons <- perc_dem_cons_cs  %>% 
      filter(TIPO == input$perc_dem_cons_cs_especialidade) %>%
      filter(DISTRITO == input$perc_dem_cons_cspordistrito)
    cs_perc_dem_cons$TRIMESTRE <- as.factor(cs_perc_dem_cons$TRIMESTRE)
    
    a<-ggplot(cs_perc_dem_cons, aes(x = TRIMESTRE, y = VALOR, group = UNIDADE, colour = UNIDADE)) + 
      geom_line()+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))
    
    
    ggplotly(a)
    
  })
  
  
   #tabela do percentual de perc_dem_cons - cs
  output$perc_dem_cons_cs_tab <- renderDataTable({
    
    cs_perc_dem_cons <- perc_dem_cons_cs  %>% 
      filter(TIPO == input$perc_dem_cons_cs_especialidade) %>%
      filter(DISTRITO == input$perc_dem_cons_cspordistrito) 
    
    cs_perc_dem_cons
    
  }, extensions = 'Buttons',
  options = list(
    "dom" = 'T<"clear">lBfrtip',
    buttons = list('copy', 'csv', 'pdf', 'print')))
  
  
  #informações do percentual de perc_dem_cons - Florianópolis
  output$perc_dem_cons_cs_info <- renderText({
    
    paste("<b>A.02.01)Percentual de demanda espontânea atendida por médico</b>", "<br>",
          "<b>Fórmula:</b> Porcentagem de atendimentos médicos por demanda espontânea" , "<br>",
          "<b>A.02.02)Percentual de demanda espontânea atendida por enfermeiro</b>", "<br>",
          "<b>Fórmula:</b> Porcentagem de atendimentos de enfermeiros por demanda espontânea" , "<br>",
          "<b>A.02.03)Percentual de demanda espontânea atendida por odontólogo</b>", "<br>",
          "<b>Fórmula:</b> Porcentagem de atendimentos odontológicos por demanda espontânea" , "<br>")
  }) 
  
  ###########################################################################################
  #Testes Rápidos
  ###########################################################################################
  
  #gráfico da quantidade de testes rápidos e trimestre
  output$teste_rap_cs_plot <- renderPlotly({
    
    cs_teste_rap <- teste_rap_cs %>% 
      filter(PROCEDIMENTO == input$teste_rap_cs_procedimento)  %>%
      filter(DISTRITO == input$teste_rap_cspordistrito)
    cs_teste_rap$TRIMESTRE <- as.factor(cs_teste_rap$TRIMESTRE)
    
    a<-ggplot(cs_teste_rap, aes(x = TRIMESTRE, y = VALOR, group = UNIDADE, colour = UNIDADE)) + 
      geom_line()+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))
    
    
    ggplotly(a)
    
  })
  
  #tabela do percentual de teste_rap - Florianópolis
  output$teste_rap_cs_tab <- renderDataTable({
    
    cs_teste_rap <- teste_rap_cs %>%
      filter(PROCEDIMENTO == input$teste_rap_cs_procedimento)  %>%
      filter(DISTRITO == input$teste_rap_cspordistrito)
    
    cs_teste_rap
    
  }, extensions = 'Buttons',
  options = list(
    "dom" = 'T<"clear">lBfrtip',
    buttons = list('copy', 'csv', 'pdf', 'print')))
  
  
  #informações do percentual de teste_rap - Florianópolis
  output$teste_rap_cs_info <- renderText({
    
 paste("<b>A.03.01)Total de testes rápidos para detecção do HIV na gestante ou pai/parceiro</b>", "<br>",
          "<b>Fórmula:</b> Somatório de testes rápidos para detecção do HIV na gestante ou pai/parceiro" , "<br>",
           "<b>A.03.02)Total de testes rápidos para detecção pelo HIV</b>", "<br>",
          "<b>Fórmula:</b> Somatório de testes rápidos para detecção pelo HIV" , "<br>",
          "<b>A.03.03)Total de testes rápidos para detecção de sífilis na gestante ou pai/parceiro</b>", "<br>",
          "<b>Fórmula:</b> Somatório de testes rápidos para detecção de sífilis na gestante ou pai/parceiro" , "<br>",
          "<b>A.03.04)Total de testes rápidos para detecção de sífilis</b>", "<br>",
          "<b>Fórmula:</b> Somatório de testes rápidos para detecção de sífilis" , "<br>",
          "<b>A.03.05)Total de testes rápidos para detecção de hepatite B</b>", "<br>",
          "<b>Fórmula:</b> Somatório de testes rápidos para detecção de hepatite B" , "<br>",
          "<b>A.03.06)Total de testes rápidos para detecção de hepatite C</b>", "<br>",
          "<b>Fórmula:</b> Somatório de testes rápidos para detecção de hepatite C" , "<br>")
           
  }) 
    
             
 ###########################################################################################                         
 #Falta em Consultas                                                           
 ###########################################################################################
  #gráfico 
  output$faltas_cs_plot <- renderPlotly({
                               
    
                                                      
    cs_faltas <- faltas_cs %>% 
      filter(TIPO == input$faltas_cs_tipo) %>%
      filter(DISTRITO == input$faltas_cspordistrito)
    cs_faltas$TRIMESTRE <- as.factor(cs_faltas$TRIMESTRE)
    
    a<-ggplot(cs_faltas, aes(x = TRIMESTRE, y = VALOR, group = UNIDADE, colour = UNIDADE)) + 
      geom_line()+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))
    
    
    ggplotly(a)
    
  })
  
  #tabela 
  output$faltas_cs_tab <- renderDataTable({
    
    cs_faltas <- faltas_cs%>% 
      filter(TIPO == input$faltas_cs_tipo)%>%
      filter(DISTRITO == input$faltas_cspordistrito)
    
    cs_faltas
    
  }, extensions = 'Buttons',
  options = list(
    "dom" = 'T<"clear">lBfrtip',
    buttons = list('copy', 'csv', 'pdf', 'print')))
  
  
  #informações 
  output$faltas_cs_info <- renderText({
    
   paste("<b>A.04.01)Percentual de faltas em consultas odontológicas</b>", "<br>",
          "<b>Fórmula:</b> Somatório das faltas em consultas odontológicas/Somatório de consultas odontológicas * 100" , "<br>",
          "<b>A.04.02)Percentual de faltas em consultas médicas</b>", "<br>",
          "<b>Fórmula:</b> Somatório das faltas em consultas médicas/Somatório de consultas médicas * 100" , "<br>",
         "<b>A.04.03)Percentual de faltas em consultas de enfermagem</b>", "<br>",
          "<b>Fórmula:</b> Somatório das faltas em consultas de enfermagem/Somatório de consultas de enfermagem * 100" , "<br>")
           
  })                         
                        
 ###########################################################################################                         
 #Primeira Consulta Odontológica                                                           
 ###########################################################################################
  
  output$prim_cons_odonto_cs_plot <- renderPlotly({
    
    cs_prim_cons_odonto <- prim_cons_odonto_cs  %>%
      filter(DISTRITO == input$prim_cons_odonto_cspordistrito)
    cs_prim_cons_odonto$TRIMESTRE <- as.factor(cs_prim_cons_odonto$TRIMESTRE)
    
    a<-ggplot(cs_prim_cons_odonto, aes(x = TRIMESTRE, y = VALOR, group = UNIDADE, colour = UNIDADE)) + 
      geom_line()+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))
    
    
    ggplotly(a)
    
  })
  

  output$prim_cons_odonto_cs_tab <- renderDataTable({
    
    cs_prim_cons_odonto <- prim_cons_odonto_cs%>%
      filter(DISTRITO == input$prim_cons_odonto_cspordistrito)
    
    cs_prim_cons_odonto
    
  }, extensions = 'Buttons',
  options = list(
    "dom" = 'T<"clear">lBfrtip',
    buttons = list('copy', 'csv', 'pdf', 'print')))
  
  

  output$prim_cons_odonto_cs_info <- renderText({
    
    paste("<b>A.05.01)Número de atendimentos de primeira consulta odontológica</b>", "<br>",
          "<b>Fórmula:</b> Somatório de atendimentos de primeira consulta odontológica","<br>")
          
  })                         
                        
 ###########################################################################################                         
 #Atendimento Inadequado na UPA                                                           
 ###########################################################################################

   output$atd_inad_upa_cs_plot <- renderPlotly({
    
    cs_atd_inad_upa <- atd_inad_upa_cs %>%
      filter(DISTRITO == input$atd_inad_upa_cspordistrito)
    cs_atd_inad_upa$TRIMESTRE <- as.factor(cs_atd_inad_upa$TRIMESTRE)
    
    a<-ggplot(cs_atd_inad_upa, aes(x = TRIMESTRE, y = VALOR, group = UNIDADE, colour = UNIDADE)) + 
      geom_line()+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))
    
    
    ggplotly(a)
    
  })
  

  output$atd_inad_upa_cs_tab <- renderDataTable({
    
    cs_atd_inad_upa <- atd_inad_upa_cs%>%
      filter(DISTRITO == input$atd_inad_upa_cspordistrito)
    
    cs_atd_inad_upa
    
  }, extensions = 'Buttons',
  options = list(
    "dom" = 'T<"clear">lBfrtip',
    buttons = list('copy', 'csv', 'pdf', 'print')))
  
  

  output$atd_inad_upa_cs_info <- renderText({
    
    paste("<b>A.06.01)Número de atendimentos inadequados nas UPAS</b>", "<br>",
          "<b>Fórmula:</b> Somatório de atendimentos de baixo risco nas UPAS nos horários em que", "<br>",
          "os Centros de saúde estão abertos" , "<br>")
          
  })
  
  ###########################################################################################
  #Dashboard Centros de Saúde Longitudinalidade
  ###########################################################################################
  ###########################################################################################                         
  #Seguimento Pré-natal                                                          
  ###########################################################################################

  #gráfico de pessoas diferentes atendidas por especialidade e trimestre
  output$gestantes_cs_plot <- renderPlotly({
    
    cs_gestantes <- gestantes_cs %>% 
      filter(TIPO == input$gestantes_cs_opcao) %>%
      filter(DISTRITO == input$longitudinalidade_cspordistrito)
    cs_gestantes$VALOR <- as.numeric(cs_gestantes$VALOR)
    
    a<-ggplot(cs_gestantes, aes(x = TRIMESTRE, y = VALOR, group = UNIDADE, colour = UNIDADE)) + 
      geom_line()+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))
    
    ggplotly(a)
    
  })
  
  #tabela do acesso - Florianópolis
  output$gestantes_cs_tab <- renderDataTable({
    
    cs_gestantes <- gestantes_cs %>% 
      filter(TIPO == input$gestantes_cs_opcao) %>%
      filter(DISTRITO == input$longitudinalidade_cspordistrito)
    
    cs_gestantes
    
  }, extensions = 'Buttons',
  options = list(
    "dom" = 'T<"clear">lBfrtip',
    buttons = list('copy', 'csv', 'pdf', 'print')))
  
  
  #informações de integralidade - Centros de Saúde
  output$gestantes_cs_info <- renderText({
    
    
    paste("<b>L.01.01)Total de mulheres no terceiro trimestre de gestação</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de mulheres no terceiro trimestre de gestação no período" , "<br>",
          "<br>",
          "<b>L.01.02)Total de gestantes com pré-natal nos três trimestres</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de gestantes no terceiro trimestre que realizaram ao menos" , "<br>",
          "uma consulta em cada trimestre no período", "<br>",
          "<br>",
          "<b>L.01.03)Percentual de gestantes com pré-natal nos três trimestres</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de gestantes no terceiro trimestre que realizaram ao menos" , "<br>",
          "uma consulta em cada trimestre no período/Somatório do número de mulheres no terceiro trimestre" , "<br>",
          "de gestação no período *100 ", "<br>",
          "<br>",
          "<b>L.01.04)Total de gestantes com 7 ou mais consultas pré-natais</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de gestantes no terceiro trimestre com 7 ou mais consultas pré-natais" , "<br>",
          "<br>",
          "<b>L.01.05)Percentual de gestantes com 7 ou mais consultas pré-natais</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de gestantes no terceiro trimestre com 7 ou mais consultas pré-natais/" , "<br>",
          "Somatório do número de mulheres no terceiro trimestre de gestação no período *100 ", "<br>",
          "<br>")
  })
  
  ###########################################################################################
  #Citopatológico
  ###########################################################################################
  output$citopatologico_cs_plot <- renderPlotly({
    
    cs_citopatologico <- citopatologico_cs %>%
      filter(DISTRITO == input$citopatologico_cspordistrito)
    cs_citopatologico$TRIMESTRE <- as.factor(cs_citopatologico$TRIMESTRE)
    
    a<-ggplot(cs_citopatologico, aes(x = TRIMESTRE, y = VALOR, group = UNIDADE, colour = UNIDADE)) + 
      geom_line()+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))
    
    
    ggplotly(a)
    
  })
  

  output$citopatologico_cs_tab <- renderDataTable({
    
    cs_citopatologico <- citopatologico_cs%>%
      filter(DISTRITO == input$citopatologico_cspordistrito)
    
    cs_citopatologico
    
  }, extensions = 'Buttons',
  options = list(
    "dom" = 'T<"clear">lBfrtip',
    buttons = list('copy', 'csv', 'pdf', 'print')))
  
  

  output$citopatologico_cs_info <- renderText({
    
    paste("<b>L.02.01)Percentual de exames citopatológicos realizados</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de citopatológicos realizados/(Somatório de mulheres diferentes entre 24 e 65 anos atendidas*(1/3)*100" , "<br>",
          "<b>Observação1:</b> Utilizou-se mulheres diferentes no trimestre." , "<br>",
          "<b>Observação2:</b> Como toda mulher nesta faixa etária deve fazer o citopatalógico, no mínimo de 3 em 3 anos. Multiplicou-se o denominador por 1/3" , "<br>"
          )
          
  })
  ###########################################################################################
  #Tratamento Odontológico
  ###########################################################################################
  output$tratam_compl_odonto_cs_plot <- renderPlotly({
    
    cs_tratam_compl_odonto <- tratam_compl_odonto_cs  %>%
      filter(DISTRITO == input$tratam_compl_odonto_cspordistrito)
    cs_tratam_compl_odonto$TRIMESTRE <- as.factor(cs_tratam_compl_odonto$TRIMESTRE)
    
    a<-ggplot(cs_tratam_compl_odonto, aes(x = TRIMESTRE, y = VALOR, group = UNIDADE, colour = UNIDADE)) + 
      geom_line()+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))
    
    
    ggplotly(a)
    
  })
  

  output$tratam_compl_odonto_cs_tab <- renderDataTable({
    
    cs_tratam_compl_odonto <- tratam_compl_odonto_cs%>%
      filter(DISTRITO == input$tratam_compl_odonto_cspordistrito)
    
    cs_tratam_compl_odonto
    
  }, extensions = 'Buttons',
  options = list(
    "dom" = 'T<"clear">lBfrtip',
    buttons = list('copy', 'csv', 'pdf', 'print')))
  
  

  output$tratam_compl_odonto_cs_info <- renderText({
    
    paste("<b>L.03.01)Número de tratamentos odontológicos completados</b>", "<br>",
          "<b>Fórmula:</b> Somatório de tratamentos odontológicos completados","<br>")
          
  })     
  ###########################################################################################
  #Sífilis
  ###########################################################################################
  #gráfico 
  output$sifilis_cs_plot <- renderPlotly({
    
    cs_sifilis <- sifilis_cs %>% 
      filter(TIPO == input$sifilis_cs_opcao)%>%
      filter(DISTRITO == input$sifilis_cspordistrito)
    
    a<-ggplot(cs_sifilis, aes(x = TRIMESTRE, y = VALOR, group = UNIDADE, colour = UNIDADE)) + 
      geom_line()+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))
    
    
    ggplotly(a)
    
  })
  
  
  #tabela 
  output$sifilis_cs_tab <- renderDataTable({
    
    cs_sifilis <- sifilis_cs %>% 
      filter(TIPO == input$sifilis_cs_opcao)%>%
      filter(DISTRITO == input$sifilis_cspordistrito)
    
    cs_sifilis
    
  }, extensions = 'Buttons',
  options = list(
    "dom" = 'T<"clear">lBfrtip',
    buttons = list('copy', 'csv', 'pdf', 'print')))
  
  
  #informações 
  output$sifilis_cs_info <- renderText({
    
    paste("<b>L.04.01)Total de casos de sífilis</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de casos de sífilis" , "<br>",
          "<br>",
          "<b>L.04.01)Total de casos de sífilis tratados</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de casos de sífilis tratados" , "<br>",
          "<br>",
          "<b>L.04.03)Percentual de sifilis tratados</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número casos de sífilis/Somatório do número casos de sífilis tratados * 100", "<br>")
  })  
  
  ###########################################################################################
  #Dashboard Centros de Saúde Integralidade
  ###########################################################################################
  ###########################################################################################
  #Encaminhamentos Médicos
  ###########################################################################################

  
  #gráfico de pessoas diferentes atendidas por especialidade e trimestre
  output$encam_med_cs_plot <- renderPlotly({
    
    cs_encam_med <- encam_med_cs %>% 
      filter(TIPO == input$encam_med_cs_opcao) %>%
      filter(DISTRITO == input$encam_med_cspordistrito)
    
    a<-ggplot(cs_encam_med, aes(x = TRIMESTRE, y = VALOR, group = UNIDADE, colour = UNIDADE)) + 
      geom_line()+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))
    
    ggplotly(a)
    
  })
  
  #tabela do acesso - Florianópolis
  output$encam_med_cs_tab <- renderDataTable({
    
    cs_encam_med <- encam_med_cs %>% 
      filter(TIPO == input$encam_med_cs_opcao) %>%
      filter(DISTRITO == input$encam_med_cspordistrito)
    
    cs_encam_med
    
  }, extensions = 'Buttons',
  options = list(
    "dom" = 'T<"clear">lBfrtip',
    buttons = list('copy', 'csv', 'pdf', 'print')))
  
  
  #informações de integralidade - Centros de Saúde
  output$encam_med_cs_info <- renderText({
    
    paste("<b>I.01.01)Número de consultas médicas realizadas</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de consultas médicas realizadas no período" , "<br>",
          "<br>",
          "<b>I.01.02)Número de encaminhamentos médicos realizados</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de encaminhamentos médicos realizados no período", "<br>",
          "<br>",
          "<b>I.01.03)Percentual de encaminhamentos médicos</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de encaminhamentos médicos realizados no período/Somatório do número de consultas médicas realizadas no período *100", "<br>")
    
  })
  
  ###########################################################################################
  #Procedimentos Complementares
  ###########################################################################################
 
  #gráfico de consultas e encaminhamentos e trimestre
  output$proc_compl_cs_plot1 <- renderPlotly({
    
    cs_proc_compl <- proc_compl_cs %>% 
      filter(ESPECIALIDADE == input$proc_compl_cs_opcao) %>%
      filter(DISTRITO == input$proc_compl_cspordistrito)%>%
      filter(TIPO == "CANTOPLASTIA" | TIPO == "ADAPT_PROTESE")
    cs_proc_compl$TRIMESTRE <- as.factor(cs_proc_compl$TRIMESTRE)
    titulo <- ifelse(cs_proc_compl$TIPO == "CANTOPLASTIA", "Cantoplastia", "Adaptação de Prótese")
    
    a<-ggplot(cs_proc_compl, aes(x = TRIMESTRE, y = VALOR, group = UNIDADE, colour = UNIDADE)) + 
      geom_line()+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))+
      ggtitle(titulo)
    
    
    ggplotly(a)
    
  })
  
  #tabela de integralidade - Florianópolis
  output$proc_compl_cs_tab1 <- renderDataTable({
    
    cs_proc_compl <- proc_compl_cs %>% 
      filter(ESPECIALIDADE == input$proc_compl_cs_opcao) %>%
      filter(DISTRITO == input$proc_compl_cspordistrito)%>%
      filter(TIPO == "CANTOPLASTIA" | TIPO == "ADAPT_PROTESE")
    
    cs_proc_compl
    
  }, extensions = 'Buttons',
  options = list(
    "dom" = 'T<"clear">lBfrtip',
    buttons = list('copy', 'csv', 'pdf', 'print')))
  
  
  #informações do integralidade - Florianópolis
  output$proc_compl_cs_info1 <- renderText({
                                          
    paste("<b>I.02.01)Número de procedimentos médicos complementares realizados - Cantoplastia</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Cantoplastia - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.02)Número de procedimentos médicos complementares realizados - Drenagem de Abcesso</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Drenagem de Abcesso - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.03)Número de procedimentos médicos complementares realizados - Exérese de Cisto Sebáceo</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Exérese de Cisto Sebáceo - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.04)Número de procedimentos médicos complementares realizados - Retirada de Cerume</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Retirada de Cerume - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.05)Número de procedimentos médicos complementares realizados - Sutura</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Sutura - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.06)Número de procedimentos odontológicos complementares realizados - Adaptação de Protese</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Adaptação de Protese - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.07)Número de procedimentos odontológicos complementares realizados - Biópsia de Boca</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Biópsia de Boca - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.08)Número de procedimentos odontológicos complementares realizados - Exodontia de Dente Decíduo</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Exodontia de Dente Decíduo - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.09)Número de procedimentos odontológicos complementares realizados - Raspagem Subgengival</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Raspagem Subgengival - realizados no período" , "<br>",
          "<br>")
    
  })
   
  #gráfico de consultas e encaminhamentos e trimestre
  output$proc_compl_cs_plot2 <- renderPlotly({
    
    cs_proc_compl <- proc_compl_cs %>% 
      filter(ESPECIALIDADE == input$proc_compl_cs_opcao) %>% 
      filter(DISTRITO == input$proc_compl_cspordistrito)%>%
      filter(TIPO == "DREN_ABCESSO" | TIPO == "BIOPSIA_BOCA")
    cs_proc_compl$TRIMESTRE <- as.factor(cs_proc_compl$TRIMESTRE)
    titulo <- ifelse(cs_proc_compl$TIPO == "DREN_ABCESSO", "Drenagem de Abcesso", "Biopsia de Boca")
    
    a<-ggplot(cs_proc_compl, aes(x = TRIMESTRE, y = VALOR, group = UNIDADE, colour = UNIDADE)) + 
      geom_line()+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))+
      ggtitle(titulo)
    
    
    ggplotly(a)
    
  })
  
  #tabela de integralidade - Florianópolis
  output$proc_compl_cs_tab2 <- renderDataTable({
    
    cs_proc_compl <- proc_compl_cs %>% 
      filter(ESPECIALIDADE == input$proc_compl_cs_opcao) %>%
      filter(DISTRITO == input$proc_compl_cspordistrito)%>%
      filter(TIPO == "DREN_ABCESSO" | TIPO == "BIOPSIA_BOCA")
    
    cs_proc_compl
    
  }, extensions = 'Buttons',
  options = list(
    "dom" = 'T<"clear">lBfrtip',
    buttons = list('copy', 'csv', 'pdf', 'print')))
  
  
  #informações do integralidade - Florianópolis
  output$proc_compl_cs_info2 <- renderText({
                                          
    paste("<b>I.02.01)Número de procedimentos médicos complementares realizados - Cantoplastia</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Cantoplastia - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.02)Número de procedimentos médicos complementares realizados - Drenagem de Abcesso</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Drenagem de Abcesso - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.03)Número de procedimentos médicos complementares realizados - Exérese de Cisto Sebáceo</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Exérese de Cisto Sebáceo - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.04)Número de procedimentos médicos complementares realizados - Retirada de Cerume</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Retirada de Cerume - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.05)Número de procedimentos médicos complementares realizados - Sutura</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Sutura - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.06)Número de procedimentos odontológicos complementares realizados - Adaptação de Protese</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Adaptação de Protese - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.07)Número de procedimentos odontológicos complementares realizados - Biópsia de Boca</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Biópsia de Boca - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.08)Número de procedimentos odontológicos complementares realizados - Exodontia de Dente Decíduo</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Exodontia de Dente Decíduo - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.09)Número de procedimentos odontológicos complementares realizados - Raspagem Subgengival</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Raspagem Subgengival - realizados no período" , "<br>",
          "<br>")
    
  })
   
  #gráfico de consultas e encaminhamentos e trimestre
  output$proc_compl_cs_plot3 <- renderPlotly({
    
    cs_proc_compl <- proc_compl_cs %>% 
      filter(ESPECIALIDADE == input$proc_compl_cs_opcao) %>%
      filter(DISTRITO == input$proc_compl_cspordistrito)%>%
      filter(TIPO == "EXERESE_CISTO" | TIPO == "EXO_DESCIDUO")
    cs_proc_compl$TRIMESTRE <- as.factor(cs_proc_compl$TRIMESTRE)
    titulo <- ifelse(cs_proc_compl$TIPO == "EXERESE_CISTO", "Exérese de Cisto Sebáceo", "Exodontia de Dente Descíduo")
    
    a<-ggplot(cs_proc_compl, aes(x = TRIMESTRE, y = VALOR, group = UNIDADE, colour = UNIDADE)) + 
      geom_line()+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))+
      ggtitle(titulo)
    
    
    ggplotly(a)
    
  })
  
  #tabela de integralidade - Florianópolis
  output$proc_compl_cs_tab3 <- renderDataTable({
    
cs_proc_compl <- proc_compl_cs %>% 
      filter(ESPECIALIDADE == input$proc_compl_cs_opcao) %>%
      filter(DISTRITO == input$proc_compl_cspordistrito)%>%
      filter(TIPO == "EXERESE_CISTO" | TIPO == "EXO_DESCIDUO")
    
    cs_proc_compl
    
  }, extensions = 'Buttons',
  options = list(
    "dom" = 'T<"clear">lBfrtip',
    buttons = list('copy', 'csv', 'pdf', 'print')))
  
  
  #informações do integralidade - Florianópolis
  output$proc_compl_cs_info3 <- renderText({
                                          
    paste("<b>I.02.01)Número de procedimentos médicos complementares realizados - Cantoplastia</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Cantoplastia - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.02)Número de procedimentos médicos complementares realizados - Drenagem de Abcesso</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Drenagem de Abcesso - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.03)Número de procedimentos médicos complementares realizados - Exérese de Cisto Sebáceo</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Exérese de Cisto Sebáceo - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.04)Número de procedimentos médicos complementares realizados - Retirada de Cerume</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Retirada de Cerume - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.05)Número de procedimentos médicos complementares realizados - Sutura</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Sutura - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.06)Número de procedimentos odontológicos complementares realizados - Adaptação de Protese</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Adaptação de Protese - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.07)Número de procedimentos odontológicos complementares realizados - Biópsia de Boca</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Biópsia de Boca - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.08)Número de procedimentos odontológicos complementares realizados - Exodontia de Dente Decíduo</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Exodontia de Dente Decíduo - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.09)Número de procedimentos odontológicos complementares realizados - Raspagem Subgengival</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Raspagem Subgengival - realizados no período" , "<br>",
          "<br>")
    
  })
   
  #gráfico de consultas e encaminhamentos e trimestre
  output$proc_compl_cs_plot4 <- renderPlotly({
    
    cs_proc_compl <- proc_compl_cs %>% 
      filter(ESPECIALIDADE == input$proc_compl_cs_opcao) %>%
      filter(DISTRITO == input$proc_compl_cspordistrito)%>%
      filter(TIPO == "RETIRADA_CERUME" | TIPO == "RASPAGEM_SUB")
    cs_proc_compl$TRIMESTRE <- as.factor(cs_proc_compl$TRIMESTRE)
    titulo <- ifelse(cs_proc_compl$TIPO == "RETIRADA_CERUME", "Retirada de Cerume", "Raspagem Subgengival")
    
    a<-ggplot(cs_proc_compl, aes(x = TRIMESTRE, y = VALOR, group = UNIDADE, colour = UNIDADE)) + 
      geom_line()+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))+
      ggtitle(titulo)
    
    
    ggplotly(a)
    
  })
  
  #tabela de integralidade - Florianópolis
  output$proc_compl_cs_tab4 <- renderDataTable({
    
  cs_proc_compl <- proc_compl_cs %>% 
      filter(ESPECIALIDADE == input$proc_compl_cs_opcao) %>%
      filter(DISTRITO == input$proc_compl_cspordistrito)%>%
      filter(TIPO == "RETIRADA_CERUME" | TIPO == "RASPAGEM_SUB")
    
    cs_proc_compl
    
  }, extensions = 'Buttons',
  options = list(
    "dom" = 'T<"clear">lBfrtip',
    buttons = list('copy', 'csv', 'pdf', 'print')))
  
  
  #informações do integralidade - Florianópolis
  output$proc_compl_cs_info4 <- renderText({
                                          
    paste("<b>I.02.01)Número de procedimentos médicos complementares realizados - Cantoplastia</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Cantoplastia - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.02)Número de procedimentos médicos complementares realizados - Drenagem de Abcesso</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Drenagem de Abcesso - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.03)Número de procedimentos médicos complementares realizados - Exérese de Cisto Sebáceo</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Exérese de Cisto Sebáceo - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.04)Número de procedimentos médicos complementares realizados - Retirada de Cerume</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Retirada de Cerume - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.05)Número de procedimentos médicos complementares realizados - Sutura</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Sutura - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.06)Número de procedimentos odontológicos complementares realizados - Adaptação de Protese</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Adaptação de Protese - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.07)Número de procedimentos odontológicos complementares realizados - Biópsia de Boca</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Biópsia de Boca - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.08)Número de procedimentos odontológicos complementares realizados - Exodontia de Dente Decíduo</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Exodontia de Dente Decíduo - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.09)Número de procedimentos odontológicos complementares realizados - Raspagem Subgengival</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Raspagem Subgengival - realizados no período" , "<br>",
          "<br>")
    
  })
   
  #gráfico de consultas e encaminhamentos e trimestre
  output$proc_compl_cs_plot5 <- renderPlotly({
    
    cs_proc_compl <- proc_compl_cs %>% 
      filter(ESPECIALIDADE == input$proc_compl_cs_opcao) %>%
      filter(DISTRITO == input$proc_compl_cspordistrito)%>%
      filter(TIPO == "SUTURA")
    cs_proc_compl$TRIMESTRE <- as.factor(cs_proc_compl$TRIMESTRE)
    titulo <- ifelse(cs_proc_compl$TIPO == "SUTURA", "Sutura", " ")
    
    a<-ggplot(cs_proc_compl, aes(x = TRIMESTRE, y = VALOR, group = UNIDADE, colour = UNIDADE)) + 
      geom_line()+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))+
      ggtitle(titulo)
    
    
    ggplotly(a)
    
  })
  
  #tabela de integralidade - Florianópolis
  output$proc_compl_cs_tab5 <- renderDataTable({
    
  cs_proc_compl <- proc_compl_cs %>% 
      filter(ESPECIALIDADE == input$proc_compl_cs_opcao) %>%
      filter(DISTRITO == input$proc_compl_cspordistrito)%>%
      filter(TIPO == "SUTURA")
    
    cs_proc_compl
    
  }, extensions = 'Buttons',
  options = list(
    "dom" = 'T<"clear">lBfrtip',
    buttons = list('copy', 'csv', 'pdf', 'print')))
  
  
  #informações do integralidade - Florianópolis
  output$proc_compl_cs_info5 <- renderText({
                                          
    paste("<b>I.02.01)Número de procedimentos médicos complementares realizados - Cantoplastia</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Cantoplastia - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.02)Número de procedimentos médicos complementares realizados - Drenagem de Abcesso</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Drenagem de Abcesso - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.03)Número de procedimentos médicos complementares realizados - Exérese de Cisto Sebáceo</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Exérese de Cisto Sebáceo - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.04)Número de procedimentos médicos complementares realizados - Retirada de Cerume</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Retirada de Cerume - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.05)Número de procedimentos médicos complementares realizados - Sutura</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Sutura - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.06)Número de procedimentos odontológicos complementares realizados - Adaptação de Protese</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Adaptação de Protese - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.07)Número de procedimentos odontológicos complementares realizados - Biópsia de Boca</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Biópsia de Boca - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.08)Número de procedimentos odontológicos complementares realizados - Exodontia de Dente Decíduo</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Exodontia de Dente Decíduo - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.09)Número de procedimentos odontológicos complementares realizados - Raspagem Subgengival</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Raspagem Subgengival - realizados no período" , "<br>",
          "<br>")
    
  })


  ###########################################################################################                         
  #Gestantes com Consultas Odontológicas                                                           
  ###########################################################################################
     
  output$odonto_gestantes_cs_plot <- renderPlotly({
    
    cs_odonto_gestantes <- odonto_gestantes_cs %>% 
      filter(TIPO == input$odonto_gestantes_cs_opcao)%>%
      filter(DISTRITO == input$odonto_gestantes_cspordistrito)
    
    a<-ggplot(cs_odonto_gestantes, aes(x = TRIMESTRE, y = VALOR, group = UNIDADE, colour = UNIDADE)) + 
      geom_line()+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))
    
    
    ggplotly(a)
    
  })
  
  
  
  output$odonto_gestantes_cs_tab <- renderDataTable({
    
    cs_odonto_gestantes <- odonto_gestantes_cs %>% 
      filter(TIPO == input$odonto_gestantes_cs_opcao)%>%
      filter(DISTRITO == input$odonto_gestantes_cspordistrito)
    
    cs_odonto_gestantes
    
  }, extensions = 'Buttons',
  options = list(
    "dom" = 'T<"clear">lBfrtip',
    buttons = list('copy', 'csv', 'pdf', 'print')))
  
  
  
  output$odonto_gestantes_cs_info <- renderText({
    
    paste("<b>I.03.01)Total de mulheres no terceiro trimestre de gestação</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de mulheres no terceiro trimestre de gestação no período" , "<br>",
          "<br>",
          "<b>I.03.02)Total de gestantes com 1 ou mais consultas odontológicas</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de gestantes no terceiro trimestre com 1 ou mais consultas odontológicas", "<br>",
          "<br>",
          "<b>I.03.03)Percentual de gestantes com 1 ou mais consultas odontológicas</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de gestantes no terceiro com 1 ou mais consultas odontológicas/" , "<br>",
          "Somatório do número de mulheres no terceiro trimestre de gestação no período *100 ", "<br>",
          "<br>")
  })               
   
  
  ###########################################################################################
  #Equipes
  ###########################################################################################
  ###########################################################################################
  #Dashboard Equipes de Saúde Acesso
  ###########################################################################################
  #Pacientes Diferentes
  ###########################################################################################
  #gráfico de pessoas diferentes atendidas por especialidade e trimestre
  output$pc_dif_esf_plot <- renderPlotly({
    
    esf_pc_dif <- pc_esf %>% 
      filter(ESPECIALIDADE == input$pc_dif_esf_especialidade) %>%
      filter(UNIDADE == input$pc_dif_esfporcs)
    
    a<-ggplot(esf_pc_dif, aes(x = TRIMESTRE, y = VALOR, group = AREA, colour = AREA)) + 
      geom_line()+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))
    
    
    ggplotly(a)
    
  })
  
  
  #tabela do pc_dif - esf
  output$pc_dif_esf_tab <- renderDataTable({
    
    esf_pc_dif <- pc_esf %>% 
      filter(ESPECIALIDADE == input$pc_dif_esf_especialidade) %>%
      filter(UNIDADE == input$pc_dif_esfporcs)
    
    esf_pc_dif
    
  }, extensions = 'Buttons',
  options = list(
    "dom" = 'T<"clear">lBfrtip',
    buttons = list('copy', 'csv', 'pdf', 'print')))
  
  
  #informações do pc_dif - esf
  output$pc_dif_esf_info <- renderText({
    
    paste("<b>A.01.01)Pessoas diferentes atendidas em consultas médicas e de enfermagem</b>", "<br>",
          "<b>Fórmula:</b> Somatório de pessoas diferentes atendidas em consultas médicas e de enfermagem" , "<br>",
          "<b>Observações:</b> Soma de pessoas diferentes atendidas em qualquer dessas consultas." , "<br>",
          "Não foram considerados atividades coletivas e Atualização de prontuário", "<br>",
          "<b>A.01.02)Pessoas diferentes atendidas em consultas médicas</b>", "<br>",
          "<b>Fórmula:</b> Somatório de pessoas diferentes atendidas em consultas médicas", "<br>",
          "<b>Observações:</b> Não foram consideradas pessoas atendidas em atividades coletivas ou que tenham a consulta finalizada como Atualização de prontuário", "<br>",
          "<b>A.01.03)Pessoas diferentes atendidas em consultas enfermagem</b>", "<br>",
          "<b>Fórmula:</b> Somatório de pessoas diferentes atendidas em consultas de enfermagem", "<br>",
          "<b>Observações:</b> Não foram consideradas pessoas atendidas em atividades coletivas ou que tenham a consulta finalizada como Atualização de prontuário", "<br>",
          "<b>A.01.04)Pessoas diferentes atendidas em consultas odontológicas</b>", "<br>",
          "<b>Fórmula:</b> Somatório de pessoas diferentes atendidas em consultas odontológicas", "<br>",
          "<b>Observações:</b> Não foram consideradas pessoas atendidas em atividades coletivas ou que tenham a consulta finalizada como Atualização de prontuário", "<br>",
          "<b>A.01.05)Pessoas diferentes atendidas em todos os serviços</b>", "<br>",
          "<b>Fórmula:</b> Somatório de pessoas diferentes atendidas em consultas, procedimentos, dispensação de medicamentos e atividades coletivas nos últimos 2 anos")
    
  })
  
  
  ###########################################################################################
  #Demanda Espontânea
  ###########################################################################################
  
  #gráfico do percentual de demanda espontânea por especialidade e trimestre
  output$perc_dem_cons_esf_plot <- renderPlotly({
    
    esf_perc_dem_cons <- perc_dem_cons_esf %>% 
      filter(TIPO == input$perc_dem_cons_esf_especialidade) %>%
      filter(UNIDADE == input$perc_dem_cons_esfporcs)
    esf_perc_dem_cons$TRIMESTRE <- as.factor(esf_perc_dem_cons$TRIMESTRE)
    
    a<-ggplot(esf_perc_dem_cons, aes(x = TRIMESTRE, y = VALOR, group = AREA, colour = AREA)) + 
      geom_line()+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))
    
    
    ggplotly(a)
    
  })
  
  #tabela do percentual de dem_cons - esf
  output$perc_dem_cons_esf_tab <- renderDataTable({
    
    esf_perc_dem_cons <- perc_dem_cons_esf %>% 
      filter(TIPO == input$perc_dem_cons_esf_especialidade) %>%
      filter(UNIDADE == input$perc_dem_cons_esfporcs) 
    
    esf_perc_dem_cons
    
  })
  
  
  #informações do percentual de dem_cons - esf
  output$perc_dem_cons_esf_info <- renderText({
    
    paste("<b>A.02.01)Percentual de demanda espontânea atendida por médico</b>", "<br>",
          "<b>Fórmula:</b> Porcentagem de atendimentos médicos por demanda espontânea" , "<br>",
          "<b>A.02.02)Percentual de demanda espontânea atendida por enfermeiro</b>", "<br>",
          "<b>Fórmula:</b> Porcentagem de atendimentos de enfermeiros por demanda espontânea" , "<br>",
          "<b>A.02.03)Percentual de demanda espontânea atendida por odontólogo</b>", "<br>",
          "<b>Fórmula:</b> Porcentagem de atendimentos odontológicos por demanda espontânea" , "<br>")
  })
  
  ###########################################################################################
  #Testes Rápidos
  ###########################################################################################
  
  #gráfico da quantidade de testes rápidos e trimestre
  output$teste_rap_esf_plot <- renderPlotly({
    
    esf_teste_rap <- teste_rap_esf %>% 
      filter(PROCEDIMENTO == input$teste_rap_esf_procedimento)   %>%
      filter(UNIDADE == input$teste_rap_esfporcs)
    esf_teste_rap$TRIMESTRE <- as.factor(esf_teste_rap$TRIMESTRE)
    
    a<-ggplot(esf_teste_rap, aes(x = TRIMESTRE, y = VALOR, group = AREA, colour = AREA)) + 
      geom_line()+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))
    
    
    ggplotly(a)
    
  })
  
  #tabela do percentual de teste_rap - Florianópolis
  output$teste_rap_esf_tab <- renderDataTable({
    
    esf_teste_rap <- teste_rap_esf %>%
      filter(PROCEDIMENTO == input$teste_rap_esf_procedimento)   %>%
      filter(UNIDADE == input$teste_rap_esfporcs)
    
    esf_teste_rap
    
  })
  
  
  #informações do percentual de teste_rap - Florianópolis
  output$teste_rap_esf_info <- renderText({
    
 paste("<b>A.03.01)Total de testes rápidos para detecção do HIV na gestante ou pai/parceiro</b>", "<br>",
          "<b>Fórmula:</b> Somatório de testes rápidos para detecção do HIV na gestante ou pai/parceiro" , "<br>",
           "<b>A.03.02)Total de testes rápidos para detecção pelo HIV</b>", "<br>",
          "<b>Fórmula:</b> Somatório de testes rápidos para detecção pelo HIV" , "<br>",
          "<b>A.03.03)Total de testes rápidos para detecção de sífilis na gestante ou pai/parceiro</b>", "<br>",
          "<b>Fórmula:</b> Somatório de testes rápidos para detecção de sífilis na gestante ou pai/parceiro" , "<br>",
          "<b>A.03.04)Total de testes rápidos para detecção de sífilis</b>", "<br>",
          "<b>Fórmula:</b> Somatório de testes rápidos para detecção de sífilis" , "<br>",
          "<b>A.03.05)Total de testes rápidos para detecção de hepatite B</b>", "<br>",
          "<b>Fórmula:</b> Somatório de testes rápidos para detecção de hepatite B" , "<br>",
          "<b>A.03.06)Total de testes rápidos para detecção de hepatite C</b>", "<br>",
          "<b>Fórmula:</b> Somatório de testes rápidos para detecção de hepatite C" , "<br>")
           
  }) 
    
      
    
             
 ###########################################################################################                         
 #Falta em Consultas                                                           
 ###########################################################################################
   #gráfico 
  output$faltas_esf_plot <- renderPlotly({
                               
    
                                                      
    esf_faltas <- faltas_esf %>% 
      filter(TIPO == input$faltas_esf_tipo) %>%
      filter(UNIDADE == input$faltas_esfporcs)
    esf_faltas$TRIMESTRE <- as.factor(esf_faltas$TRIMESTRE)
    
    a<-ggplot(esf_faltas, aes(x = TRIMESTRE, y = VALOR, group = AREA, colour = AREA)) + 
      geom_line()+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))
    
    
    ggplotly(a)
    
  })
  
  #tabela 
  output$faltas_esf_tab <- renderDataTable({
    
    esf_faltas <- faltas_esf%>% 
      filter(TIPO == input$faltas_esf_tipo)%>%
      filter(UNIDADE == input$faltas_esfporcs)
    
    esf_faltas
    
  })
  
  
  #informações 
  output$faltas_esf_info <- renderText({
    
   paste("<b>A.04.01)Percentual de faltas em consultas odontológicas</b>", "<br>",
          "<b>Fórmula:</b> Somatório das faltas em consultas odontológicas/Somatório de consultas odontológicas * 100" , "<br>",
          "<b>A.04.02)Percentual de faltas em consultas médicas</b>", "<br>",
          "<b>Fórmula:</b> Somatório das faltas em consultas médicas/Somatório de consultas médicas * 100" , "<br>",
         "<b>A.04.03)Percentual de faltas em consultas de enfermagem</b>", "<br>",
          "<b>Fórmula:</b> Somatório das faltas em consultas de enfermagem/Somatório de consultas de enfermagem * 100" , "<br>")
           
  })                       
                        
 ###########################################################################################                         
 #Primeira Consulta Odontológica                                                           
 ###########################################################################################
   output$prim_cons_odonto_esf_plot <- renderPlotly({
    
    esf_prim_cons_odonto <- prim_cons_odonto_esf  %>%
      filter(UNIDADE == input$prim_cons_odonto_esfporcs)
    esf_prim_cons_odonto$TRIMESTRE <- as.factor(esf_prim_cons_odonto$TRIMESTRE)
    
    a<-ggplot(esf_prim_cons_odonto, aes(x = TRIMESTRE, y = VALOR, group = AREA, colour = AREA)) + 
      geom_line()+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))
    
    
    ggplotly(a)
    
  })
  

  output$prim_cons_odonto_esf_tab <- renderDataTable({
    
    esf_prim_cons_odonto <- prim_cons_odonto_esf%>%
      filter(UNIDADE == input$prim_cons_odonto_esfporcs)
    
    esf_prim_cons_odonto
    
  })
  
  

  output$prim_cons_odonto_esf_info <- renderText({
    
    paste("<b>A.05.01)Número de atendimentos de primeira consulta odontológica</b>", "<br>",
          "<b>Fórmula:</b> Somatório de atendimentos de primeira consulta odontológica","<br>")
          
  })                          
                        
 ###########################################################################################                         
 #Atendimento Inadequado na UPA                                                           
 ###########################################################################################
   output$atd_inad_upa_esf_plot <- renderPlotly({
    
    esf_atd_inad_upa <- atd_inad_upa_esf %>%
      filter(UNIDADE == input$atd_inad_upa_esfporcs)
    esf_atd_inad_upa$TRIMESTRE <- as.factor(esf_atd_inad_upa$TRIMESTRE)
    
    a<-ggplot(esf_atd_inad_upa, aes(x = TRIMESTRE, y = VALOR, group = AREA, colour = AREA)) + 
      geom_line()+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))
    
    
    ggplotly(a)
    
  })
  

  output$atd_inad_upa_esf_tab <- renderDataTable({
    
    esf_atd_inad_upa <- atd_inad_upa_esf%>%
      filter(UNIDADE == input$atd_inad_upa_esfporcs)
    
    esf_atd_inad_upa
    
  })
  
  

  output$atd_inad_upa_esf_info <- renderText({
    
    paste("<b>A.06.01)Número de atendimentos inadequados nas UPAS</b>", "<br>",
          "<b>Fórmula:</b> Somatório de atendimentos de baixo risco nas UPAS nos horários em que", "<br>",
          "os Centros de saúde estão abertos" , "<br>")
          
  })
                        
 
  
  
  ###########################################################################################
  #Dashboard Equipes Longitudinalidade
  ###########################################################################################
  ###########################################################################################                         
  #Seguimento Pré-natal                                                         
  ###########################################################################################
  #gráfico de pessoas diferentes atendidas por especialidade e trimestre
  output$gestantes_esf_plot <- renderPlotly({
    
    esf_gestantes <- gestantes_esf %>% 
      filter(TIPO == input$gestantes_esf_opcao) %>%
      filter(UNIDADE == input$longitudinalidade_esfporcs)
    
    a<-ggplot(esf_gestantes, aes(x = TRIMESTRE, y = VALOR, group = AREA, colour = AREA)) + 
      geom_line()+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))
    
    ggplotly(a)
    
  })
  
  #tabela do acesso - esf
  output$gestantes_esf_tab <- renderDataTable({
    
    esf_gestantes <- gestantes_esf %>% 
      filter(TIPO == input$gestantes_esf_opcao) %>%
      filter(UNIDADE == input$longitudinalidade_esfporcs)
    
    esf_gestantes
    
  }, extensions = 'Buttons',
  options = list(
    "dom" = 'T<"clear">lBfrtip',
    buttons = list('copy', 'csv', 'pdf', 'print')))
  
  
  #informações de integralidade - esf
  output$gestantes_esf_info <- renderText({
    
    
    paste("<b>L.01.01)Total de mulheres no terceiro trimestre de gestação</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de mulheres no terceiro trimestre de gestação no período" , "<br>",
          "<br>",
          "<b>L.01.02)Total de gestantes com pré-natal nos três trimestres</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de gestantes no terceiro trimestre que realizaram ao menos" , "<br>",
          "uma consulta em cada trimestre no período", "<br>",
          "<br>",
          "<b>L.01.03)Percentual de gestantes com pré-natal nos três trimestres</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de gestantes no terceiro trimestre que realizaram ao menos" , "<br>",
          "uma consulta em cada trimestre no período/Somatório do número de mulheres no terceiro trimestre" , "<br>",
          "de gestação no período *100 ", "<br>",
          "<br>",
          "<b>L.01.04)Total de gestantes com 7 ou mais consultas pré-natais</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de gestantes no terceiro trimestre com 7 ou mais consultas pré-natais" , "<br>",
          "<br>",
          "<b>L.01.05)Percentual de gestantes com 7 ou mais consultas pré-natais</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de gestantes no terceiro trimestre com 7 ou mais consultas pré-natais/" , "<br>",
          "Somatório do número de mulheres no terceiro trimestre de gestação no período *100 ", "<br>",
          "<br>")
  })

  ###########################################################################################
  #Citopatológico
  ###########################################################################################
  output$citopatologico_esf_plot <- renderPlotly({
    
    esf_citopatologico <- citopatologico_esf %>%
      filter(UNIDADE == input$citopatologico_esfporcs)
    esf_citopatologico$TRIMESTRE <- as.factor(esf_citopatologico$TRIMESTRE)
    
    a<-ggplot(esf_citopatologico, aes(x = TRIMESTRE, y = VALOR, group = AREA, colour = AREA)) + 
      geom_line()+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))
    
    
    ggplotly(a)
    
  })
  

  output$citopatologico_esf_tab <- renderDataTable({
    
    esf_citopatologico <- citopatologico_esf %>%
      filter(UNIDADE == input$citopatologico_esfporcs)
    
    esf_citopatologico
    
  })
  
  

  output$citopatologico_esf_info <- renderText({
    
    paste("<b>L.02.01)Percentual de exames citopatológicos realizados</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de citopatológicos realizados/(Somatório de mulheres diferentes entre 24 e 65 anos atendidas*(1/3)*100" , "<br>",
          "<b>Observação1:</b> Utilizou-se mulheres diferentes no trimestre." , "<br>",
          "<b>Observação2:</b> Como toda mulher nesta faixa etária deve fazer o citopatalógico, no mínimo de 3 em 3 anos. Multiplicou-se o denominador por 1/3" , "<br>"
          )
          
  })
  ###########################################################################################
  #Tratamento Odontológico
  ###########################################################################################
   output$tratam_compl_odonto_esf_plot <- renderPlotly({
    
    esf_tratam_compl_odonto <- tratam_compl_odonto_esf  %>%
      filter(UNIDADE == input$tratam_compl_odonto_esfporcs)
    esf_tratam_compl_odonto$TRIMESTRE <- as.factor(esf_tratam_compl_odonto$TRIMESTRE)
    
    a<-ggplot(esf_tratam_compl_odonto, aes(x = TRIMESTRE, y = VALOR, group = AREA, colour = AREA)) + 
      geom_line()+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))
    
    
    ggplotly(a)
    
  })
  

  output$tratam_compl_odonto_esf_tab <- renderDataTable({
    
    esf_tratam_compl_odonto <- tratam_compl_odonto_esf%>%
      filter(UNIDADE == input$tratam_compl_odonto_esfporcs)
    
    esf_tratam_compl_odonto
    
  })
  
  

  output$tratam_compl_odonto_esf_info <- renderText({
    
    paste("<b>L.03.01)Número de tratamentos odontológicos completados</b>", "<br>",
          "<b>Fórmula:</b> Somatório de tratamentos odontológicos completados","<br>")
          
  })     
  ###########################################################################################
  #Sífilis
  ###########################################################################################
  #gráfico 
  output$sifilis_esf_plot <- renderPlotly({
    
    esf_sifilis <- sifilis_esf %>% 
      filter(TIPO == input$sifilis_esf_opcao)%>%
      filter(UNIDADE == input$sifilis_esfporcs)
    
    a<-ggplot(esf_sifilis, aes(x = TRIMESTRE, y = VALOR, group = AREA, colour = AREA)) + 
      geom_line()+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))
    
    
    ggplotly(a)
    
  })
  
  
  #tabela 
  output$sifilis_esf_tab <- renderDataTable({
    
    esf_sifilis <- sifilis_esf %>% 
      filter(TIPO == input$sifilis_esf_opcao)%>%
      filter(UNIDADE == input$sifilis_esfporcs)
    
    esf_sifilis
    
  })
  
  
  #informações 
  output$sifilis_esf_info <- renderText({
    
    paste("<b>L.04.01)Total de casos de sífilis</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de casos de sífilis" , "<br>",
          "<br>",
          "<b>L.04.01)Total de casos de sífilis tratados</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de casos de sífilis tratados" , "<br>",
          "<br>",
          "<b>L.04.03)Percentual de sifilis tratados</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número casos de sífilis/Somatório do número casos de sífilis tratados * 100", "<br>")
  })
  
  ###########################################################################################
  #Dashboard Equipes de Saúde Integralidade
  ########################################################################################### 
  ###########################################################################################
  #Encaminhamentos Médicos
  ###########################################################################################

  output$encam_med_esf_plot <- renderPlotly({
    
    esf_encam_med <- encam_med_esf %>% 
      filter(TIPO == input$encam_med_esf_opcao) %>%
      filter(UNIDADE == input$encam_med_esfporcs)
    
    a<-ggplot(esf_encam_med, aes(x = TRIMESTRE, y = VALOR, group = AREA, colour = AREA)) + 
      geom_line()+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))
    
    
    ggplotly(a)
    
  })
  
  
  #tabela do acesso - esf
  output$encam_med_esf_tab <- renderDataTable({
    
    esf_encam_med <- encam_med_esf %>% 
      filter(TIPO == input$encam_med_esf_opcao) %>%
      filter(UNIDADE == input$encam_med_esfporcs)
    
    esf_encam_med
    
  }, extensions = 'Buttons',
  options = list(
    "dom" = 'T<"clear">lBfrtip',
    buttons = list('copy', 'csv', 'pdf', 'print')))
  
  
  #informações integralidade - esf
  output$encam_med_esf_info <- renderText({
    
    paste("<b>I.01.01)Número de consultas médicas realizadas</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de consultas médicas realizadas no período" , "<br>",
          "<br>",
          "<b>I.01.02)Número de encaminhamentos médicos realizados</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de encaminhamentos médicos realizados no período", "<br>",
          "<br>",
          "<b>I.01.03)Percentual de encaminhamentos médicos</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de encaminhamentos médicos realizados no período/Somatório do número de consultas médicas realizadas no período *100", "<br>")
    
  })
  
  ###########################################################################################
  #Procedimentos Complementares
  ###########################################################################################
 
  #gráfico de consultas e encaminhamentos e trimestre
  output$proc_compl_esf_plot1 <- renderPlotly({
    
    esf_proc_compl <- proc_compl_esf %>% 
      filter(ESPECIALIDADE == input$proc_compl_esf_opcao) %>%
      filter(UNIDADE == input$proc_compl_esfporcs)%>%
      filter(TIPO == "CANTOPLASTIA" | TIPO == "ADAPT_PROTESE")
    esf_proc_compl$TRIMESTRE <- as.factor(esf_proc_compl$TRIMESTRE)
    titulo <- ifelse(esf_proc_compl$TIPO == "CANTOPLASTIA", "Cantoplastia", "Adaptação de Prótese")
    
    a<-ggplot(esf_proc_compl, aes(x = TRIMESTRE, y = VALOR, group = AREA, colour = AREA)) + 
      geom_line()+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))+
      ggtitle(titulo)
    
    
    ggplotly(a)
    
  })
  
  #tabela de integralidade - Florianópolis
  output$proc_compl_esf_tab1 <- renderDataTable({
    
    esf_proc_compl <- proc_compl_esf %>% 
      filter(ESPECIALIDADE == input$proc_compl_esf_opcao) %>%
      filter(UNIDADE == input$proc_compl_esfporcs)%>%
      filter(TIPO == "CANTOPLASTIA" | TIPO == "ADAPT_PROTESE")
    
    esf_proc_compl
    
  })
  
  
  #informações do integralidade - Florianópolis
  output$proc_compl_esf_info1 <- renderText({
                                          
    paste("<b>I.02.01)Número de procedimentos médicos complementares realizados - Cantoplastia</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Cantoplastia - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.02)Número de procedimentos médicos complementares realizados - Drenagem de Abcesso</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Drenagem de Abcesso - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.03)Número de procedimentos médicos complementares realizados - Exérese de Cisto Sebáceo</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Exérese de Cisto Sebáceo - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.04)Número de procedimentos médicos complementares realizados - Retirada de Cerume</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Retirada de Cerume - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.05)Número de procedimentos médicos complementares realizados - Sutura</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Sutura - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.06)Número de procedimentos odontológicos complementares realizados - Adaptação de Protese</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Adaptação de Protese - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.07)Número de procedimentos odontológicos complementares realizados - Biópsia de Boca</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Biópsia de Boca - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.08)Número de procedimentos odontológicos complementares realizados - Exodontia de Dente Decíduo</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Exodontia de Dente Decíduo - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.09)Número de procedimentos odontológicos complementares realizados - Raspagem Subgengival</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Raspagem Subgengival - realizados no período" , "<br>",
          "<br>")
    
  })
   
  #gráfico de consultas e encaminhamentos e trimestre
  output$proc_compl_esf_plot2 <- renderPlotly({
    
    esf_proc_compl <- proc_compl_esf %>% 
      filter(ESPECIALIDADE == input$proc_compl_esf_opcao) %>% 
      filter(UNIDADE == input$proc_compl_esfporcs)%>%
      filter(TIPO == "DREN_ABCESSO" | TIPO == "BIOPSIA_BOCA")
    esf_proc_compl$TRIMESTRE <- as.factor(esf_proc_compl$TRIMESTRE)
    titulo <- ifelse(esf_proc_compl$TIPO == "DREN_ABCESSO", "Drenagem de Abcesso", "Biopsia de Boca")
    
    a<-ggplot(esf_proc_compl, aes(x = TRIMESTRE, y = VALOR, group = AREA, colour = AREA)) + 
      geom_line()+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))+
      ggtitle(titulo)
    
    
    ggplotly(a)
    
  })
  
  #tabela de integralidade - Florianópolis
  output$proc_compl_esf_tab2 <- renderDataTable({
    
    esf_proc_compl <- proc_compl_esf %>% 
      filter(ESPECIALIDADE == input$proc_compl_esf_opcao) %>%
      filter(UNIDADE == input$proc_compl_esfporcs)%>%
      filter(TIPO == "DREN_ABCESSO" | TIPO == "BIOPSIA_BOCA")
    
    esf_proc_compl
    
  })
  
  
  #informações do integralidade - Florianópolis
  output$proc_compl_esf_info2 <- renderText({
                                          
    paste("<b>I.02.01)Número de procedimentos médicos complementares realizados - Cantoplastia</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Cantoplastia - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.02)Número de procedimentos médicos complementares realizados - Drenagem de Abcesso</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Drenagem de Abcesso - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.03)Número de procedimentos médicos complementares realizados - Exérese de Cisto Sebáceo</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Exérese de Cisto Sebáceo - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.04)Número de procedimentos médicos complementares realizados - Retirada de Cerume</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Retirada de Cerume - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.05)Número de procedimentos médicos complementares realizados - Sutura</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Sutura - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.06)Número de procedimentos odontológicos complementares realizados - Adaptação de Protese</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Adaptação de Protese - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.07)Número de procedimentos odontológicos complementares realizados - Biópsia de Boca</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Biópsia de Boca - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.08)Número de procedimentos odontológicos complementares realizados - Exodontia de Dente Decíduo</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Exodontia de Dente Decíduo - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.09)Número de procedimentos odontológicos complementares realizados - Raspagem Subgengival</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Raspagem Subgengival - realizados no período" , "<br>",
          "<br>")
    
  })
   
  #gráfico de consultas e encaminhamentos e trimestre
  output$proc_compl_esf_plot3 <- renderPlotly({
    
    esf_proc_compl <- proc_compl_esf %>% 
      filter(ESPECIALIDADE == input$proc_compl_esf_opcao) %>%
      filter(UNIDADE == input$proc_compl_esfporcs)%>%
      filter(TIPO == "EXERESE_CISTO" | TIPO == "EXO_DESCIDUO")
    esf_proc_compl$TRIMESTRE <- as.factor(esf_proc_compl$TRIMESTRE)
    titulo <- ifelse(esf_proc_compl$TIPO == "EXERESE_CISTO", "Exérese de Cisto Sebáceo", "Exodontia de Dente Descíduo")
    
    a<-ggplot(esf_proc_compl, aes(x = TRIMESTRE, y = VALOR, group = AREA, colour = AREA)) + 
      geom_line()+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))+
      ggtitle(titulo)
    
    
    ggplotly(a)
    
  })
  
  #tabela de integralidade - Florianópolis
  output$proc_compl_esf_tab3 <- renderDataTable({
    
esf_proc_compl <- proc_compl_esf %>% 
      filter(ESPECIALIDADE == input$proc_compl_esf_opcao) %>%
      filter(UNIDADE == input$proc_compl_esfporcs)%>%
      filter(TIPO == "EXERESE_CISTO" | TIPO == "EXO_DESCIDUO")
    
    esf_proc_compl
    
  })
  
  
  #informações do integralidade - Florianópolis
  output$proc_compl_esf_info3 <- renderText({
                                          
    paste("<b>I.02.01)Número de procedimentos médicos complementares realizados - Cantoplastia</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Cantoplastia - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.02)Número de procedimentos médicos complementares realizados - Drenagem de Abcesso</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Drenagem de Abcesso - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.03)Número de procedimentos médicos complementares realizados - Exérese de Cisto Sebáceo</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Exérese de Cisto Sebáceo - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.04)Número de procedimentos médicos complementares realizados - Retirada de Cerume</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Retirada de Cerume - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.05)Número de procedimentos médicos complementares realizados - Sutura</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Sutura - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.06)Número de procedimentos odontológicos complementares realizados - Adaptação de Protese</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Adaptação de Protese - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.07)Número de procedimentos odontológicos complementares realizados - Biópsia de Boca</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Biópsia de Boca - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.08)Número de procedimentos odontológicos complementares realizados - Exodontia de Dente Decíduo</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Exodontia de Dente Decíduo - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.09)Número de procedimentos odontológicos complementares realizados - Raspagem Subgengival</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Raspagem Subgengival - realizados no período" , "<br>",
          "<br>")
    
  })
   
  #gráfico de consultas e encaminhamentos e trimestre
  output$proc_compl_esf_plot4 <- renderPlotly({
    
    esf_proc_compl <- proc_compl_esf %>% 
      filter(ESPECIALIDADE == input$proc_compl_esf_opcao) %>%
      filter(UNIDADE == input$proc_compl_esfporcs)%>%
      filter(TIPO == "RETIRADA_CERUME" | TIPO == "RASPAGEM_SUB")
    esf_proc_compl$TRIMESTRE <- as.factor(esf_proc_compl$TRIMESTRE)
    titulo <- ifelse(esf_proc_compl$TIPO == "RETIRADA_CERUME", "Retirada de Cerume", "Raspagem Subgengival")
    
    a<-ggplot(esf_proc_compl, aes(x = TRIMESTRE, y = VALOR, group = AREA, colour = AREA)) + 
      geom_line()+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))+
      ggtitle(titulo)
    
    
    ggplotly(a)
    
  })
  
  #tabela de integralidade - Florianópolis
  output$proc_compl_esf_tab4 <- renderDataTable({
    
  esf_proc_compl <- proc_compl_esf %>% 
      filter(ESPECIALIDADE == input$proc_compl_esf_opcao) %>%
      filter(UNIDADE == input$proc_compl_esfporcs)%>%
      filter(TIPO == "RETIRADA_CERUME" | TIPO == "RASPAGEM_SUB")
    
    esf_proc_compl
    
  })
  
  
  #informações do integralidade - Florianópolis
  output$proc_compl_esf_info4 <- renderText({
                                          
    paste("<b>I.02.01)Número de procedimentos médicos complementares realizados - Cantoplastia</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Cantoplastia - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.02)Número de procedimentos médicos complementares realizados - Drenagem de Abcesso</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Drenagem de Abcesso - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.03)Número de procedimentos médicos complementares realizados - Exérese de Cisto Sebáceo</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Exérese de Cisto Sebáceo - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.04)Número de procedimentos médicos complementares realizados - Retirada de Cerume</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Retirada de Cerume - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.05)Número de procedimentos médicos complementares realizados - Sutura</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Sutura - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.06)Número de procedimentos odontológicos complementares realizados - Adaptação de Protese</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Adaptação de Protese - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.07)Número de procedimentos odontológicos complementares realizados - Biópsia de Boca</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Biópsia de Boca - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.08)Número de procedimentos odontológicos complementares realizados - Exodontia de Dente Decíduo</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Exodontia de Dente Decíduo - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.09)Número de procedimentos odontológicos complementares realizados - Raspagem Subgengival</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Raspagem Subgengival - realizados no período" , "<br>",
          "<br>")
    
  })
   
  #gráfico de consultas e encaminhamentos e trimestre
  output$proc_compl_esf_plot5 <- renderPlotly({
    
    esf_proc_compl <- proc_compl_esf %>% 
      filter(ESPECIALIDADE == input$proc_compl_esf_opcao) %>%
      filter(UNIDADE == input$proc_compl_esfporcs)%>%
      filter(TIPO == "SUTURA")
    esf_proc_compl$TRIMESTRE <- as.factor(esf_proc_compl$TRIMESTRE)
    titulo <- ifelse(esf_proc_compl$TIPO == "SUTURA", "Sutura", " ")
    
    a<-ggplot(esf_proc_compl, aes(x = TRIMESTRE, y = VALOR, group = AREA, colour = AREA)) + 
      geom_line()+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))+
      ggtitle(titulo)
    
    
    ggplotly(a)
    
  })
  
  #tabela de integralidade - Florianópolis
  output$proc_compl_esf_tab5 <- renderDataTable({
    
  esf_proc_compl <- proc_compl_esf %>% 
      filter(ESPECIALIDADE == input$proc_compl_esf_opcao) %>%
      filter(UNIDADE == input$proc_compl_esfporcs)%>%
      filter(TIPO == "SUTURA")
    
    esf_proc_compl
    
  })
  
  
  #informações do integralidade - Florianópolis
  output$proc_compl_esf_info5 <- renderText({
                                          
    paste("<b>I.02.01)Número de procedimentos médicos complementares realizados - Cantoplastia</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Cantoplastia - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.02)Número de procedimentos médicos complementares realizados - Drenagem de Abcesso</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Drenagem de Abcesso - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.03)Número de procedimentos médicos complementares realizados - Exérese de Cisto Sebáceo</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Exérese de Cisto Sebáceo - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.04)Número de procedimentos médicos complementares realizados - Retirada de Cerume</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Retirada de Cerume - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.05)Número de procedimentos médicos complementares realizados - Sutura</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos médicos complementares realizados - Sutura - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.06)Número de procedimentos odontológicos complementares realizados - Adaptação de Protese</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Adaptação de Protese - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.07)Número de procedimentos odontológicos complementares realizados - Biópsia de Boca</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Biópsia de Boca - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.08)Número de procedimentos odontológicos complementares realizados - Exodontia de Dente Decíduo</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Exodontia de Dente Decíduo - realizados no período" , "<br>",
          "<br>",
          "<b>I.02.09)Número de procedimentos odontológicos complementares realizados - Raspagem Subgengival</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número procedimentos odontológicos complementares realizados - Raspagem Subgengival - realizados no período" , "<br>",
          "<br>")
    
  })
  

  ###########################################################################################                         
  #Gestantes com Consultas Odontológicas                                                           
  ###########################################################################################
     output$odonto_gestantes_esf_plot <- renderPlotly({
    
    esf_odonto_gestantes <- odonto_gestantes_esf %>% 
      filter(TIPO == input$odonto_gestantes_esf_opcao)%>%
      filter(UNIDADE == input$odonto_gestantes_esfporcs)
    
    a<-ggplot(esf_odonto_gestantes, aes(x = TRIMESTRE, y = VALOR, group = AREA, colour = AREA)) + 
      geom_line()+ 
      ylab("  ")+
      xlab("  ")+
      theme_classic()+
      theme(axis.text.x = element_text(angle = 90, hjust = 1))
    
    
    ggplotly(a)
    
  })
  
  
  
  output$odonto_gestantes_esf_tab <- renderDataTable({
    
    esf_odonto_gestantes <- odonto_gestantes_esf %>% 
      filter(TIPO == input$odonto_gestantes_esf_opcao)%>%
      filter(UNIDADE == input$odonto_gestantes_esfporcs)
    
    esf_odonto_gestantes
    
  })
  
  
  
  output$odonto_gestantes_esf_info <- renderText({
    
    paste("<b>I.03.01)Total de mulheres no terceiro trimestre de gestação</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de mulheres no terceiro trimestre de gestação no período" , "<br>",
          "<br>",
          "<b>I.03.02)Total de gestantes com 1 ou mais consultas odontológicas</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de gestantes no terceiro trimestre com 1 ou mais consultas odontológicas", "<br>",
          "<br>",
          "<b>I.03.03)Percentual de gestantes com 1 ou mais consultas odontológicas</b>", "<br>",
          "<b>Fórmula:</b> Somatório do número de gestantes no terceiro com 1 ou mais consultas odontológicas/" , "<br>",
          "Somatório do número de mulheres no terceiro trimestre de gestação no período *100 ", "<br>",
          "<br>")
  })                 
   
  
}    

###########################################################################################
shinyApp(ui, server)
